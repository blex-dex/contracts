{
  "abi": [
    {
      "inputs": [],
      "name": "MinOutError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinSharesError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cumulativeRewardPerToken",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "averageStakedAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "claimForAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimLPReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimableReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeRewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLPReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "grantControllerRoleByMarketManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_stakeToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_distributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vaultRewardToken",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lpEarnedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "previousCumulatedRewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stakeForAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstakeForAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a33610024565b6001600855610076565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612489806100856000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80638f089d651161015c578063afd6a5cc116100ce578063e950342511610087578063e95034251461058f578063eded3fda146105af578063eedbc776146105b7578063f2fde38b146105ca578063f5fc5076146105dd578063f7c618c1146105e657600080fd5b8063afd6a5cc14610528578063bfe109281461053b578063d547741f1461054e578063db0ed6a014610561578063dd62ed3e14610574578063e547bb911461058757600080fd5b8063a457c2d711610120578063a457c2d7146104b3578063a694fc3a146104c6578063a8d93627146104d9578063a9059cbb146104e1578063aaf5eb68146104f4578063ae8bcdf81461050857600080fd5b80638f089d651461046857806391d148541461047057806395d89b4114610483578063a217fddf1461048b578063a31802171461049357600080fd5b806339509351116101f557806370a08231116101b957806370a08231146103ed578063715018a61461041657806375829def1461041e5780637fe4a6981461043157806385e04aaa146104445780638da5cb5b1461045757600080fd5b806339509351146103745780633e158b0c14610387578063402914f51461038f57806344a08411146103a257806351ed6a30146103c257600080fd5b8063242831181161024757806324283118146102f9578063248a9ca31461030e5780632e17de78146103315780632f2ff15d14610344578063313ce5671461035757806336568abe1461036657600080fd5b806301ffc9a71461028457806306fdde03146102ac578063095ea7b3146102c157806318160ddd146102d457806323b872dd146102e6575b600080fd5b610297610292366004611edf565b6105f7565b60405190151581526020015b60405180910390f35b6102b461062e565b6040516102a39190611f2d565b6102976102cf366004611f7c565b6106c0565b6002545b6040519081526020016102a3565b6102976102f4366004611fa6565b6106d8565b61030c610307366004611f7c565b6106fc565b005b6102d861031c366004611fe2565b60009081526005602052604090206001015490565b61030c61033f366004611fe2565b610788565b61030c610352366004611ffb565b61080d565b604051601281526020016102a3565b61030c61027f366004611ffb565b610297610382366004611f7c565b610837565b61030c610859565b6102d861039d366004612027565b610877565b6102d86103b0366004612027565b600a6020526000908152604090205481565b600e546103d5906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b6102d86103fb366004612027565b6001600160a01b031660009081526020819052604090205490565b61030c610969565b61030c61042c366004612027565b61097b565b61030c61043f366004612027565b6109f0565b6010546103d5906001600160a01b031681565b6006546001600160a01b03166103d5565b6102d8610a1a565b61029761047e366004611ffb565b610a61565b6102b4610a8c565b6102d8600081565b6102d86104a1366004612027565b600d6020526000908152604090205481565b6102976104c1366004611f7c565b610a9b565b61030c6104d4366004611fe2565b610b16565b6102d8610b9f565b6102976104ef366004611f7c565b610c0d565b6102d86c0c9f2c9cd04674edea4000000081565b6102d8610516366004612027565b600b6020526000908152604090205481565b61030c610536366004612027565b610c1b565b600f546103d5906001600160a01b031681565b61030c61055c366004611ffb565b610c25565b61030c61056f3660046120e5565b610c4a565b6102d861058236600461217b565b610dc2565b61030c610ded565b6102d861059d366004612027565b600c6020526000908152604090205481565b6102d8610e13565b61030c6105c5366004611f7c565b610e1e565b61030c6105d8366004612027565b610e9f565b6102d860095481565b6010546001600160a01b03166103d5565b60006001600160e01b03198216637965db0b60e01b148061062857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461063d906121a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610669906121a5565b80156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b5050505050905090565b6000336106ce818585610f15565b5060019392505050565b6000336106e6858285611039565b6106f18585856110b3565b506001949350505050565b600e546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015610755573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077991906121df565b506107848282611257565b5050565b61079233826112c0565b600e546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078491906121df565b600082815260056020526040902060010154610828816113f2565b61083283836113fc565b505050565b6000336106ce81858561084a8383610dc2565b6108549190612217565b610f15565b610861611482565b61086b60006114db565b6108756001600855565b565b600080610883836116f9565b9050806000036108aa5750506001600160a01b03166000908152600c602052604090205490565b60006108b4611717565b905060006108d76c0c9f2c9cd04674edea400000006108d1611722565b9061176c565b905060006108f16108e8838561177f565b6009549061178b565b6001600160a01b0387166000908152600a602052604090205490915061095f90610940906c0c9f2c9cd04674edea400000009061093a90610933908690611797565b889061176c565b9061177f565b6001600160a01b0388166000908152600c60205260409020549061178b565b9695505050505050565b6109716117a3565b61087560006117fd565b6000610986816113f2565b6001600160a01b0382166109d15760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b60448201526064015b60405180910390fd5b6109dc60008361184f565b6109e5826117fd565b610784600033611859565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b761027f816113f2565b336000908152600b60205260408120548103610a365750600090565b336000908152600c6020908152604080832054600b90925290912054610a5c919061222a565b905090565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461063d906121a5565b60003381610aa98286610dc2565b905083811015610b095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109c8565b6106f18286868403610f15565b600e546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9191906121df565b50610b9c3382611257565b50565b600f546040805163a8d9362760e01b815290516000926001600160a01b03169163a8d936279160048083019260209291908290030181865afa158015610be9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c919061223d565b6000336106ce8185856110b3565b610b9c81826118c0565b600082815260056020526040902060010154610c40816113f2565b6108328383611859565b600654600160a81b900460ff1615808015610c7257506006546001600160a01b90910460ff16105b80610c935750303b158015610c935750600654600160a01b900460ff166001145b610cf65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109c8565b6006805460ff60a01b1916600160a01b1790558015610d23576006805460ff60a81b1916600160a81b1790555b610d2b611937565b610d358686611940565b600e80546001600160a01b038087166001600160a01b031992831617909255600f805486841690831617905560108054928516929091169190911790558015610dba576006805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610df5611482565b610dfd611959565b33610e0881806118c0565b506108756001600855565b6000610a5c33610877565b610e2882826112c0565b600e5460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083291906121df565b610ea76117a3565b6001600160a01b038116610f0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c8565b610b9c816117fd565b6001600160a01b038316610f775760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109c8565b6001600160a01b038216610fd85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109c8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110458484610dc2565b905060001981146110ad57818110156110a05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109c8565b6110ad8484848403610f15565b50505050565b6001600160a01b0383166111175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109c8565b6001600160a01b0382166111795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109c8565b6001600160a01b038316600090815260208190526040902054818110156111f15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109c8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36110ad565b80600260008282546112699190612217565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166113205760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016109c8565b6001600160a01b038216600090815260208190526040902054818110156113945760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016109c8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b610b9c81336119a3565b6114068282610a61565b6107845760008281526005602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561143e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6002600854036114d45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109c8565b6002600855565b60006114e56119fc565b905060006114f1611717565b60095490915081158015906115065750600083115b1561157957816115236c0c9f2c9cd04674edea4000000085612256565b61152d919061226d565b6115379082612217565b600981905560408051848152602081018390529192507f055418cabed8a0ec732dd9b1f84e69d3f33a8f9a70d721b7a6962a00c26a4572910160405180910390a15b806000036115875750505050565b6001600160a01b038416156110ad5760006115a1856116f9565b6001600160a01b0386166000908152600a6020526040812054919250906c0c9f2c9cd04674edea40000000906115d7908561222a565b6115e19084612256565b6115eb919061226d565b6001600160a01b0387166000908152600c602052604081205491925090611613908390612217565b6001600160a01b0388166000908152600c60209081526040808320849055600a90915290208590559050801580159061165457506000611652886116f9565b115b156116f0576001600160a01b0387166000908152600b602052604081205461167d908490612217565b90506116ca6116908261093a878761176c565b6001600160a01b038a166000908152600b6020908152604080832054600d909252909120546116c491859161093a9161176c565b9061178b565b6001600160a01b0389166000908152600d6020908152604080832093909355600b905220555b50505050505050565b6001600160a01b038116600090815260208190526040812054610628565b6000610a5c60025490565b600f54604080516376f69fed60e11b815290516000926001600160a01b03169163eded3fda9160048083019260209291908290030181865afa158015610be9573d6000803e3d6000fd5b60006117788284612256565b9392505050565b6000611778828461226d565b60006117788284612217565b6000611778828461222a565b6006546001600160a01b031633146108755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c8565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61078482826113fc565b6118638282610a61565b156107845760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6118c9826114db565b6001600160a01b0382166000908152600c6020526040812080549190556118f08282611a47565b604080516001600160a01b0384168152602081018390527fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba910160405180910390a1505050565b61087533611a6e565b600361194c83826122d5565b50600461083282826122d5565b33600090815260208190526040812054116108755760405162461bcd60e51b815260206004820152600a6024820152693737ba1037bbb73732b960b11b60448201526064016109c8565b6119ad8282610a61565b610784576119ba81611a91565b6119c5836020611aa3565b6040516020016119d6929190612395565b60408051601f198184030181529082905262461bcd60e51b82526109c891600401611f2d565b600f546040805163e4fc6b6d60e01b815290516000926001600160a01b03169163e4fc6b6d916004808301926020929190829003018187875af1158015610be9573d6000803e3d6000fd5b6107848282611a5e6010546001600160a01b031690565b6001600160a01b03169190611c3f565b42600755611a7b336117fd565b611a8660003361184f565b610b9c60008261184f565b60606106286001600160a01b03831660145b60606000611ab2836002612256565b611abd906002612217565b67ffffffffffffffff811115611ad557611ad5612042565b6040519080825280601f01601f191660200182016040528015611aff576020820181803683370190505b509050600360fc1b81600081518110611b1a57611b1a61240a565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611b4957611b4961240a565b60200101906001600160f81b031916908160001a9053506000611b6d846002612256565b611b78906001612217565b90505b6001811115611bf0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611bac57611bac61240a565b1a60f81b828281518110611bc257611bc261240a565b60200101906001600160f81b031916908160001a90535060049490941c93611be981612420565b9050611b7b565b5083156117785760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016109c8565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261083292869291600091611ccf918516908490611d4f565b9050805160001480611cf0575080806020019051810190611cf091906121df565b6108325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109c8565b6060611d5e8484600085611d66565b949350505050565b606082471015611dc75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109c8565b600080866001600160a01b03168587604051611de39190612437565b60006040518083038185875af1925050503d8060008114611e20576040519150601f19603f3d011682016040523d82523d6000602084013e611e25565b606091505b5091509150611e3687838387611e41565b979650505050505050565b60608315611eb0578251600003611ea9576001600160a01b0385163b611ea95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109c8565b5081611d5e565b611d5e8383815115611ec55781518083602001fd5b8060405162461bcd60e51b81526004016109c89190611f2d565b600060208284031215611ef157600080fd5b81356001600160e01b03198116811461177857600080fd5b60005b83811015611f24578181015183820152602001611f0c565b50506000910152565b6020815260008251806020840152611f4c816040850160208701611f09565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611f7757600080fd5b919050565b60008060408385031215611f8f57600080fd5b611f9883611f60565b946020939093013593505050565b600080600060608486031215611fbb57600080fd5b611fc484611f60565b9250611fd260208501611f60565b9150604084013590509250925092565b600060208284031215611ff457600080fd5b5035919050565b6000806040838503121561200e57600080fd5b8235915061201e60208401611f60565b90509250929050565b60006020828403121561203957600080fd5b61177882611f60565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261206957600080fd5b813567ffffffffffffffff8082111561208457612084612042565b604051601f8301601f19908116603f011681019082821181831017156120ac576120ac612042565b816040528381528660208588010111156120c557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156120fd57600080fd5b853567ffffffffffffffff8082111561211557600080fd5b61212189838a01612058565b9650602088013591508082111561213757600080fd5b5061214488828901612058565b94505061215360408701611f60565b925061216160608701611f60565b915061216f60808701611f60565b90509295509295909350565b6000806040838503121561218e57600080fd5b61219783611f60565b915061201e60208401611f60565b600181811c908216806121b957607f821691505b6020821081036121d957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156121f157600080fd5b8151801515811461177857600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561062857610628612201565b8181038181111561062857610628612201565b60006020828403121561224f57600080fd5b5051919050565b808202811582820484141761062857610628612201565b60008261228a57634e487b7160e01b600052601260045260246000fd5b500490565b601f82111561083257600081815260208120601f850160051c810160208610156122b65750805b601f850160051c820191505b81811015610dba578281556001016122c2565b815167ffffffffffffffff8111156122ef576122ef612042565b612303816122fd84546121a5565b8461228f565b602080601f83116001811461233857600084156123205750858301515b600019600386901b1c1916600185901b178555610dba565b600085815260208120601f198616915b8281101561236757888601518255948401946001909101908401612348565b50858210156123855787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516123cd816017850160208801611f09565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123fe816028840160208801611f09565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b60008161242f5761242f612201565b506000190190565b60008251612449818460208701611f09565b919091019291505056fea2646970667358221220a6347f247788d6136e3f434df3fa69775bbd8e5bd6b9777532ff04826b13f87a64736f6c63430008110033",
    "sourceMap": "420:2918:89:-:0;;;;;;;;;;;;-1:-1:-1;936:32:175;719:10:201;936:18:175;:32::i;:::-;1716:1:187;1821:7;:22;420:2918:89;;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;420:2918:89:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061027f5760003560e01c80638f089d651161015c578063afd6a5cc116100ce578063e950342511610087578063e95034251461058f578063eded3fda146105af578063eedbc776146105b7578063f2fde38b146105ca578063f5fc5076146105dd578063f7c618c1146105e657600080fd5b8063afd6a5cc14610528578063bfe109281461053b578063d547741f1461054e578063db0ed6a014610561578063dd62ed3e14610574578063e547bb911461058757600080fd5b8063a457c2d711610120578063a457c2d7146104b3578063a694fc3a146104c6578063a8d93627146104d9578063a9059cbb146104e1578063aaf5eb68146104f4578063ae8bcdf81461050857600080fd5b80638f089d651461046857806391d148541461047057806395d89b4114610483578063a217fddf1461048b578063a31802171461049357600080fd5b806339509351116101f557806370a08231116101b957806370a08231146103ed578063715018a61461041657806375829def1461041e5780637fe4a6981461043157806385e04aaa146104445780638da5cb5b1461045757600080fd5b806339509351146103745780633e158b0c14610387578063402914f51461038f57806344a08411146103a257806351ed6a30146103c257600080fd5b8063242831181161024757806324283118146102f9578063248a9ca31461030e5780632e17de78146103315780632f2ff15d14610344578063313ce5671461035757806336568abe1461036657600080fd5b806301ffc9a71461028457806306fdde03146102ac578063095ea7b3146102c157806318160ddd146102d457806323b872dd146102e6575b600080fd5b610297610292366004611edf565b6105f7565b60405190151581526020015b60405180910390f35b6102b461062e565b6040516102a39190611f2d565b6102976102cf366004611f7c565b6106c0565b6002545b6040519081526020016102a3565b6102976102f4366004611fa6565b6106d8565b61030c610307366004611f7c565b6106fc565b005b6102d861031c366004611fe2565b60009081526005602052604090206001015490565b61030c61033f366004611fe2565b610788565b61030c610352366004611ffb565b61080d565b604051601281526020016102a3565b61030c61027f366004611ffb565b610297610382366004611f7c565b610837565b61030c610859565b6102d861039d366004612027565b610877565b6102d86103b0366004612027565b600a6020526000908152604090205481565b600e546103d5906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b6102d86103fb366004612027565b6001600160a01b031660009081526020819052604090205490565b61030c610969565b61030c61042c366004612027565b61097b565b61030c61043f366004612027565b6109f0565b6010546103d5906001600160a01b031681565b6006546001600160a01b03166103d5565b6102d8610a1a565b61029761047e366004611ffb565b610a61565b6102b4610a8c565b6102d8600081565b6102d86104a1366004612027565b600d6020526000908152604090205481565b6102976104c1366004611f7c565b610a9b565b61030c6104d4366004611fe2565b610b16565b6102d8610b9f565b6102976104ef366004611f7c565b610c0d565b6102d86c0c9f2c9cd04674edea4000000081565b6102d8610516366004612027565b600b6020526000908152604090205481565b61030c610536366004612027565b610c1b565b600f546103d5906001600160a01b031681565b61030c61055c366004611ffb565b610c25565b61030c61056f3660046120e5565b610c4a565b6102d861058236600461217b565b610dc2565b61030c610ded565b6102d861059d366004612027565b600c6020526000908152604090205481565b6102d8610e13565b61030c6105c5366004611f7c565b610e1e565b61030c6105d8366004612027565b610e9f565b6102d860095481565b6010546001600160a01b03166103d5565b60006001600160e01b03198216637965db0b60e01b148061062857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461063d906121a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610669906121a5565b80156106b65780601f1061068b576101008083540402835291602001916106b6565b820191906000526020600020905b81548152906001019060200180831161069957829003601f168201915b5050505050905090565b6000336106ce818585610f15565b5060019392505050565b6000336106e6858285611039565b6106f18585856110b3565b506001949350505050565b600e546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015610755573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077991906121df565b506107848282611257565b5050565b61079233826112c0565b600e546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078491906121df565b600082815260056020526040902060010154610828816113f2565b61083283836113fc565b505050565b6000336106ce81858561084a8383610dc2565b6108549190612217565b610f15565b610861611482565b61086b60006114db565b6108756001600855565b565b600080610883836116f9565b9050806000036108aa5750506001600160a01b03166000908152600c602052604090205490565b60006108b4611717565b905060006108d76c0c9f2c9cd04674edea400000006108d1611722565b9061176c565b905060006108f16108e8838561177f565b6009549061178b565b6001600160a01b0387166000908152600a602052604090205490915061095f90610940906c0c9f2c9cd04674edea400000009061093a90610933908690611797565b889061176c565b9061177f565b6001600160a01b0388166000908152600c60205260409020549061178b565b9695505050505050565b6109716117a3565b61087560006117fd565b6000610986816113f2565b6001600160a01b0382166109d15760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b60448201526064015b60405180910390fd5b6109dc60008361184f565b6109e5826117fd565b610784600033611859565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b761027f816113f2565b336000908152600b60205260408120548103610a365750600090565b336000908152600c6020908152604080832054600b90925290912054610a5c919061222a565b905090565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461063d906121a5565b60003381610aa98286610dc2565b905083811015610b095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109c8565b6106f18286868403610f15565b600e546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9191906121df565b50610b9c3382611257565b50565b600f546040805163a8d9362760e01b815290516000926001600160a01b03169163a8d936279160048083019260209291908290030181865afa158015610be9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c919061223d565b6000336106ce8185856110b3565b610b9c81826118c0565b600082815260056020526040902060010154610c40816113f2565b6108328383611859565b600654600160a81b900460ff1615808015610c7257506006546001600160a01b90910460ff16105b80610c935750303b158015610c935750600654600160a01b900460ff166001145b610cf65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109c8565b6006805460ff60a01b1916600160a01b1790558015610d23576006805460ff60a81b1916600160a81b1790555b610d2b611937565b610d358686611940565b600e80546001600160a01b038087166001600160a01b031992831617909255600f805486841690831617905560108054928516929091169190911790558015610dba576006805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610df5611482565b610dfd611959565b33610e0881806118c0565b506108756001600855565b6000610a5c33610877565b610e2882826112c0565b600e5460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083291906121df565b610ea76117a3565b6001600160a01b038116610f0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c8565b610b9c816117fd565b6001600160a01b038316610f775760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109c8565b6001600160a01b038216610fd85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109c8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110458484610dc2565b905060001981146110ad57818110156110a05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109c8565b6110ad8484848403610f15565b50505050565b6001600160a01b0383166111175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109c8565b6001600160a01b0382166111795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109c8565b6001600160a01b038316600090815260208190526040902054818110156111f15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109c8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36110ad565b80600260008282546112699190612217565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166113205760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016109c8565b6001600160a01b038216600090815260208190526040902054818110156113945760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016109c8565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b610b9c81336119a3565b6114068282610a61565b6107845760008281526005602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561143e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6002600854036114d45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109c8565b6002600855565b60006114e56119fc565b905060006114f1611717565b60095490915081158015906115065750600083115b1561157957816115236c0c9f2c9cd04674edea4000000085612256565b61152d919061226d565b6115379082612217565b600981905560408051848152602081018390529192507f055418cabed8a0ec732dd9b1f84e69d3f33a8f9a70d721b7a6962a00c26a4572910160405180910390a15b806000036115875750505050565b6001600160a01b038416156110ad5760006115a1856116f9565b6001600160a01b0386166000908152600a6020526040812054919250906c0c9f2c9cd04674edea40000000906115d7908561222a565b6115e19084612256565b6115eb919061226d565b6001600160a01b0387166000908152600c602052604081205491925090611613908390612217565b6001600160a01b0388166000908152600c60209081526040808320849055600a90915290208590559050801580159061165457506000611652886116f9565b115b156116f0576001600160a01b0387166000908152600b602052604081205461167d908490612217565b90506116ca6116908261093a878761176c565b6001600160a01b038a166000908152600b6020908152604080832054600d909252909120546116c491859161093a9161176c565b9061178b565b6001600160a01b0389166000908152600d6020908152604080832093909355600b905220555b50505050505050565b6001600160a01b038116600090815260208190526040812054610628565b6000610a5c60025490565b600f54604080516376f69fed60e11b815290516000926001600160a01b03169163eded3fda9160048083019260209291908290030181865afa158015610be9573d6000803e3d6000fd5b60006117788284612256565b9392505050565b6000611778828461226d565b60006117788284612217565b6000611778828461222a565b6006546001600160a01b031633146108755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c8565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61078482826113fc565b6118638282610a61565b156107845760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6118c9826114db565b6001600160a01b0382166000908152600c6020526040812080549190556118f08282611a47565b604080516001600160a01b0384168152602081018390527fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba910160405180910390a1505050565b61087533611a6e565b600361194c83826122d5565b50600461083282826122d5565b33600090815260208190526040812054116108755760405162461bcd60e51b815260206004820152600a6024820152693737ba1037bbb73732b960b11b60448201526064016109c8565b6119ad8282610a61565b610784576119ba81611a91565b6119c5836020611aa3565b6040516020016119d6929190612395565b60408051601f198184030181529082905262461bcd60e51b82526109c891600401611f2d565b600f546040805163e4fc6b6d60e01b815290516000926001600160a01b03169163e4fc6b6d916004808301926020929190829003018187875af1158015610be9573d6000803e3d6000fd5b6107848282611a5e6010546001600160a01b031690565b6001600160a01b03169190611c3f565b42600755611a7b336117fd565b611a8660003361184f565b610b9c60008261184f565b60606106286001600160a01b03831660145b60606000611ab2836002612256565b611abd906002612217565b67ffffffffffffffff811115611ad557611ad5612042565b6040519080825280601f01601f191660200182016040528015611aff576020820181803683370190505b509050600360fc1b81600081518110611b1a57611b1a61240a565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611b4957611b4961240a565b60200101906001600160f81b031916908160001a9053506000611b6d846002612256565b611b78906001612217565b90505b6001811115611bf0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611bac57611bac61240a565b1a60f81b828281518110611bc257611bc261240a565b60200101906001600160f81b031916908160001a90535060049490941c93611be981612420565b9050611b7b565b5083156117785760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016109c8565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261083292869291600091611ccf918516908490611d4f565b9050805160001480611cf0575080806020019051810190611cf091906121df565b6108325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109c8565b6060611d5e8484600085611d66565b949350505050565b606082471015611dc75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109c8565b600080866001600160a01b03168587604051611de39190612437565b60006040518083038185875af1925050503d8060008114611e20576040519150601f19603f3d011682016040523d82523d6000602084013e611e25565b606091505b5091509150611e3687838387611e41565b979650505050505050565b60608315611eb0578251600003611ea9576001600160a01b0385163b611ea95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109c8565b5081611d5e565b611d5e8383815115611ec55781518083602001fd5b8060405162461bcd60e51b81526004016109c89190611f2d565b600060208284031215611ef157600080fd5b81356001600160e01b03198116811461177857600080fd5b60005b83811015611f24578181015183820152602001611f0c565b50506000910152565b6020815260008251806020840152611f4c816040850160208701611f09565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611f7757600080fd5b919050565b60008060408385031215611f8f57600080fd5b611f9883611f60565b946020939093013593505050565b600080600060608486031215611fbb57600080fd5b611fc484611f60565b9250611fd260208501611f60565b9150604084013590509250925092565b600060208284031215611ff457600080fd5b5035919050565b6000806040838503121561200e57600080fd5b8235915061201e60208401611f60565b90509250929050565b60006020828403121561203957600080fd5b61177882611f60565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261206957600080fd5b813567ffffffffffffffff8082111561208457612084612042565b604051601f8301601f19908116603f011681019082821181831017156120ac576120ac612042565b816040528381528660208588010111156120c557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156120fd57600080fd5b853567ffffffffffffffff8082111561211557600080fd5b61212189838a01612058565b9650602088013591508082111561213757600080fd5b5061214488828901612058565b94505061215360408701611f60565b925061216160608701611f60565b915061216f60808701611f60565b90509295509295909350565b6000806040838503121561218e57600080fd5b61219783611f60565b915061201e60208401611f60565b600181811c908216806121b957607f821691505b6020821081036121d957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156121f157600080fd5b8151801515811461177857600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561062857610628612201565b8181038181111561062857610628612201565b60006020828403121561224f57600080fd5b5051919050565b808202811582820484141761062857610628612201565b60008261228a57634e487b7160e01b600052601260045260246000fd5b500490565b601f82111561083257600081815260208120601f850160051c810160208610156122b65750805b601f850160051c820191505b81811015610dba578281556001016122c2565b815167ffffffffffffffff8111156122ef576122ef612042565b612303816122fd84546121a5565b8461228f565b602080601f83116001811461233857600084156123205750858301515b600019600386901b1c1916600185901b178555610dba565b600085815260208120601f198616915b8281101561236757888601518255948401946001909101908401612348565b50858210156123855787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516123cd816017850160208801611f09565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123fe816028840160208801611f09565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b60008161242f5761242f612201565b506000190190565b60008251612449818460208701611f09565b919091019291505056fea2646970667358221220a6347f247788d6136e3f434df3fa69775bbd8e5bd6b9777532ff04826b13f87a64736f6c63430008110033",
    "sourceMap": "420:2918:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:173;;;;;;:::i;:::-;;:::i;:::-;;;470:14:232;;463:22;445:41;;433:2;418:18;2732:202:173;;;;;;;;2258:98:65;;;:::i;:::-;;;;;;;:::i;4593:219::-;;;;;;:::i;:::-;;:::i;3346:106::-;3433:12;;3346:106;;;1736:25:232;;;1724:2;1709:18;3346:106:65;1590:177:232;5374:286:65;;;;;;:::i;:::-;;:::i;1154:219:89:-;;;;;;:::i;:::-;;:::i;:::-;;4504:129:173;;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;:22;;;;4504:129;1379:159:89;;;;;;:::i;:::-;;:::i;4929:145:173:-;;;;;;:::i;:::-;;:::i;3195:91:65:-;;;3277:2;3058:36:232;;3046:2;3031:18;3195:91:65;2916:184:232;3631:136:1;;;;;;:::i;6055:256:65:-;;;;;;:::i;:::-;;:::i;1529:90:96:-;;;:::i;6513:810::-;;;;;;:::i;:::-;;:::i;881:66::-;;;;;;:::i;:::-;;;;;;;;;;;;;;478:25:89;;;;;-1:-1:-1;;;;;478:25:89;;;;;;-1:-1:-1;;;;;3460:32:232;;;3442:51;;3430:2;3415:18;478:25:89;3296:203:232;3510:139:65;;;;;;:::i;:::-;-1:-1:-1;;;;;3624:18:65;3598:7;3624:18;;;;;;;;;;;;3510:139;1824:101:175;;;:::i;2494:262:1:-;;;;;;:::i;:::-;;:::i;3188:281::-;;;;;;:::i;:::-;;:::i;541:31:89:-;;;;;-1:-1:-1;;;;;541:31:89;;;1201:85:175;1273:6;;-1:-1:-1;;;;;1273:6:175;1201:85;;7794:190:96;;;:::i;3021:145:173:-;;;;;;:::i;:::-;;:::i;2469:102:65:-;;;:::i;2153:49:173:-;;2198:4;2153:49;;1065:55:96;;;;;;:::i;:::-;;;;;;;;;;;;;;6798:483:65;;;;;;:::i;:::-;;:::i;991:157:89:-;;;;;;:::i;:::-;;:::i;2189:195::-;;;:::i;3845:211:65:-;;;;;;:::i;:::-;;:::i;722:73:96:-;;571:4:114;722:73:96;;953:50;;;;;;:::i;:::-;;;;;;;;;;;;;;1754:126:89;;;;;;:::i;:::-;;:::i;509:26::-;;;;;-1:-1:-1;;;;;509:26:89;;;5354:147:173;;;;;;:::i;:::-;;:::i;579:406:89:-;;;;;;:::i;:::-;;:::i;4114:171:65:-;;;;;;:::i;:::-;;:::i;2236:163:96:-;;;:::i;1009:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;5061:103;;;:::i;1544:204:89:-;;;;;;:::i;:::-;;:::i;2074:198:175:-;;;;;;:::i;:::-;;:::i;835:39:96:-;;;;;;2390:110:89;2477:16;;-1:-1:-1;;;;;2477:16:89;2390:110;;2732:202:173;2817:4;-1:-1:-1;;;;;;2840:47:173;;-1:-1:-1;;;2840:47:173;;:87;;-1:-1:-1;;;;;;;;;;937:40:208;;;2891:36:173;2833:94;2732:202;-1:-1:-1;;2732:202:173:o;2258:98:65:-;2312:13;2344:5;2337:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2258:98;:::o;4593:219::-;4698:4;719:10:201;4752:32:65;719:10:201;4768:7:65;4777:6;4752:8;:32::i;:::-;-1:-1:-1;4801:4:65;;4593:219;-1:-1:-1;;;4593:219:65:o;5374:286::-;5501:4;719:10:201;5557:38:65;5573:4;719:10:201;5588:6:65;5557:15;:38::i;:::-;5605:27;5615:4;5621:2;5625:6;5605:9;:27::i;:::-;-1:-1:-1;5649:4:65;;5374:286;-1:-1:-1;;;;5374:286:65:o;1154:219:89:-;1278:10;;1272:62;;-1:-1:-1;;;1272:62:89;;-1:-1:-1;;;;;6040:15:232;;;1272:62:89;;;6022:34:232;1320:4:89;6072:18:232;;;6065:43;6124:18;;;6117:34;;;1278:10:89;;;;1272:30;;5957:18:232;;1272:62:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1344:22;1350:7;1359:6;1344:5;:22::i;:::-;1154:219;;:::o;1379:159::-;1431:25;1437:10;1449:6;1431:5;:25::i;:::-;1472:10;;1466:65;;-1:-1:-1;;;1466:65:89;;1505:4;1466:65;;;6022:34:232;1512:10:89;6072:18:232;;;6065:43;6124:18;;;6117:34;;;-1:-1:-1;;;;;1472:10:89;;;;1466:30;;5957:18:232;;1466:65:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4929:145:173:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6055:256:65:-;6165:4;719:10:201;6219:64:65;719:10:201;6235:7:65;6272:10;6244:25;719:10:201;6235:7:65;6244:9;:25::i;:::-;:38;;;;:::i;:::-;6219:8;:64::i;1529:90:96:-;2261:21:187;:19;:21::i;:::-;1586:26:96::1;1609:1;1586:14;:26::i;:::-;2303:20:187::0;1716:1;2809:7;:22;2629:209;2303:20;1529:90:96:o;6513:810::-;6571:7;6590:20;6613:23;6627:8;6613:13;:23::i;:::-;6590:46;;6650:12;6666:1;6650:17;6646:80;;-1:-1:-1;;;;;;;6690:25:96;;;;;:15;:25;;;;;;;6513:810::o;6646:80::-;6735:14;6752:18;:16;:18::i;:::-;6735:35;;6780:23;6806:42;571:4:114;6806:27:96;:25;:27::i;:::-;:31;;:42::i;:::-;6780:68;-1:-1:-1;6858:36:96;6897:79;6939:27;6780:68;6959:6;6939:19;:27::i;:::-;6897:24;;;:28;:79::i;:::-;-1:-1:-1;;;;;7177:41:96;;;;;;:31;:41;;;;;;6858:118;;-1:-1:-1;7005:311:96;;7052:250;;571:4:114;;7052:214:96;;7115:129;;6858:118;;7115:32;:129::i;:::-;7052:12;;:37;:214::i;:::-;:239;;:250::i;:::-;-1:-1:-1;;;;;7005:25:96;;;;;;:15;:25;;;;;;;:29;:311::i;:::-;6986:330;6513:810;-1:-1:-1;;;;;;6513:810:96:o;1824:101:175:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;2494:262:1:-:0;2198:4:173;2631:16;2198:4;2631:10;:16::i;:::-;-1:-1:-1;;;;;2585:16:1;::::1;2577:42;;;::::0;-1:-1:-1;;;2577:42:1;;6908:2:232;2577:42:1::1;::::0;::::1;6890:21:232::0;6947:2;6927:18;;;6920:30;-1:-1:-1;;;6966:18:232;;;6959:43;7019:18;;2577:42:1::1;;;;;;;;;2630:34;2198:4:173;2661:2:1::0;2630:10:::1;:34::i;:::-;2674:22;2693:2;2674:18;:22::i;:::-;2706:43;2198:4:173;2738:10:1;2706:11;:43::i;3188:281::-:0;1116:28;2631:16:173;2642:4;2631:10;:16::i;7794:190:96:-;7877:10;7838:7;7861:27;;;:15;:27;;;;;;:32;;7857:46;;-1:-1:-1;7902:1:96;;7794:190::o;7857:46::-;7966:10;7950:27;;;;:15;:27;;;;;;;;;7920:15;:27;;;;;;;:57;;7950:27;7920:57;:::i;:::-;7913:64;;7794:190;:::o;3021:145:173:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:173;;;;;;;;;;;;;;;3021:145::o;2469:102:65:-;2525:13;2557:7;2550:14;;;;;:::i;6798:483::-;6913:4;719:10:201;6913:4:65;6994:25;719:10:201;7011:7:65;6994:9;:25::i;:::-;6967:52;;7070:15;7050:16;:35;;7029:119;;;;-1:-1:-1;;;7029:119:65;;7383:2:232;7029:119:65;;;7365:21:232;7422:2;7402:18;;;7395:30;7461:34;7441:18;;;7434:62;-1:-1:-1;;;7512:18:232;;;7505:35;7557:19;;7029:119:65;7181:401:232;7029:119:65;7182:60;7191:5;7198:7;7226:15;7207:16;:34;7182:8;:60::i;991:157:89:-;1047:10;;1041:65;;-1:-1:-1;;;1041:65:89;;1072:10;1041:65;;;6022:34:232;1092:4:89;6072:18:232;;;6065:43;6124:18;;;6117:34;;;-1:-1:-1;;;;;1047:10:89;;;;1041:30;;5957:18:232;;1041:65:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1116:25;1122:10;1134:6;1116:5;:25::i;:::-;991:157;:::o;2189:195::-;2345:11;;2326:51;;;-1:-1:-1;;;2326:51:89;;;;2296:7;;-1:-1:-1;;;;;2345:11:89;;2326:49;;:51;;;;;;;;;;;;;;2345:11;2326:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3845:211:65:-;3946:4;719:10:201;4000:28:65;719:10:201;4017:2:65;4021:6;4000:9;:28::i;1754:126:89:-;1837:36;1854:8;1864;1837:16;:36::i;5354:147:173:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;579:406:89:-:0;3302:13:163;;-1:-1:-1;;;3302:13:163;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:163;;3380:1;-1:-1:-1;;;3365:12:163;;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:163;1713:19:166;:23;;;3387:66:163;;-1:-1:-1;3436:12:163;;-1:-1:-1;;;3436:12:163;;;;3452:1;3436:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:163;;7978:2:232;3325:201:163;;;7960:21:232;8017:2;7997:18;;;7990:30;8056:34;8036:18;;;8029:62;-1:-1:-1;;;8107:18:232;;;8100:44;8161:19;;3325:201:163;7776:410:232;3325:201:163;3536:12;:16;;-1:-1:-1;;;;3536:16:163;-1:-1:-1;;;3536:16:163;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;;;3596:20:163;-1:-1:-1;;;3596:20:163;;;3562:65;790:29:89::1;:27;:29::i;:::-;829:33;847:5;854:7;829:17;:33::i;:::-;872:10;:24:::0;;-1:-1:-1;;;;;872:24:89;;::::1;-1:-1:-1::0;;;;;;872:24:89;;::::1;;::::0;;;906:11:::1;:26:::0;;;;::::1;::::0;;::::1;;::::0;;942:16:::1;:36:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3647:99:163;;;;3681:13;:21;;-1:-1:-1;;;;3681:21:163;;;3721:14;;-1:-1:-1;3058:36:232;;3721:14:163;;3046:2:232;3031:18;3721:14:163;;;;;;;3647:99;3269:483;579:406:89;;;;;:::o;4114:171:65:-;-1:-1:-1;;;;;4251:18:65;;;4225:7;4251:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4114:171::o;2236:163:96:-;2261:21:187;:19;:21::i;:::-;2291:16:96::1;:14;:16::i;:::-;2336:10;2356:36;2336:10:::0;;2356:16:::1;:36::i;:::-;2281:118;2303:20:187::0;1716:1;2809:7;:22;2629:209;5061:103:96;5110:7;5136:21;5146:10;5136:9;:21::i;1544:204:89:-;1666:22;1672:7;1681:6;1666:5;:22::i;:::-;1704:10;;1698:43;;-1:-1:-1;;;1698:43:89;;-1:-1:-1;;;;;8582:32:232;;;1698:43:89;;;8564:51:232;8631:18;;;8624:34;;;1704:10:89;;;;1698:26;;8537:18:232;;1698:43:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2074:198:175:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:175;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:175;;8871:2:232;2154:73:175::1;::::0;::::1;8853:21:232::0;8910:2;8890:18;;;8883:30;8949:34;8929:18;;;8922:62;-1:-1:-1;;;9000:18:232;;;8993:36;9046:19;;2154:73:175::1;8669:402:232::0;2154:73:175::1;2237:28;2256:8;2237:18;:28::i;10803:370:65:-:0;-1:-1:-1;;;;;10934:19:65;;10926:68;;;;-1:-1:-1;;;10926:68:65;;9278:2:232;10926:68:65;;;9260:21:232;9317:2;9297:18;;;9290:30;9356:34;9336:18;;;9329:62;-1:-1:-1;;;9407:18:232;;;9400:34;9451:19;;10926:68:65;9076:400:232;10926:68:65;-1:-1:-1;;;;;11012:21:65;;11004:68;;;;-1:-1:-1;;;11004:68:65;;9683:2:232;11004:68:65;;;9665:21:232;9722:2;9702:18;;;9695:30;9761:34;9741:18;;;9734:62;-1:-1:-1;;;9812:18:232;;;9805:32;9854:19;;11004:68:65;9481:398:232;11004:68:65;-1:-1:-1;;;;;11083:18:65;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11134:32;;1736:25:232;;;11134:32:65;;1709:18:232;11134:32:65;;;;;;;10803:370;;;:::o;11454:487::-;11584:24;11611:25;11621:5;11628:7;11611:9;:25::i;:::-;11584:52;;-1:-1:-1;;11650:16:65;:37;11646:289;;11748:6;11728:16;:26;;11703:114;;;;-1:-1:-1;;;11703:114:65;;10086:2:232;11703:114:65;;;10068:21:232;10125:2;10105:18;;;10098:30;10164:31;10144:18;;;10137:59;10213:18;;11703:114:65;9884:353:232;11703:114:65;11859:51;11868:5;11875:7;11903:6;11884:16;:25;11859:8;:51::i;:::-;11574:367;11454:487;;;:::o;7735:852::-;-1:-1:-1;;;;;7861:18:65;;7853:68;;;;-1:-1:-1;;;7853:68:65;;10444:2:232;7853:68:65;;;10426:21:232;10483:2;10463:18;;;10456:30;10522:34;10502:18;;;10495:62;-1:-1:-1;;;10573:18:232;;;10566:35;10618:19;;7853:68:65;10242:401:232;7853:68:65;-1:-1:-1;;;;;7939:16:65;;7931:64;;;;-1:-1:-1;;;7931:64:65;;10850:2:232;7931:64:65;;;10832:21:232;10889:2;10869:18;;;10862:30;10928:34;10908:18;;;10901:62;-1:-1:-1;;;10979:18:232;;;10972:33;11022:19;;7931:64:65;10648:399:232;7931:64:65;-1:-1:-1;;;;;8077:15:65;;8055:19;8077:15;;;;;;;;;;;8123:21;;;;8102:106;;;;-1:-1:-1;;;8102:106:65;;11254:2:232;8102:106:65;;;11236:21:232;11293:2;11273:18;;;11266:30;11332:34;11312:18;;;11305:62;-1:-1:-1;;;11383:18:232;;;11376:36;11429:19;;8102:106:65;11052:402:232;8102:106:65;-1:-1:-1;;;;;8242:15:65;;;:9;:15;;;;;;;;;;;8260:20;;;8242:38;;8457:13;;;;;;;;;;:23;;;;;;8506:26;;1736:25:232;;;8457:13:65;;8506:26;;1709:18:232;8506:26:65;;;;;;;8543:37;4929:145:173;8863:538:65;9093:6;9077:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9245:18:65;;:9;:18;;;;;;;;;;;:28;;;;;;9298:37;1736:25:232;;;9298:37:65;;1709:18:232;9298:37:65;;;;;;;1154:219:89;;:::o;9721:659:65:-;-1:-1:-1;;;;;9804:21:65;;9796:67;;;;-1:-1:-1;;;9796:67:65;;11661:2:232;9796:67:65;;;11643:21:232;11700:2;11680:18;;;11673:30;11739:34;11719:18;;;11712:62;-1:-1:-1;;;11790:18:232;;;11783:31;11831:19;;9796:67:65;11459:397:232;9796:67:65;-1:-1:-1;;;;;9959:18:65;;9934:22;9959:18;;;;;;;;;;;9995:24;;;;9987:71;;;;-1:-1:-1;;;9987:71:65;;12063:2:232;9987:71:65;;;12045:21:232;12102:2;12082:18;;;12075:30;12141:34;12121:18;;;12114:62;-1:-1:-1;;;12192:18:232;;;12185:32;12234:19;;9987:71:65;11861:398:232;9987:71:65;-1:-1:-1;;;;;10092:18:65;;:9;:18;;;;;;;;;;;10113:23;;;10092:44;;10229:12;:22;;;;;;;10277:37;1736:25:232;;;10092:9:65;;:18;10277:37;;1709:18:232;10277:37:65;;;;;;;4929:145:173;;;:::o;3460:103::-;3526:30;3537:4;719:10:201;3526::173;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:173;;;;;;;;;:36;;-1:-1:-1;;7708:36:173;7740:4;7708:36;;;7790:12;719:10:201;;640:96;7790:12:173;-1:-1:-1;;;;;7763:40:173;7781:7;-1:-1:-1;;;;;7763:40:173;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;2336:287:187:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:187;;12466:2:232;2460:63:187;;;12448:21:232;12505:2;12485:18;;;12478:30;12544:33;12524:18;;;12517:61;12595:18;;2460:63:187;12264:355:232;2460:63:187;1759:1;2598:7;:18;2336:287::o;3161:1894:96:-;3221:19;3243;:17;:19::i;:::-;3221:41;;3273:14;3290:18;:16;:18::i;:::-;3355:24;;3273:35;;-1:-1:-1;3395:10:96;;;;;:29;;;3423:1;3409:11;:15;3395:29;3391:357;;;3585:6;3542:23;571:4:114;3542:11:96;:23;:::i;:::-;3541:50;;;;:::i;:::-;3497:94;;:25;:94;:::i;:::-;3618:24;:52;;;3690:47;;;13193:25:232;;;13249:2;13234:18;;13227:34;;;3618:52:96;;-1:-1:-1;3690:47:96;;13166:18:232;3690:47:96;;;;;;;3391:357;3771:25;3800:1;3771:30;3767:67;;3817:7;;;3161:1894;:::o;3767:67::-;-1:-1:-1;;;;;3848:22:96;;;3844:1205;;3899:20;3922:23;3936:8;3922:13;:23::i;:::-;-1:-1:-1;;;;;4065:41:96;;3960:21;4065:41;;;:31;:41;;;;;;3899:46;;-1:-1:-1;3960:21:96;571:4:114;;4017:89:96;;:25;:89;:::i;:::-;3985:122;;:12;:122;:::i;:::-;3984:136;;;;:::i;:::-;-1:-1:-1;;;;;4163:25:96;;4136:24;4163:25;;;:15;:25;;;;;;3960:160;;-1:-1:-1;4136:24:96;4163:57;;3960:160;;4163:57;:::i;:::-;-1:-1:-1;;;;;4235:25:96;;;;;;:15;:25;;;;;;;;:44;;;4294:31;:71;;;;;:99;;;4136:84;-1:-1:-1;4413:20:96;;;;;:51;;;4463:1;4437:23;4451:8;4437:13;:23::i;:::-;:27;4413:51;4409:630;;;-1:-1:-1;;;;;4515:25:96;;4484:28;4515:25;;;:15;:25;;;;;;:61;;4563:13;;4515:61;:::i;:::-;4484:92;-1:-1:-1;4644:313:96;4824:111;4484:92;4824:31;:12;4841:13;4824:16;:31::i;:111::-;-1:-1:-1;;;;;4700:25:96;;;;;;:15;:25;;;;;;;;;4644:20;:30;;;;;;;:129;;4752:20;;4644:82;;:55;:82::i;:129::-;:154;;:313::i;:::-;-1:-1:-1;;;;;4611:30:96;;;;;;:20;:30;;;;;;;;:346;;;;4975:15;:25;;;:48;4409:630;3872:1177;;;3211:1844;;;3161:1894;:::o;2878:147:89:-;-1:-1:-1;;;;;3624:18:65;;2973:7:89;3624:18:65;;;;;;;;;;;2999:19:89;3510:139:65;2506:158:89;2614:7;2644:13;3433:12:65;;;3346:106;2670:202:89;2836:11;;2817:48;;;-1:-1:-1;;;2817:48:89;;;;2787:7;;-1:-1:-1;;;;;2836:11:89;;2817:46;;:48;;;;;;;;;;;;;;2836:11;2817:48;;;;;;;;;;;;;;3465:96:212;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:212:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;1359:130:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;719:10:201;1422:23:175;1414:68;;;;-1:-1:-1;;;1414:68:175;;13474:2:232;1414:68:175;;;13456:21:232;;;13493:18;;;13486:30;13552:34;13532:18;;;13525:62;13604:18;;1414:68:175;13272:356:232;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;6937:110:173:-;7015:25;7026:4;7032:7;7015:10;:25::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:173;;;;;;;;;;:37;;-1:-1:-1;;8112:37:173;;;8168:40;719:10:201;;8112:12:173;;8168:40;;8144:5;8168:40;7991:234;;:::o;2591:305:96:-;2673:24;2688:8;2673:14;:24::i;:::-;-1:-1:-1;;;;;2729:25:96;;2707:19;2729:25;;;:15;:25;;;;;;;2764:29;;;2803:40;2820:9;2729:25;2803:16;:40::i;:::-;2858:31;;;-1:-1:-1;;;;;8582:32:232;;8564:51;;8646:2;8631:18;;8624:34;;;2858:31:96;;8537:18:232;2858:31:96;;;;;;;2663:233;2591:305;;:::o;1127:85::-;1169:36;1194:10;1169:24;:36::i;2062:131:65:-;2146:5;:13;2154:5;2146;:13;:::i;:::-;-1:-1:-1;2169:7:65;:17;2179:7;2169;:17;:::i;3178:122:89:-;3263:10;3277:1;3624:18:65;;;;;;;;;;;3253:25:89;3245:48;;;;-1:-1:-1;;;3245:48:89;;16039:2:232;3245:48:89;;;16021:21:232;16078:2;16058:18;;;16051:30;-1:-1:-1;;;16097:18:232;;;16090:40;16147:18;;3245:48:89;15837:334:232;3844:479:173;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:173;;;;;;;;;;-1:-1:-1;;;3970:336:173;;;;;;;:::i;3031:141:89:-;3140:11;;3121:44;;;-1:-1:-1;;;3121:44:89;;;;3095:7;;-1:-1:-1;;;;;3140:11:89;;3121:42;;:44;;;;;;;;;;;;;;3095:7;3140:11;3121:44;;;;;;;;;;;;;;2405:180:96;2520:58;2555:9;2566:11;2527:13;2477:16:89;;-1:-1:-1;;;;;2477:16:89;;2390:110;2527:13:96;-1:-1:-1;;;;;2520:34:96;;:58;:34;:58::i;2263:225:1:-;2327:15;2315:9;:27;2352:32;719:10:201;2352:18:1;:32::i;:::-;2395:42;2198:4:173;2426:10:1;2395;:42::i;:::-;2447:34;2198:4:173;2478:2:1;2447:10;:34::i;2407:149:205:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:205;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:205;;1918:47;;-1:-1:-1;;;1975:6:205;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:205;;;;;;;;;-1:-1:-1;;;2000:6:205;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:205;;;;;;;;-1:-1:-1;2030:9:205;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:205;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:205;;;;;;;;-1:-1:-1;2141:1:205;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:205;;2162:55;;;;-1:-1:-1;;;2162:55:205;;17468:2:232;2162:55:205;;;17450:21:232;;;17487:18;;;17480:30;17546:34;17526:18;;;17519:62;17598:18;;2162:55:205;17266:356:232;941:175:196;1050:58;;;-1:-1:-1;;;;;8582:32:232;;;1050:58:196;;;8564:51:232;8631:18;;;;8624:34;;;1050:58:196;;;;;;;;;;8537:18:232;;;;1050:58:196;;;;;;;;-1:-1:-1;;;;;1050:58:196;-1:-1:-1;;;1050:58:196;;;5641:69;;;;;;;;;;;;;;;;1023:86;;1043:5;;1050:58;-1:-1:-1;;5641:69:196;;:27;;;1050:58;;5641:27;:69::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:196;;17829:2:232;5720:111:196;;;17811:21:232;17868:2;17848:18;;;17841:30;17907:34;17887:18;;;17880:62;-1:-1:-1;;;17958:18:232;;;17951:40;18008:19;;5720:111:196;17627:406:232;4108:223:200;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:200:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:200;;18240:2:232;5354:81:200;;;18222:21:232;18279:2;18259:18;;;18252:30;18318:34;18298:18;;;18291:62;-1:-1:-1;;;18369:18:232;;;18362:36;18415:19;;5354:81:200;18038:402:232;5354:81:200;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:200;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:200:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:166;;;8113:60:200;;;;-1:-1:-1;;;8113:60:200;;18939:2:232;8113:60:200;;;18921:21:232;18978:2;18958:18;;;18951:30;19017:31;18997:18;;;18990:59;19066:18;;8113:60:200;18737:353:232;8113:60:200;-1:-1:-1;8208:10:200;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:200;;;;;;;;:::i;14:286:232:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:232;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:232;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:232;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:232:o;1153:173::-;1221:20;;-1:-1:-1;;;;;1270:31:232;;1260:42;;1250:70;;1316:1;1313;1306:12;1250:70;1153:173;;;:::o;1331:254::-;1399:6;1407;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;1499:29;1518:9;1499:29;:::i;:::-;1489:39;1575:2;1560:18;;;;1547:32;;-1:-1:-1;;;1331:254:232:o;1772:328::-;1849:6;1857;1865;1918:2;1906:9;1897:7;1893:23;1889:32;1886:52;;;1934:1;1931;1924:12;1886:52;1957:29;1976:9;1957:29;:::i;:::-;1947:39;;2005:38;2039:2;2028:9;2024:18;2005:38;:::i;:::-;1995:48;;2090:2;2079:9;2075:18;2062:32;2052:42;;1772:328;;;;;:::o;2105:180::-;2164:6;2217:2;2205:9;2196:7;2192:23;2188:32;2185:52;;;2233:1;2230;2223:12;2185:52;-1:-1:-1;2256:23:232;;2105:180;-1:-1:-1;2105:180:232:o;2657:254::-;2725:6;2733;2786:2;2774:9;2765:7;2761:23;2757:32;2754:52;;;2802:1;2799;2792:12;2754:52;2838:9;2825:23;2815:33;;2867:38;2901:2;2890:9;2886:18;2867:38;:::i;:::-;2857:48;;2657:254;;;;;:::o;3105:186::-;3164:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:52;;;3233:1;3230;3223:12;3185:52;3256:29;3275:9;3256:29;:::i;3504:127::-;3565:10;3560:3;3556:20;3553:1;3546:31;3596:4;3593:1;3586:15;3620:4;3617:1;3610:15;3636:719;3679:5;3732:3;3725:4;3717:6;3713:17;3709:27;3699:55;;3750:1;3747;3740:12;3699:55;3786:6;3773:20;3812:18;3849:2;3845;3842:10;3839:36;;;3855:18;;:::i;:::-;3930:2;3924:9;3898:2;3984:13;;-1:-1:-1;;3980:22:232;;;4004:2;3976:31;3972:40;3960:53;;;4028:18;;;4048:22;;;4025:46;4022:72;;;4074:18;;:::i;:::-;4114:10;4110:2;4103:22;4149:2;4141:6;4134:18;4195:3;4188:4;4183:2;4175:6;4171:15;4167:26;4164:35;4161:55;;;4212:1;4209;4202:12;4161:55;4276:2;4269:4;4261:6;4257:17;4250:4;4242:6;4238:17;4225:54;4323:1;4316:4;4311:2;4303:6;4299:15;4295:26;4288:37;4343:6;4334:15;;;;;;3636:719;;;;:::o;4360:767::-;4475:6;4483;4491;4499;4507;4560:3;4548:9;4539:7;4535:23;4531:33;4528:53;;;4577:1;4574;4567:12;4528:53;4617:9;4604:23;4646:18;4687:2;4679:6;4676:14;4673:34;;;4703:1;4700;4693:12;4673:34;4726:50;4768:7;4759:6;4748:9;4744:22;4726:50;:::i;:::-;4716:60;;4829:2;4818:9;4814:18;4801:32;4785:48;;4858:2;4848:8;4845:16;4842:36;;;4874:1;4871;4864:12;4842:36;;4897:52;4941:7;4930:8;4919:9;4915:24;4897:52;:::i;:::-;4887:62;;;4968:38;5002:2;4991:9;4987:18;4968:38;:::i;:::-;4958:48;;5025:38;5059:2;5048:9;5044:18;5025:38;:::i;:::-;5015:48;;5082:39;5116:3;5105:9;5101:19;5082:39;:::i;:::-;5072:49;;4360:767;;;;;;;;:::o;5132:260::-;5200:6;5208;5261:2;5249:9;5240:7;5236:23;5232:32;5229:52;;;5277:1;5274;5267:12;5229:52;5300:29;5319:9;5300:29;:::i;:::-;5290:39;;5348:38;5382:2;5371:9;5367:18;5348:38;:::i;5397:380::-;5476:1;5472:12;;;;5519;;;5540:61;;5594:4;5586:6;5582:17;5572:27;;5540:61;5647:2;5639:6;5636:14;5616:18;5613:38;5610:161;;5693:10;5688:3;5684:20;5681:1;5674:31;5728:4;5725:1;5718:15;5756:4;5753:1;5746:15;5610:161;;5397:380;;;:::o;6162:277::-;6229:6;6282:2;6270:9;6261:7;6257:23;6253:32;6250:52;;;6298:1;6295;6288:12;6250:52;6330:9;6324:16;6383:5;6376:13;6369:21;6362:5;6359:32;6349:60;;6405:1;6402;6395:12;6444:127;6505:10;6500:3;6496:20;6493:1;6486:31;6536:4;6533:1;6526:15;6560:4;6557:1;6550:15;6576:125;6641:9;;;6662:10;;;6659:36;;;6675:18;;:::i;7048:128::-;7115:9;;;7136:11;;;7133:37;;;7150:18;;:::i;7587:184::-;7657:6;7710:2;7698:9;7689:7;7685:23;7681:32;7678:52;;;7726:1;7723;7716:12;7678:52;-1:-1:-1;7749:16:232;;7587:184;-1:-1:-1;7587:184:232:o;12624:168::-;12697:9;;;12728;;12745:15;;;12739:22;;12725:37;12715:71;;12766:18;;:::i;12797:217::-;12837:1;12863;12853:132;;12907:10;12902:3;12898:20;12895:1;12888:31;12942:4;12939:1;12932:15;12970:4;12967:1;12960:15;12853:132;-1:-1:-1;12999:9:232;;12797:217::o;13759:545::-;13861:2;13856:3;13853:11;13850:448;;;13897:1;13922:5;13918:2;13911:17;13967:4;13963:2;13953:19;14037:2;14025:10;14021:19;14018:1;14014:27;14008:4;14004:38;14073:4;14061:10;14058:20;14055:47;;;-1:-1:-1;14096:4:232;14055:47;14151:2;14146:3;14142:12;14139:1;14135:20;14129:4;14125:31;14115:41;;14206:82;14224:2;14217:5;14214:13;14206:82;;;14269:17;;;14250:1;14239:13;14206:82;;14480:1352;14606:3;14600:10;14633:18;14625:6;14622:30;14619:56;;;14655:18;;:::i;:::-;14684:97;14774:6;14734:38;14766:4;14760:11;14734:38;:::i;:::-;14728:4;14684:97;:::i;:::-;14836:4;;14900:2;14889:14;;14917:1;14912:663;;;;15619:1;15636:6;15633:89;;;-1:-1:-1;15688:19:232;;;15682:26;15633:89;-1:-1:-1;;14437:1:232;14433:11;;;14429:24;14425:29;14415:40;14461:1;14457:11;;;14412:57;15735:81;;14882:944;;14912:663;13706:1;13699:14;;;13743:4;13730:18;;-1:-1:-1;;14948:20:232;;;15066:236;15080:7;15077:1;15074:14;15066:236;;;15169:19;;;15163:26;15148:42;;15261:27;;;;15229:1;15217:14;;;;15096:19;;15066:236;;;15070:3;15330:6;15321:7;15318:19;15315:201;;;15391:19;;;15385:26;-1:-1:-1;;15474:1:232;15470:14;;;15486:3;15466:24;15462:37;15458:42;15443:58;15428:74;;15315:201;-1:-1:-1;;;;;15562:1:232;15546:14;;;15542:22;15529:36;;-1:-1:-1;14480:1352:232:o;16176:812::-;16587:25;16582:3;16575:38;16557:3;16642:6;16636:13;16658:75;16726:6;16721:2;16716:3;16712:12;16705:4;16697:6;16693:17;16658:75;:::i;:::-;-1:-1:-1;;;16792:2:232;16752:16;;;16784:11;;;16777:40;16842:13;;16864:76;16842:13;16926:2;16918:11;;16911:4;16899:17;;16864:76;:::i;:::-;16960:17;16979:2;16956:26;;16176:812;-1:-1:-1;;;;16176:812:232:o;16993:127::-;17054:10;17049:3;17045:20;17042:1;17035:31;17085:4;17082:1;17075:15;17109:4;17106:1;17099:15;17125:136;17164:3;17192:5;17182:39;;17201:18;;:::i;:::-;-1:-1:-1;;;17237:18:232;;17125:136::o;18445:287::-;18574:3;18612:6;18606:13;18628:66;18687:6;18682:3;18675:4;18667:6;18663:17;18628:66;:::i;:::-;18710:16;;;;;18445:287;-1:-1:-1;;18445:287:232:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "PRECISION()": "aaf5eb68",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "averageStakedAmounts(address)": "a3180217",
    "balanceOf(address)": "70a08231",
    "claimForAccount(address)": "afd6a5cc",
    "claimLPReward()": "e547bb91",
    "claimable(address)": "402914f5",
    "claimableReward(address)": "e9503425",
    "cumulativeRewardPerToken()": "f5fc5076",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "distributor()": "bfe10928",
    "getLPReward()": "8f089d65",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantControllerRoleByMarketManager(address)": "7fe4a698",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,address,address,address)": "db0ed6a0",
    "lpEarnedRewards(address)": "ae8bcdf8",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pendingRewards()": "eded3fda",
    "previousCumulatedRewardPerToken(address)": "44a08411",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardToken()": "f7c618c1",
    "stake(uint256)": "a694fc3a",
    "stakeForAccount(address,uint256)": "24283118",
    "stakeToken()": "51ed6a30",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokensPerInterval()": "a8d93627",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAdmin(address)": "75829def",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unstake(uint256)": "2e17de78",
    "unstakeForAccount(address,uint256)": "eedbc776",
    "updateRewards()": "3e158b0c",
    "vaultRewardToken()": "85e04aaa"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MinOutError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinSharesError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cumulativeRewardPerToken\",\"type\":\"uint256\"}],\"name\":\"LogUpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"averageStakedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"claimForAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimLPReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimableReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeRewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"grantControllerRoleByMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vaultRewardToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpEarnedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"previousCumulatedRewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeForAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstakeForAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Charlie\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimLPReward()\":{\"details\":\"This function allows an LP (liquidity provider) to claim their rewards in the current market. The function first checks that the LP has a non-zero balance in the CoreVault contract. If the LP has a non-zero balance, the function calls the `pendingRewards` function to calculate the amount of rewards the LP is entitled to. The LP's earned rewards are then stored in the `lpEarnedRewards` mapping. Finally, the `transferFromVault` function of the `vaultRouter` contract is called to transfer the rewards from the market's vault to the LP's account.\"},\"claimable(address)\":{\"details\":\"This function is used to retrieve the amount of rewards claimable by a user in a market. The function calculates the amount of claimable rewards by first retrieving the user's staked amount in the market from the `stakedAmounts` mapping. If the user has no stake, the function returns the previously claimed reward amount stored in the `claimableReward` mapping. Otherwise, the function retrieves the total supply of LP tokens in the market from the `coreVault` contract and the total pending rewards from the `IRewardDistributor` contract. The pending rewards are then multiplied by the `PRECISION` constant and added to the `cumulativeRewardPerToken` variable to calculate the next cumulative reward per token value. The difference between the new cumulative reward per token value and the previous one stored in the `previousCumulatedRewardPerToken` mapping for the user is multiplied by the user's staked amount and divided by the `PRECISION` constant to calculate the claimable reward amount. Finally, the function returns the sum of the user's previously claimed reward amount and the newly calculated claimable reward amount.\",\"params\":{\"_account\":\"The user's account address.\"},\"returns\":{\"_0\":\"The amount of rewards claimable by the user in the market as a `uint256`.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getLPReward()\":{\"details\":\"This function allows an LP (liquidity provider) to view the amount of rewards they have earned in the current market. The function uses the `msg.sender` parameter to look up the earned rewards for the calling account in the `lpEarnedRewards` mapping. The function returns the amount of rewards earned by the calling account as a `uint256`.\",\"returns\":{\"_0\":\"The amount of rewards earned by the calling account as a `uint256`.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokensPerInterval()\":{\"details\":\"This function is used to retrieve the number of reward tokens distributed per interval in a market. The function calls the `tokensPerInterval` function of the `IRewardDistributor` contract, which returns the number of reward tokens distributed per interval as a `uint256`.\",\"returns\":{\"_0\":\"The number of reward tokens distributed per interval in the market as a `uint256`.\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRewards()\":{\"details\":\"This function is used to update rewards.\"}},\"title\":\"Stake BLE to earn esBLE or USDC. This contract will be deployed for each esBLE and USDC.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateRewards()\":{\"notice\":\"function can only be called without reentry.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stake/BLERewardTracker.sol\":\"BLERewardTracker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-create2-deployer/=node_modules/solidity-create2-deployer/\"]},\"sources\":{\"contracts/ac/Ac.sol\":{\"keccak256\":\"0x70a1139a3ee8c0fb74f43f98cf597cf00c9ad7314084eb29a685e663f0184aa5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b67b6b43395531277914ff64024c52e96f9bc1ab25a73af762ff663ab431695e\",\"dweb:/ipfs/QmRog9AxZTGndg5goAV3zigHaKiogoKCBuuptYnxPeN572\"]},\"contracts/ac/AcUpgradable.sol\":{\"keccak256\":\"0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c\",\"dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x1c95b905fccf399060886d8ed92fabeca09836610a3e78ff13c52256a6832351\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dea3f159ca4a8d034fc6b58c642ed55679988dd973d0427f0ff3997458e5c58a\",\"dweb:/ipfs/QmPMHxQSVLftCd3XpYXB9pz8uBDsVy3wwEAfWfXZn4xtUM\"]},\"contracts/stake/BLERewardTracker.sol\":{\"keccak256\":\"0x3f2379c5515e07de43beacd878dca06a9c5127ac3bc1bdb7da0482e9f5f0b0e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2808dbe47518975eadce4a95aef66f4fc921f6b8d75a792c3df11df37d5233f4\",\"dweb:/ipfs/QmaxRXe5dWtAgZqQ91qT5Y3rtXBFFyh5J9chR7SdjhLQeL\"]},\"contracts/stake/VaultRewardBase.sol\":{\"keccak256\":\"0xfb25a74cd45ce6c19a9ec881d5d313839f94c8fcfead1f8349e227f5aff948be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8d3f6da67ffbe539df16d94df3effe53b1e34de57b8ae5d2efb225c4f9bb6b\",\"dweb:/ipfs/QmZiwZBA7Aiys7cPBf3FdciiszGuqEk6QzQ5NcEFrMYcG5\"]},\"contracts/stake/interfaces/IMintable.sol\":{\"keccak256\":\"0x261434a8115099811ef31e9374661a937d7b94d6e18c25bb8a96a6a3ad04331f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef18d1708da45c147f9332ee0809e8712dbd444ccfe004ceaf9dac73992fb6d6\",\"dweb:/ipfs/QmNaDcrA44EKS2TfeLJydZTMEVrU3drvdcujy9vr9AqbQj\"]},\"contracts/utils/TransferHelper.sol\":{\"keccak256\":\"0xe8d49564701b77c67f321439d289a2cb83cfc7825cb047aa38cdc448ae121001\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aae873145ea2dd1b792797118a18c5bdf3fbaebb0d6eab141fe97f91bc0f77e3\",\"dweb:/ipfs/QmbDNeAJLewUtnuz1tfTEgNFexMpYAdWMmhwqckbZ64pgp\"]},\"contracts/vault/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0xc440fa14323434ff42c2cafe00a4c4ec64ed8751d4b63db4c2d2b53c5aa00ffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bc7a518d1ad29e7c3de5a41411e82315b65171001f26dbd8892cab72e6cf19d\",\"dweb:/ipfs/QmUnHmMR2JyrdcguWoVkq7Atg5AKmzFqcrzazB21eXZnGL\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "MinOutError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MinSharesError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Harvest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "cumulativeRewardPerToken",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogUpdatePool",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "averageStakedAmounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimForAccount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimLPReward"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimableReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeRewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLPReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantControllerRoleByMarketManager"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_stakeToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_distributor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_vaultRewardToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpEarnedRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previousCumulatedRewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeForAccount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakeToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensPerInterval",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstakeForAccount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "claimLPReward()": {
            "details": "This function allows an LP (liquidity provider) to claim their rewards in the current market. The function first checks that the LP has a non-zero balance in the CoreVault contract. If the LP has a non-zero balance, the function calls the `pendingRewards` function to calculate the amount of rewards the LP is entitled to. The LP's earned rewards are then stored in the `lpEarnedRewards` mapping. Finally, the `transferFromVault` function of the `vaultRouter` contract is called to transfer the rewards from the market's vault to the LP's account."
          },
          "claimable(address)": {
            "details": "This function is used to retrieve the amount of rewards claimable by a user in a market. The function calculates the amount of claimable rewards by first retrieving the user's staked amount in the market from the `stakedAmounts` mapping. If the user has no stake, the function returns the previously claimed reward amount stored in the `claimableReward` mapping. Otherwise, the function retrieves the total supply of LP tokens in the market from the `coreVault` contract and the total pending rewards from the `IRewardDistributor` contract. The pending rewards are then multiplied by the `PRECISION` constant and added to the `cumulativeRewardPerToken` variable to calculate the next cumulative reward per token value. The difference between the new cumulative reward per token value and the previous one stored in the `previousCumulatedRewardPerToken` mapping for the user is multiplied by the user's staked amount and divided by the `PRECISION` constant to calculate the claimable reward amount. Finally, the function returns the sum of the user's previously claimed reward amount and the newly calculated claimable reward amount.",
            "params": {
              "_account": "The user's account address."
            },
            "returns": {
              "_0": "The amount of rewards claimable by the user in the market as a `uint256`."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getLPReward()": {
            "details": "This function allows an LP (liquidity provider) to view the amount of rewards they have earned in the current market. The function uses the `msg.sender` parameter to look up the earned rewards for the calling account in the `lpEarnedRewards` mapping. The function returns the amount of rewards earned by the calling account as a `uint256`.",
            "returns": {
              "_0": "The amount of rewards earned by the calling account as a `uint256`."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "tokensPerInterval()": {
            "details": "This function is used to retrieve the number of reward tokens distributed per interval in a market. The function calls the `tokensPerInterval` function of the `IRewardDistributor` contract, which returns the number of reward tokens distributed per interval as a `uint256`.",
            "returns": {
              "_0": "The number of reward tokens distributed per interval in the market as a `uint256`."
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateRewards()": {
            "details": "This function is used to update rewards."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "updateRewards()": {
            "notice": "function can only be called without reentry."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "solidity-create2-deployer/=node_modules/solidity-create2-deployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/stake/BLERewardTracker.sol": "BLERewardTracker"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ac/Ac.sol": {
        "keccak256": "0x70a1139a3ee8c0fb74f43f98cf597cf00c9ad7314084eb29a685e663f0184aa5",
        "urls": [
          "bzz-raw://b67b6b43395531277914ff64024c52e96f9bc1ab25a73af762ff663ab431695e",
          "dweb:/ipfs/QmRog9AxZTGndg5goAV3zigHaKiogoKCBuuptYnxPeN572"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/ac/AcUpgradable.sol": {
        "keccak256": "0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75",
        "urls": [
          "bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c",
          "dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/openzeppelin/ERC20.sol": {
        "keccak256": "0x1c95b905fccf399060886d8ed92fabeca09836610a3e78ff13c52256a6832351",
        "urls": [
          "bzz-raw://dea3f159ca4a8d034fc6b58c642ed55679988dd973d0427f0ff3997458e5c58a",
          "dweb:/ipfs/QmPMHxQSVLftCd3XpYXB9pz8uBDsVy3wwEAfWfXZn4xtUM"
        ],
        "license": "MIT"
      },
      "contracts/stake/BLERewardTracker.sol": {
        "keccak256": "0x3f2379c5515e07de43beacd878dca06a9c5127ac3bc1bdb7da0482e9f5f0b0e2",
        "urls": [
          "bzz-raw://2808dbe47518975eadce4a95aef66f4fc921f6b8d75a792c3df11df37d5233f4",
          "dweb:/ipfs/QmaxRXe5dWtAgZqQ91qT5Y3rtXBFFyh5J9chR7SdjhLQeL"
        ],
        "license": "MIT"
      },
      "contracts/stake/VaultRewardBase.sol": {
        "keccak256": "0xfb25a74cd45ce6c19a9ec881d5d313839f94c8fcfead1f8349e227f5aff948be",
        "urls": [
          "bzz-raw://1d8d3f6da67ffbe539df16d94df3effe53b1e34de57b8ae5d2efb225c4f9bb6b",
          "dweb:/ipfs/QmZiwZBA7Aiys7cPBf3FdciiszGuqEk6QzQ5NcEFrMYcG5"
        ],
        "license": "MIT"
      },
      "contracts/stake/interfaces/IMintable.sol": {
        "keccak256": "0x261434a8115099811ef31e9374661a937d7b94d6e18c25bb8a96a6a3ad04331f",
        "urls": [
          "bzz-raw://ef18d1708da45c147f9332ee0809e8712dbd444ccfe004ceaf9dac73992fb6d6",
          "dweb:/ipfs/QmNaDcrA44EKS2TfeLJydZTMEVrU3drvdcujy9vr9AqbQj"
        ],
        "license": "MIT"
      },
      "contracts/utils/TransferHelper.sol": {
        "keccak256": "0xe8d49564701b77c67f321439d289a2cb83cfc7825cb047aa38cdc448ae121001",
        "urls": [
          "bzz-raw://aae873145ea2dd1b792797118a18c5bdf3fbaebb0d6eab141fe97f91bc0f77e3",
          "dweb:/ipfs/QmbDNeAJLewUtnuz1tfTEgNFexMpYAdWMmhwqckbZ64pgp"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/vault/interfaces/IRewardDistributor.sol": {
        "keccak256": "0xc440fa14323434ff42c2cafe00a4c4ec64ed8751d4b63db4c2d2b53c5aa00ffd",
        "urls": [
          "bzz-raw://1bc7a518d1ad29e7c3de5a41411e82315b65171001f26dbd8892cab72e6cf19d",
          "dweb:/ipfs/QmUnHmMR2JyrdcguWoVkq7Atg5AKmzFqcrzazB21eXZnGL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/stake/BLERewardTracker.sol",
    "id": 31631,
    "exportedSymbols": {
      "Ac": [
        23
      ],
      "AcUpgradable": [
        273
      ],
      "AccessControl": [
        105286
      ],
      "AddressUpgradeable": [
        103672
      ],
      "BLERewardTracker": [
        31630
      ],
      "Context": [
        109087
      ],
      "ERC20": [
        22150
      ],
      "IERC20": [
        107291
      ],
      "IERC20Metadata": [
        108159
      ],
      "IMintable": [
        34872
      ],
      "IRewardDistributor": [
        40696
      ],
      "Initializable": [
        103283
      ],
      "Ownable": [
        105472
      ],
      "Precision": [
        36577
      ],
      "ReentrancyGuard": [
        106626
      ],
      "SafeCast": [
        112729
      ],
      "SafeERC20": [
        108574
      ],
      "SafeMath": [
        113041
      ],
      "VaultRewardBase": [
        34090
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3306:89",
    "nodes": [
      {
        "id": 31374,
        "nodeType": "PragmaDirective",
        "src": "33:24:89",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 31375,
        "nodeType": "ImportDirective",
        "src": "59:22:89",
        "nodes": [],
        "absolutePath": "contracts/ac/Ac.sol",
        "file": "../ac/Ac.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31631,
        "sourceUnit": 24,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31376,
        "nodeType": "ImportDirective",
        "src": "82:31:89",
        "nodes": [],
        "absolutePath": "contracts/stake/VaultRewardBase.sol",
        "file": "./VaultRewardBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31631,
        "sourceUnit": 34091,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31377,
        "nodeType": "ImportDirective",
        "src": "114:35:89",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin/ERC20.sol",
        "file": "../openzeppelin/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31631,
        "sourceUnit": 22151,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31379,
        "nodeType": "ImportDirective",
        "src": "150:78:89",
        "nodes": [],
        "absolutePath": "contracts/vault/interfaces/IRewardDistributor.sol",
        "file": "../vault/interfaces/IRewardDistributor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31631,
        "sourceUnit": 40697,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31378,
              "name": "IRewardDistributor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40696,
              "src": "158:18:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31381,
        "nodeType": "ImportDirective",
        "src": "229:60:89",
        "nodes": [],
        "absolutePath": "contracts/stake/interfaces/IMintable.sol",
        "file": "../stake/interfaces/IMintable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31631,
        "sourceUnit": 34873,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31380,
              "name": "IMintable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34872,
              "src": "237:9:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31630,
        "nodeType": "ContractDefinition",
        "src": "420:2918:89",
        "nodes": [
          {
            "id": 31388,
            "nodeType": "VariableDeclaration",
            "src": "478:25:89",
            "nodes": [],
            "constant": false,
            "functionSelector": "51ed6a30",
            "mutability": "mutable",
            "name": "stakeToken",
            "nameLocation": "493:10:89",
            "scope": 31630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31387,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:89",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31390,
            "nodeType": "VariableDeclaration",
            "src": "509:26:89",
            "nodes": [],
            "constant": false,
            "functionSelector": "bfe10928",
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "524:11:89",
            "scope": 31630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "509:7:89",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31392,
            "nodeType": "VariableDeclaration",
            "src": "541:31:89",
            "nodes": [],
            "constant": false,
            "functionSelector": "85e04aaa",
            "mutability": "mutable",
            "name": "vaultRewardToken",
            "nameLocation": "556:16:89",
            "scope": 31630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31391,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:89",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31432,
            "nodeType": "FunctionDefinition",
            "src": "579:406:89",
            "nodes": [],
            "body": {
              "id": 31431,
              "nodeType": "Block",
              "src": "780:205:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31407,
                        "name": "VaultRewardBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34090,
                        "src": "790:15:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VaultRewardBase_$34090_$",
                          "typeString": "type(contract VaultRewardBase)"
                        }
                      },
                      "id": 31409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "806:11:89",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33689,
                      "src": "790:27:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31411,
                  "nodeType": "ExpressionStatement",
                  "src": "790:29:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31415,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31394,
                        "src": "847:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 31416,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31396,
                        "src": "854:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 31412,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22150,
                        "src": "829:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$22150_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 31414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "835:11:89",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21618,
                      "src": "829:17:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 31417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:33:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31418,
                  "nodeType": "ExpressionStatement",
                  "src": "829:33:89"
                },
                {
                  "expression": {
                    "id": 31421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31419,
                      "name": "stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31388,
                      "src": "872:10:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31420,
                      "name": "_stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31398,
                      "src": "885:11:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "872:24:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31422,
                  "nodeType": "ExpressionStatement",
                  "src": "872:24:89"
                },
                {
                  "expression": {
                    "id": 31425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31423,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31390,
                      "src": "906:11:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31424,
                      "name": "_distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31400,
                      "src": "920:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "906:26:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31426,
                  "nodeType": "ExpressionStatement",
                  "src": "906:26:89"
                },
                {
                  "expression": {
                    "id": 31429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31427,
                      "name": "vaultRewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31392,
                      "src": "942:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31428,
                      "name": "_vaultRewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31402,
                      "src": "961:17:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "942:36:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31430,
                  "nodeType": "ExpressionStatement",
                  "src": "942:36:89"
                }
              ]
            },
            "functionSelector": "db0ed6a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31404,
                  "name": "initializer",
                  "nameLocations": [
                    "768:11:89"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 103185,
                  "src": "768:11:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "768:11:89"
              }
            ],
            "name": "initialize",
            "nameLocation": "588:10:89",
            "parameters": {
              "id": 31403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31394,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "622:5:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31432,
                  "src": "608:19:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31393,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31396,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "651:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31432,
                  "src": "637:21:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31395,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31398,
                  "mutability": "mutable",
                  "name": "_stakeToken",
                  "nameLocation": "676:11:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31432,
                  "src": "668:19:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31400,
                  "mutability": "mutable",
                  "name": "_distributor",
                  "nameLocation": "705:12:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31432,
                  "src": "697:20:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31402,
                  "mutability": "mutable",
                  "name": "_vaultRewardToken",
                  "nameLocation": "735:17:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31432,
                  "src": "727:25:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:160:89"
            },
            "returnParameters": {
              "id": 31406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "780:0:89"
            },
            "scope": 31630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31457,
            "nodeType": "FunctionDefinition",
            "src": "991:157:89",
            "nodes": [],
            "body": {
              "id": 31456,
              "nodeType": "Block",
              "src": "1031:117:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31441,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1072:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1076:6:89",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1072:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31445,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1092:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BLERewardTracker_$31630",
                              "typeString": "contract BLERewardTracker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BLERewardTracker_$31630",
                              "typeString": "contract BLERewardTracker"
                            }
                          ],
                          "id": 31444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1084:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1084:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1084:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31447,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31434,
                        "src": "1099:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31438,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31388,
                            "src": "1047:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31437,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22150,
                          "src": "1041:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$22150_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 31439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1041:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22150",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 31440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1059:12:89",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21773,
                      "src": "1041:30:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1041:65:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31449,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:65:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31451,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1122:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1126:6:89",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1122:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31453,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31434,
                        "src": "1134:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31450,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21967,
                      "src": "1116:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:25:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31455,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:25:89"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "1000:5:89",
            "parameters": {
              "id": 31435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31434,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1014:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31457,
                  "src": "1006:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:16:89"
            },
            "returnParameters": {
              "id": 31436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:89"
            },
            "scope": 31630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31482,
            "nodeType": "FunctionDefinition",
            "src": "1154:219:89",
            "nodes": [],
            "body": {
              "id": 31481,
              "nodeType": "Block",
              "src": "1262:111:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31468,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31459,
                        "src": "1303:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31471,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1320:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BLERewardTracker_$31630",
                              "typeString": "contract BLERewardTracker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BLERewardTracker_$31630",
                              "typeString": "contract BLERewardTracker"
                            }
                          ],
                          "id": 31470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1312:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31469,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1312:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1312:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31473,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31461,
                        "src": "1327:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31465,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31388,
                            "src": "1278:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31464,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22150,
                          "src": "1272:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$22150_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 31466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1272:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22150",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 31467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1290:12:89",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21773,
                      "src": "1272:30:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:62:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31475,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:62:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31477,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31459,
                        "src": "1350:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31478,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31461,
                        "src": "1359:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31476,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21967,
                      "src": "1344:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:22:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31480,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:22:89"
                }
              ]
            },
            "functionSelector": "24283118",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeForAccount",
            "nameLocation": "1163:15:89",
            "parameters": {
              "id": 31462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31459,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1196:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31482,
                  "src": "1188:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31461,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1221:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31482,
                  "src": "1213:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1178:55:89"
            },
            "returnParameters": {
              "id": 31463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:0:89"
            },
            "scope": 31630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31507,
            "nodeType": "FunctionDefinition",
            "src": "1379:159:89",
            "nodes": [],
            "body": {
              "id": 31506,
              "nodeType": "Block",
              "src": "1421:117:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31488,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1437:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1441:6:89",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1437:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31490,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31484,
                        "src": "1449:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31487,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22039,
                      "src": "1431:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:25:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31492,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:25:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31499,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1505:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BLERewardTracker_$31630",
                              "typeString": "contract BLERewardTracker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BLERewardTracker_$31630",
                              "typeString": "contract BLERewardTracker"
                            }
                          ],
                          "id": 31498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1497:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1497:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1497:13:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 31501,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1512:3:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1516:6:89",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1512:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31503,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31484,
                        "src": "1524:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31494,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31388,
                            "src": "1472:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31493,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22150,
                          "src": "1466:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$22150_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 31495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1466:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22150",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 31496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1484:12:89",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21773,
                      "src": "1466:30:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:65:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31505,
                  "nodeType": "ExpressionStatement",
                  "src": "1466:65:89"
                }
              ]
            },
            "functionSelector": "2e17de78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "1388:7:89",
            "parameters": {
              "id": 31485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31484,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1404:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31507,
                  "src": "1396:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1395:16:89"
            },
            "returnParameters": {
              "id": 31486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:0:89"
            },
            "scope": 31630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31528,
            "nodeType": "FunctionDefinition",
            "src": "1544:204:89",
            "nodes": [],
            "body": {
              "id": 31527,
              "nodeType": "Block",
              "src": "1656:92:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31515,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31509,
                        "src": "1672:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31516,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31511,
                        "src": "1681:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31514,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22039,
                      "src": "1666:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1666:22:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31518,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:22:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31523,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31509,
                        "src": "1725:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31524,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31511,
                        "src": "1734:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31520,
                            "name": "stakeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31388,
                            "src": "1704:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31519,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22150,
                          "src": "1698:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$22150_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 31521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1698:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$22150",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 31522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1716:8:89",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21697,
                      "src": "1698:26:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 31525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:43:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31526,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:43:89"
                }
              ]
            },
            "functionSelector": "eedbc776",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeForAccount",
            "nameLocation": "1553:17:89",
            "parameters": {
              "id": 31512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31509,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1588:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31528,
                  "src": "1580:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31511,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1613:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31528,
                  "src": "1605:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1570:55:89"
            },
            "returnParameters": {
              "id": 31513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1656:0:89"
            },
            "scope": 31630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31539,
            "nodeType": "FunctionDefinition",
            "src": "1754:126:89",
            "nodes": [],
            "body": {
              "id": 31538,
              "nodeType": "Block",
              "src": "1827:53:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31534,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31530,
                        "src": "1854:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31535,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31530,
                        "src": "1864:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31533,
                      "name": "_claimForAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33790,
                      "src": "1837:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:36:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31537,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:36:89"
                }
              ]
            },
            "functionSelector": "afd6a5cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimForAccount",
            "nameLocation": "1763:15:89",
            "parameters": {
              "id": 31531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31530,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1787:8:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31539,
                  "src": "1779:16:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1778:18:89"
            },
            "returnParameters": {
              "id": 31532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1827:0:89"
            },
            "scope": 31630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31552,
            "nodeType": "FunctionDefinition",
            "src": "2189:195:89",
            "nodes": [],
            "body": {
              "id": 31551,
              "nodeType": "Block",
              "src": "2309:75:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31546,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31390,
                            "src": "2345:11:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31545,
                          "name": "IRewardDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40696,
                          "src": "2326:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRewardDistributor_$40696_$",
                            "typeString": "type(contract IRewardDistributor)"
                          }
                        },
                        "id": 31547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2326:31:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardDistributor_$40696",
                          "typeString": "contract IRewardDistributor"
                        }
                      },
                      "id": 31548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2358:17:89",
                      "memberName": "tokensPerInterval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40695,
                      "src": "2326:49:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 31549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:51:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31544,
                  "id": 31550,
                  "nodeType": "Return",
                  "src": "2319:58:89"
                }
              ]
            },
            "baseFunctions": [
              34053
            ],
            "functionSelector": "a8d93627",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensPerInterval",
            "nameLocation": "2198:17:89",
            "overrides": {
              "id": 31541,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2270:8:89"
            },
            "parameters": {
              "id": 31540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:2:89"
            },
            "returnParameters": {
              "id": 31544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31543,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31552,
                  "src": "2296:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2295:9:89"
            },
            "scope": 31630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 31561,
            "nodeType": "FunctionDefinition",
            "src": "2390:110:89",
            "nodes": [],
            "body": {
              "id": 31560,
              "nodeType": "Block",
              "src": "2460:40:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31558,
                    "name": "vaultRewardToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31392,
                    "src": "2477:16:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 31557,
                  "id": 31559,
                  "nodeType": "Return",
                  "src": "2470:23:89"
                }
              ]
            },
            "baseFunctions": [
              34059
            ],
            "functionSelector": "f7c618c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardToken",
            "nameLocation": "2399:11:89",
            "overrides": {
              "id": 31554,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2433:8:89"
            },
            "parameters": {
              "id": 31553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2410:2:89"
            },
            "returnParameters": {
              "id": 31557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31561,
                  "src": "2451:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2450:9:89"
            },
            "scope": 31630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 31571,
            "nodeType": "FunctionDefinition",
            "src": "2506:158:89",
            "nodes": [],
            "body": {
              "id": 31570,
              "nodeType": "Block",
              "src": "2627:37:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31567,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21658,
                      "src": "2644:11:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 31568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:13:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31566,
                  "id": 31569,
                  "nodeType": "Return",
                  "src": "2637:20:89"
                }
              ]
            },
            "baseFunctions": [
              34065
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultTotalSupply",
            "nameLocation": "2515:16:89",
            "overrides": {
              "id": 31563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2588:8:89"
            },
            "parameters": {
              "id": 31562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2531:2:89"
            },
            "returnParameters": {
              "id": 31566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31571,
                  "src": "2614:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2613:9:89"
            },
            "scope": 31630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 31584,
            "nodeType": "FunctionDefinition",
            "src": "2670:202:89",
            "nodes": [],
            "body": {
              "id": 31583,
              "nodeType": "Block",
              "src": "2800:72:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31578,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31390,
                            "src": "2836:11:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31577,
                          "name": "IRewardDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40696,
                          "src": "2817:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRewardDistributor_$40696_$",
                            "typeString": "type(contract IRewardDistributor)"
                          }
                        },
                        "id": 31579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2817:31:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardDistributor_$40696",
                          "typeString": "contract IRewardDistributor"
                        }
                      },
                      "id": 31580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2849:14:89",
                      "memberName": "pendingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40680,
                      "src": "2817:46:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 31581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:48:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31576,
                  "id": 31582,
                  "nodeType": "Return",
                  "src": "2810:55:89"
                }
              ]
            },
            "baseFunctions": [
              34071
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributorPendingRewards",
            "nameLocation": "2679:25:89",
            "overrides": {
              "id": 31573,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2761:8:89"
            },
            "parameters": {
              "id": 31572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2704:2:89"
            },
            "returnParameters": {
              "id": 31576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31575,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31584,
                  "src": "2787:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2787:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2786:9:89"
            },
            "scope": 31630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 31597,
            "nodeType": "FunctionDefinition",
            "src": "2878:147:89",
            "nodes": [],
            "body": {
              "id": 31596,
              "nodeType": "Block",
              "src": "2982:43:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31593,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31586,
                        "src": "3009:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31592,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21672,
                      "src": "2999:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 31594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2999:19:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31591,
                  "id": 31595,
                  "nodeType": "Return",
                  "src": "2992:26:89"
                }
              ]
            },
            "baseFunctions": [
              34079
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakedAmounts",
            "nameLocation": "2887:13:89",
            "overrides": {
              "id": 31588,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2955:8:89"
            },
            "parameters": {
              "id": 31587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31586,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2918:8:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 31597,
                  "src": "2910:16:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2900:32:89"
            },
            "returnParameters": {
              "id": 31591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31597,
                  "src": "2973:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2972:9:89"
            },
            "scope": 31630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 31610,
            "nodeType": "FunctionDefinition",
            "src": "3031:141:89",
            "nodes": [],
            "body": {
              "id": 31609,
              "nodeType": "Block",
              "src": "3104:68:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31604,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31390,
                            "src": "3140:11:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31603,
                          "name": "IRewardDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40696,
                          "src": "3121:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRewardDistributor_$40696_$",
                            "typeString": "type(contract IRewardDistributor)"
                          }
                        },
                        "id": 31605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3121:31:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardDistributor_$40696",
                          "typeString": "contract IRewardDistributor"
                        }
                      },
                      "id": 31606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3153:10:89",
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40690,
                      "src": "3121:42:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 31607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:44:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31602,
                  "id": 31608,
                  "nodeType": "Return",
                  "src": "3114:51:89"
                }
              ]
            },
            "baseFunctions": [
              34085
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributorReward",
            "nameLocation": "3040:17:89",
            "overrides": {
              "id": 31599,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3077:8:89"
            },
            "parameters": {
              "id": 31598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3057:2:89"
            },
            "returnParameters": {
              "id": 31602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31610,
                  "src": "3095:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3095:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3094:9:89"
            },
            "scope": 31630,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 31625,
            "nodeType": "FunctionDefinition",
            "src": "3178:122:89",
            "nodes": [],
            "body": {
              "id": 31624,
              "nodeType": "Block",
              "src": "3235:65:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 31616,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3263:3:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 31617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3267:6:89",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3263:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31615,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21672,
                            "src": "3253:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 31618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3253:21:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 31619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3277:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3253:25:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6e6572",
                        "id": 31621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3280:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ec89138c76677d3afa820fd8422dfb2531179c26486f146c7c642b6f8c36d45",
                          "typeString": "literal_string \"not ownner\""
                        },
                        "value": "not ownner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ec89138c76677d3afa820fd8422dfb2531179c26486f146c7c642b6f8c36d45",
                          "typeString": "literal_string \"not ownner\""
                        }
                      ],
                      "id": 31614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3245:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:48:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31623,
                  "nodeType": "ExpressionStatement",
                  "src": "3245:48:89"
                }
              ]
            },
            "baseFunctions": [
              34089
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validClaimRole",
            "nameLocation": "3187:14:89",
            "overrides": {
              "id": 31612,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3226:8:89"
            },
            "parameters": {
              "id": 31611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3201:2:89"
            },
            "returnParameters": {
              "id": 31613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3235:0:89"
            },
            "scope": 31630,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 31629,
            "nodeType": "VariableDeclaration",
            "src": "3306:29:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "3326:9:89",
            "scope": 31630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 31626,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3306:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 31628,
              "length": {
                "hexValue": "3530",
                "id": 31627,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3314:2:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "3306:11:89",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31383,
              "name": "ERC20",
              "nameLocations": [
                "449:5:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22150,
              "src": "449:5:89"
            },
            "id": 31384,
            "nodeType": "InheritanceSpecifier",
            "src": "449:5:89"
          },
          {
            "baseName": {
              "id": 31385,
              "name": "VaultRewardBase",
              "nameLocations": [
                "456:15:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34090,
              "src": "456:15:89"
            },
            "id": 31386,
            "nodeType": "InheritanceSpecifier",
            "src": "456:15:89"
          }
        ],
        "canonicalName": "BLERewardTracker",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 31382,
          "nodeType": "StructuredDocumentation",
          "src": "291:128:89",
          "text": " @title Stake BLE to earn esBLE or USDC.\n This contract will be deployed for each esBLE and USDC.\n @author Charlie"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31630,
          34090,
          106626,
          273,
          103283,
          105472,
          105286,
          110310,
          110322,
          105359,
          22150,
          108159,
          107291,
          109087
        ],
        "name": "BLERewardTracker",
        "nameLocation": "429:16:89",
        "scope": 31631,
        "usedErrors": [
          33691,
          33693
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 89
}
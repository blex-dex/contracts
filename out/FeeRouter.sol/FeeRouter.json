{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "fees",
          "type": "int256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UpdateFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "kind",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFeeOrRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeOrRate",
          "type": "uint256"
        }
      ],
      "name": "UpdateFeeAndRates",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_RATE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "int256[]",
          "name": "fees",
          "type": "int256[]"
        }
      ],
      "name": "collectFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        }
      ],
      "name": "cumulativeFundingRates",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "feeAndRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundFee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        }
      ],
      "name": "getExecFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "_market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isLong",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_oraclePrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_sizeDelta",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_slippage",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isExec",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "liqState",
              "type": "uint8"
            },
            {
              "internalType": "uint64",
              "name": "_fromOrder",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "_refCode",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "collateralDelta",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "execNum",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "inputs",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct MarketDataTypes.UpdatePositionInputs",
          "name": "params",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "lastTime",
              "type": "uint32"
            },
            {
              "internalType": "uint216",
              "name": "extra3",
              "type": "uint216"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "averagePrice",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "entryFundingRate",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "realisedPnl",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "extra0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "extra1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "extra2",
              "type": "uint256"
            }
          ],
          "internalType": "struct Position.Props",
          "name": "position",
          "type": "tuple"
        }
      ],
      "name": "getFees",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "fees",
          "type": "int256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        }
      ],
      "name": "getFundingRate",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "_market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isLong",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_oraclePrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isCreate",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "updatedAtBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "triggerAbove",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "extra3",
                  "type": "uint48"
                },
                {
                  "internalType": "uint128",
                  "name": "collateral",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "size",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "price",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "extra1",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "orderID",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "extra2",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "extra0",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes32",
                  "name": "refCode",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Order.Props",
              "name": "_order",
              "type": "tuple"
            },
            {
              "internalType": "uint256[]",
              "name": "inputs",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct MarketDataTypes.UpdateOrderInputs",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "getOrderFees",
      "outputs": [
        {
          "internalType": "int256",
          "name": "fees",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "grantControllerRoleByMarketManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "fundingFee",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "rates",
          "type": "uint256[]"
        }
      ],
      "name": "setFeeAndRates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "setFeeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingFee",
          "type": "address"
        }
      ],
      "name": "setFundFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "longSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shortSize",
          "type": "uint256"
        }
      ],
      "name": "updateCumulativeFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162002b1d38038062002b1d83398101604081905262000034916200021d565b806200004033620000f2565b62000056816200014460201b620011251760201c565b506001600160a01b038116620000a45760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b038316179055620000eb7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b083362000170565b506200024f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b426002556200015333620000f2565b6200016060003362000211565b6200016d60008262000211565b50565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200020d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001cc3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6200020d828262000170565b6000602082840312156200023057600080fd5b81516001600160a01b03811681146200024857600080fd5b9392505050565b6128be806200025f6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637fe4a69811610104578063c8830bf5116100a2578063d9caed1211610071578063d9caed1214610426578063e50f19ef14610439578063f2fde38b1461044c578063f4ca4d1d1461045f57600080fd5b8063c8830bf5146103c2578063c9cf9f3a146103d5578063d547741f146103e8578063d8778068146103fb57600080fd5b8063a217fddf116100de578063a217fddf14610381578063a591f97f14610389578063c45a01551461039c578063c6f83ad1146103af57600080fd5b80637fe4a6981461034a5780638da5cb5b1461035d57806391d148541461036e57600080fd5b806336568abe11610171578063485cc9551161014b578063485cc95514610309578063715018a61461031c57806375829def146103245780637dd490231461033757600080fd5b806336568abe146102c857806341510263146102d6578063478222c2146102f657600080fd5b8063248a9ca3116101ad578063248a9ca3146102525780632f2ff15d1461027557806333abd0281461028a57806334f32e25146102b557600080fd5b806301ffc9a7146101d457806309d39897146101fc57806320981df41461023f575b600080fd5b6101e76101e23660046119d3565b610467565b60405190151581526020015b60405180910390f35b61023161020a366004611a22565b6001600160a01b031660009081526006602090815260408083206003845290915290205490565b6040519081526020016101f3565b61023161024d366004611a58565b61049e565b610231610260366004611a91565b60009081526020819052604090206001015490565b610288610283366004611aaa565b610522565b005b60045461029d906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6102316102c3366004611a58565b61054c565b6102886101cf366004611aaa565b6102e96102e4366004611d85565b610587565b6040516101f39190611f0e565b60035461029d906001600160a01b031681565b610288610317366004611f21565b610778565b610288610960565b610288610332366004611a22565b610974565b610288610345366004611f4f565b6109e8565b610288610358366004611a22565b610bb4565b6001546001600160a01b031661029d565b6101e761037c366004611aaa565b610bde565b610231600081565b610288610397366004611a22565b610c07565b60055461029d906001600160a01b031681565b6102886103bd366004611f9e565b610c9c565b6102316103d03660046120fa565b610d56565b6102886103e3366004611a22565b610dd0565b6102886103f6366004611aaa565b610e65565b6102316104093660046121c8565b600660209081526000928352604080842090915290825290205481565b6102886104343660046121f4565b610e8a565b610288610447366004612235565b610f28565b61028861045a366004611a22565b61109d565b610231611116565b60006001600160e01b03198216637965db0b60e01b148061049857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60048054604051630826077d60e21b81526001600160a01b03858116938201939093528315156024820152600092909116906320981df4906044015b602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b91906122ec565b9392505050565b60008281526020819052604090206001015461053d81611148565b6105478383611152565b505050565b6003546040516334f32e2560e01b81526001600160a01b038481166004830152831515602483015260009216906334f32e25906044016104da565b60408051600c8082526101a08201909252606091602082016101808036833701905050905060008360000151905060006105cf82866020015186608001518760e001516111d6565b90508083600260ff16815181106105e8576105e8612305565b602090810291909101015260a0850151158015610609575061018085015115155b15610615575050610498565b8460600151156106615760a085015161063a906106359084906000611279565b611355565b83600060ff168151811061065057610650612305565b6020026020010181815250506106fb565b60a0850151610677906106359084906001611279565b83600160ff168151811061068d5761068d612305565b60200260200101818152505084610120015160ff166001036106fb576001600160a01b0382166000908152600660209081526040808320600484529091529020546106d781611355565b84600460ff16815181106106ed576106ed612305565b602002602001018181525050505b6101a085015160ff1615610770576001600160a01b0382166000908152600660209081526040808320600384529091529020546101a08601516107419060ff1682612331565b905061074c81611355565b84600360ff168151811061076257610762612305565b602002602001018181525050505b505092915050565b600154600160a81b900460ff161580801561079e575060018054600160a01b900460ff16105b806107be5750303b1580156107be575060018054600160a01b900460ff16145b6108265760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff60a01b1916600160a01b1790558015610853576001805460ff60a81b1916600160a81b1790555b6001600160a01b03831661089d5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a5908199959481d985d5b1d607a1b604482015260640161081d565b6001600160a01b0382166108e55760405162461bcd60e51b815260206004820152600f60248201526e696e76616c69642066756e6446656560881b604482015260640161081d565b600380546001600160a01b038086166001600160a01b03199283161790925560048054928516929091169190911790558015610547576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6109686113c3565b610972600061141d565b565b600061097f81611148565b6001600160a01b0382166109c55760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b604482015260640161081d565b6109d060008361146f565b6109d98261141d565b6109e4600033611479565b5050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b76000610a158133610bde565b90508015610a72576201518060025442610a2f9190612348565b10610a6d5760405162461bcd60e51b815260206004820152600e60248201526d1858c81d1a5b59481c185cdcd95960921b604482015260640161081d565b610a7c565b610a7c82336114de565b60008351118015610a995750610a94600c600161235b565b835111155b610ad65760405162461bcd60e51b815260206004820152600e60248201526d696e76616c696420706172616d7360901b604482015260640161081d565b60005b83518160ff161015610bad576001600160a01b038516600090815260066020908152604080832060ff85168085529252822054865190929187918110610b2157610b21612305565b6020908102919091018101516001600160a01b038916600081815260068452604080822060ff8916808452908652918190208490558051918252938101869052928301829052909250907f8e26fb53d63c548677b068d08742bea435b6ecb7911ab3c5ad68fbccddeaf5fe9060600160405180910390a250508080610ba59061236e565b915050610ad9565b5050505050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b76101cf81611148565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610c307f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08611148565b6001600160a01b038116610c7a5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a5908199959481d985d5b1d607a1b604482015260640161081d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610ca533611537565b610ce25760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081b585c9ad95d60921b604482015260640161081d565b6004805460405163c6f83ad160e01b81526001600160a01b0386811693820193909352602481018590526044810184905291169063c6f83ad190606401600060405180830381600087803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b50505050505050565b600080826060015115610d6b57506000610d6f565b5060015b6000610d9184600001518560a0015160c001516001600160801b031684611279565b84516001600160a01b0316600090815260066020908152604080832060038452909152902054909150610dc7610635828461235b565b95945050505050565b610df97f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08611148565b6004546001600160a01b0316610e435760405162461bcd60e51b815260206004820152600f60248201526e696e76616c69642066756e6446656560881b604482015260640161081d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260208190526040902060010154610e8081611148565b6105478383611479565b7f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec610eb481611148565b600354604051636ce5768960e11b81526001600160a01b0386811660048301528581166024830152604482018590529091169063d9caed1290606401600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b5050505050505050565b610f3133611537565b80610f615750610f617fcb58d6d985142a614029cdf01861b4fe094d5919a47e69b8310dc4093d9d6ad033610bde565b610fad5760405162461bcd60e51b815260206004820152601860248201527f666565526f757465723a206163636573732064656e6965640000000000000000604482015260640161081d565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e91906122ec565b90508060000361102e5750505050565b60035461104a906001600160a01b0385811691339116846115ce565b336001600160a01b0316846001600160a01b03167f51b85031527a935663233d62a057687d039b9fbcd79c55e46a5b24510159336f848460405161108f92919061238d565b60405180910390a350505050565b6110a56113c3565b6001600160a01b03811661110a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161081d565b6111138161141d565b50565b6111226008600a612493565b81565b426002556111323361141d565b61113d60003361146f565b61111360008261146f565b61111381336114de565b61115c8282610bde565b6109e4576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556111923390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000826000036111e857506000611271565b6004805460405163478c57cd60e11b81526001600160a01b038881169382019390935260248101869052604481018590528615156064820152911690638f18af9a90608401602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e91906122ec565b90505b949350505050565b60008260000361128b5750600061051b565b600c8260ff1611156112d15760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964204665655479706560881b604482015260640161081d565b6001600160a01b038416600090815260066020908152604080832060ff86168452909152812054908190036113065750620186a05b60006113146008600a612493565b826113216008600a612493565b61132b9190612348565b6113359087612331565b61133f919061249f565b905061134b8186612348565b9695505050505050565b60006001600160ff1b038211156113bf5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161081d565b5090565b6001546001600160a01b031633146109725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161081d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109e48282611152565b6114838282610bde565b156109e4576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6114e88282610bde565b6109e4576114f58161162e565b611500836020611640565b6040516020016115119291906124e5565b60408051601f198184030181529082905262461bcd60e51b825261081d9160040161255a565b60055460405163d4dfadbf60e01b81526001600160a01b038381166004830152600092839291169063d4dfadbf90602401600060405180830381865afa158015611585573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ad919081019061266a565b905080604001516101c001518061051b5750604001516101e0015192915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116289085906117db565b50505050565b60606104986001600160a01b03831660145b6060600061164f836002612331565b61165a90600261235b565b6001600160401b0381111561167157611671611acf565b6040519080825280601f01601f19166020018201604052801561169b576020820181803683370190505b509050600360fc1b816000815181106116b6576116b6612305565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106116e5576116e5612305565b60200101906001600160f81b031916908160001a9053506000611709846002612331565b61171490600161235b565b90505b600181111561178c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061174857611748612305565b1a60f81b82828151811061175e5761175e612305565b60200101906001600160f81b031916908160001a90535060049490941c9361178581612838565b9050611717565b50831561051b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161081d565b6000611830826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118b09092919063ffffffff16565b9050805160001480611851575080806020019051810190611851919061284f565b6105475760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161081d565b6060611271848460008585600080866001600160a01b031685876040516118d7919061286c565b60006040518083038185875af1925050503d8060008114611914576040519150601f19603f3d011682016040523d82523d6000602084013e611919565b606091505b509150915061192a87838387611935565b979650505050505050565b606083156119a457825160000361199d576001600160a01b0385163b61199d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161081d565b5081611271565b61127183838151156119b95781518083602001fd5b8060405162461bcd60e51b815260040161081d919061255a565b6000602082840312156119e557600080fd5b81356001600160e01b03198116811461051b57600080fd5b6001600160a01b038116811461111357600080fd5b8035611a1d816119fd565b919050565b600060208284031215611a3457600080fd5b813561051b816119fd565b801515811461111357600080fd5b8035611a1d81611a3f565b60008060408385031215611a6b57600080fd5b8235611a76816119fd565b91506020830135611a8681611a3f565b809150509250929050565b600060208284031215611aa357600080fd5b5035919050565b60008060408385031215611abd57600080fd5b823591506020830135611a86816119fd565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b0381118282101715611b0857611b08611acf565b60405290565b6040516101e081016001600160401b0381118282101715611b0857611b08611acf565b6040516101a081016001600160401b0381118282101715611b0857611b08611acf565b60405160e081016001600160401b0381118282101715611b0857611b08611acf565b604051606081016001600160401b0381118282101715611b0857611b08611acf565b60405161022081016001600160401b0381118282101715611b0857611b08611acf565b604051601f8201601f191681016001600160401b0381118282101715611be357611be3611acf565b604052919050565b803560ff81168114611a1d57600080fd5b80356001600160401b0381168114611a1d57600080fd5b60006001600160401b03821115611c2c57611c2c611acf565b5060051b60200190565b600082601f830112611c4757600080fd5b81356020611c5c611c5783611c13565b611bbb565b82815260059290921b84018101918181019086841115611c7b57600080fd5b8286015b84811015611c965780358352918301918301611c7f565b509695505050505050565b803563ffffffff81168114611a1d57600080fd5b80356001600160d81b0381168114611a1d57600080fd5b60006101808284031215611cdf57600080fd5b611ce7611ae5565b9050611cf282611a12565b8152611d0060208301611a4d565b6020820152611d1160408301611ca1565b6040820152611d2260608301611cb5565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016080830135818301525092915050565b6000806101a0808486031215611d9a57600080fd5b83356001600160401b0380821115611db157600080fd5b908501906101e08288031215611dc657600080fd5b611dce611b0e565b611dd783611a12565b8152611de560208401611a4d565b602082015260408301356040820152611e0060608401611a4d565b6060820152611e1160808401611a12565b608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100611e42818501611a4d565b90820152610120611e54848201611beb565b90820152610140611e66848201611bfc565b9082015261016083810135908201526101808084013590820152611e8b848401611beb565b848201526101c093508383013582811115611ea557600080fd5b611eb189828601611c36565b858301525080955050505050611eca8460208501611ccc565b90509250929050565b600081518084526020808501945080840160005b83811015611f0357815187529582019590820190600101611ee7565b509495945050505050565b60208152600061051b6020830184611ed3565b60008060408385031215611f3457600080fd5b8235611f3f816119fd565b91506020830135611a86816119fd565b60008060408385031215611f6257600080fd5b8235611f6d816119fd565b915060208301356001600160401b03811115611f8857600080fd5b611f9485828601611c36565b9150509250929050565b600080600060608486031215611fb357600080fd5b8335611fbe816119fd565b95602085013595506040909401359392505050565b803565ffffffffffff81168114611a1d57600080fd5b80356001600160801b0381168114611a1d57600080fd5b60006101a0828403121561201357600080fd5b61201b611b31565b905061202682611beb565b815261203460208301611ca1565b602082015261204560408301611beb565b604082015261205660608301611a12565b606082015261206760808301611fd3565b608082015261207860a08301611fe9565b60a082015261208960c08301611fe9565b60c082015261209a60e08301611fe9565b60e08201526101006120ad818401611fe9565b908201526101206120bf838201611bfc565b908201526101406120d1838201611bfc565b908201526101606120e3838201611fe9565b818301525061018080830135818301525092915050565b60006020828403121561210c57600080fd5b81356001600160401b038082111561212357600080fd5b90830190610260828603121561213857600080fd5b612140611b54565b61214983611a12565b815261215760208401611a4d565b60208201526040830135604082015261217260608401611a4d565b606082015261218360808401611a4d565b60808201526121958660a08501612000565b60a0820152610240830135828111156121ad57600080fd5b6121b987828601611c36565b60c08301525095945050505050565b600080604083850312156121db57600080fd5b82356121e6816119fd565b9150611eca60208401611beb565b60008060006060848603121561220957600080fd5b8335612214816119fd565b92506020840135612224816119fd565b929592945050506040919091013590565b60008060006060848603121561224a57600080fd5b8335612255816119fd565b9250602084810135612266816119fd565b925060408501356001600160401b0381111561228157600080fd5b8501601f8101871361229257600080fd5b80356122a0611c5782611c13565b81815260059190911b820183019083810190898311156122bf57600080fd5b928401925b828410156122dd578335825292840192908401906122c4565b80955050505050509250925092565b6000602082840312156122fe57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104985761049861231b565b818103818111156104985761049861231b565b808201808211156104985761049861231b565b600060ff821660ff81036123845761238461231b565b60010192915050565b6040815260006123a06040830185611ed3565b90508260208301529392505050565b600181815b808511156123ea5781600019048211156123d0576123d061231b565b808516156123dd57918102915b93841c93908002906123b4565b509250929050565b60008261240157506001610498565b8161240e57506000610498565b8160018114612424576002811461242e5761244a565b6001915050610498565b60ff84111561243f5761243f61231b565b50506001821b610498565b5060208310610133831016604e8410600b841016171561246d575081810a610498565b61247783836123af565b806000190482111561248b5761248b61231b565b029392505050565b600061051b83836123f2565b6000826124bc57634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156124dc5781810151838201526020016124c4565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161251d8160178501602088016124c1565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161254e8160288401602088016124c1565b01602801949350505050565b60208152600082518060208401526125798160408501602087016124c1565b601f01601f19169190910160400192915050565b600082601f83011261259e57600080fd5b81516001600160401b038111156125b7576125b7611acf565b6125ca601f8201601f1916602001611bbb565b8181528460208386010111156125df57600080fd5b6112718260208301602087016124c1565b8051611a1d816119fd565b600082601f83011261260c57600080fd5b8151602061261c611c5783611c13565b82815260059290921b8401810191818101908684111561263b57600080fd5b8286015b84811015611c96578051612652816119fd565b835291830191830161263f565b8051611a1d81611a3f565b60006020828403121561267c57600080fd5b81516001600160401b038082111561269357600080fd5b90830190606082860312156126a757600080fd5b6126af611b76565b8251828111156126be57600080fd5b6126ca8782860161258d565b82525060208301516126db816119fd565b60208201526040830151828111156126f257600080fd5b9290920191610220838703121561270857600080fd5b612710611b98565b83518381111561271f57600080fd5b61272b8882870161258d565b82525061273a602085016125f0565b602082015260408401518381111561275157600080fd5b61275d888287016125fb565b60408301525061276f606085016125f0565b6060820152612780608085016125f0565b608082015261279160a085016125f0565b60a08201526127a260c085016125f0565b60c082015260e08481015190820152610100808501519082015261012080850151908201526101408085015190820152610160808501519082015261018080850151908201526101a080850151908201526101c0925061280383850161265f565b838201526101e0925061281783850161265f565b92810192909252610200928301519282019290925260408201529392505050565b6000816128475761284761231b565b506000190190565b60006020828403121561286157600080fd5b815161051b81611a3f565b6000825161287e8184602087016124c1565b919091019291505056fea2646970667358221220d953f0d63879dc3a22ec9f79ce86ea48119fa2c0f259e5450064bc2e2e209eb064736f6c63430008110033",
    "sourceMap": "793:9535:2:-:0;;;1485:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1518:8;936:32:175;719:10:201;936:18:175;:32::i;:::-;385:28:0::1;410:2;385:24;;;;;:28;;:::i;:::-;-1:-1:-1::0;;;;;;1546:22:2;::::1;1538:50;;;::::0;-1:-1:-1;;;1538:50:2;;511:2:232;1538:50:2::1;::::0;::::1;493:21:232::0;550:2;530:18;;;523:30;-1:-1:-1;;;569:18:232;;;562:45;624:18;;1538:50:2::1;;;;;;;;1598:7;:18:::0;;-1:-1:-1;;;;;;1598:18:2::1;-1:-1:-1::0;;;;;1598:18:2;::::1;;::::0;;1626:36:::1;609:25:1;1651:10:2;1626;:36::i;:::-;1485:184:::0;793:9535;;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2263:225:1:-;2327:15;2315:9;:27;2352:32;719:10:201;936:18:175;:32::i;2352::1:-;2395:42;2198:4:173;2426:10:1;2395;:42::i;:::-;2447:34;2198:4:173;2478:2:1;2447:10;:34::i;:::-;2263:225;:::o;7587:233:173:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:173;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:173;;;;;;;;;:36;;-1:-1:-1;;7708:36:173;7740:4;7708:36;;;7790:12;719:10:201;;640:96;7790:12:173;-1:-1:-1;;;;;7763:40:173;7781:7;-1:-1:-1;;;;;7763:40:173;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;6937:110::-;7015:25;7026:4;7032:7;7015:10;:25::i;14:290:232:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:232;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:232:o;309:339::-;793:9535:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637fe4a69811610104578063c8830bf5116100a2578063d9caed1211610071578063d9caed1214610426578063e50f19ef14610439578063f2fde38b1461044c578063f4ca4d1d1461045f57600080fd5b8063c8830bf5146103c2578063c9cf9f3a146103d5578063d547741f146103e8578063d8778068146103fb57600080fd5b8063a217fddf116100de578063a217fddf14610381578063a591f97f14610389578063c45a01551461039c578063c6f83ad1146103af57600080fd5b80637fe4a6981461034a5780638da5cb5b1461035d57806391d148541461036e57600080fd5b806336568abe11610171578063485cc9551161014b578063485cc95514610309578063715018a61461031c57806375829def146103245780637dd490231461033757600080fd5b806336568abe146102c857806341510263146102d6578063478222c2146102f657600080fd5b8063248a9ca3116101ad578063248a9ca3146102525780632f2ff15d1461027557806333abd0281461028a57806334f32e25146102b557600080fd5b806301ffc9a7146101d457806309d39897146101fc57806320981df41461023f575b600080fd5b6101e76101e23660046119d3565b610467565b60405190151581526020015b60405180910390f35b61023161020a366004611a22565b6001600160a01b031660009081526006602090815260408083206003845290915290205490565b6040519081526020016101f3565b61023161024d366004611a58565b61049e565b610231610260366004611a91565b60009081526020819052604090206001015490565b610288610283366004611aaa565b610522565b005b60045461029d906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6102316102c3366004611a58565b61054c565b6102886101cf366004611aaa565b6102e96102e4366004611d85565b610587565b6040516101f39190611f0e565b60035461029d906001600160a01b031681565b610288610317366004611f21565b610778565b610288610960565b610288610332366004611a22565b610974565b610288610345366004611f4f565b6109e8565b610288610358366004611a22565b610bb4565b6001546001600160a01b031661029d565b6101e761037c366004611aaa565b610bde565b610231600081565b610288610397366004611a22565b610c07565b60055461029d906001600160a01b031681565b6102886103bd366004611f9e565b610c9c565b6102316103d03660046120fa565b610d56565b6102886103e3366004611a22565b610dd0565b6102886103f6366004611aaa565b610e65565b6102316104093660046121c8565b600660209081526000928352604080842090915290825290205481565b6102886104343660046121f4565b610e8a565b610288610447366004612235565b610f28565b61028861045a366004611a22565b61109d565b610231611116565b60006001600160e01b03198216637965db0b60e01b148061049857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60048054604051630826077d60e21b81526001600160a01b03858116938201939093528315156024820152600092909116906320981df4906044015b602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b91906122ec565b9392505050565b60008281526020819052604090206001015461053d81611148565b6105478383611152565b505050565b6003546040516334f32e2560e01b81526001600160a01b038481166004830152831515602483015260009216906334f32e25906044016104da565b60408051600c8082526101a08201909252606091602082016101808036833701905050905060008360000151905060006105cf82866020015186608001518760e001516111d6565b90508083600260ff16815181106105e8576105e8612305565b602090810291909101015260a0850151158015610609575061018085015115155b15610615575050610498565b8460600151156106615760a085015161063a906106359084906000611279565b611355565b83600060ff168151811061065057610650612305565b6020026020010181815250506106fb565b60a0850151610677906106359084906001611279565b83600160ff168151811061068d5761068d612305565b60200260200101818152505084610120015160ff166001036106fb576001600160a01b0382166000908152600660209081526040808320600484529091529020546106d781611355565b84600460ff16815181106106ed576106ed612305565b602002602001018181525050505b6101a085015160ff1615610770576001600160a01b0382166000908152600660209081526040808320600384529091529020546101a08601516107419060ff1682612331565b905061074c81611355565b84600360ff168151811061076257610762612305565b602002602001018181525050505b505092915050565b600154600160a81b900460ff161580801561079e575060018054600160a01b900460ff16105b806107be5750303b1580156107be575060018054600160a01b900460ff16145b6108265760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff60a01b1916600160a01b1790558015610853576001805460ff60a81b1916600160a81b1790555b6001600160a01b03831661089d5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a5908199959481d985d5b1d607a1b604482015260640161081d565b6001600160a01b0382166108e55760405162461bcd60e51b815260206004820152600f60248201526e696e76616c69642066756e6446656560881b604482015260640161081d565b600380546001600160a01b038086166001600160a01b03199283161790925560048054928516929091169190911790558015610547576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6109686113c3565b610972600061141d565b565b600061097f81611148565b6001600160a01b0382166109c55760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b604482015260640161081d565b6109d060008361146f565b6109d98261141d565b6109e4600033611479565b5050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b76000610a158133610bde565b90508015610a72576201518060025442610a2f9190612348565b10610a6d5760405162461bcd60e51b815260206004820152600e60248201526d1858c81d1a5b59481c185cdcd95960921b604482015260640161081d565b610a7c565b610a7c82336114de565b60008351118015610a995750610a94600c600161235b565b835111155b610ad65760405162461bcd60e51b815260206004820152600e60248201526d696e76616c696420706172616d7360901b604482015260640161081d565b60005b83518160ff161015610bad576001600160a01b038516600090815260066020908152604080832060ff85168085529252822054865190929187918110610b2157610b21612305565b6020908102919091018101516001600160a01b038916600081815260068452604080822060ff8916808452908652918190208490558051918252938101869052928301829052909250907f8e26fb53d63c548677b068d08742bea435b6ecb7911ab3c5ad68fbccddeaf5fe9060600160405180910390a250508080610ba59061236e565b915050610ad9565b5050505050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b76101cf81611148565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610c307f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08611148565b6001600160a01b038116610c7a5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a5908199959481d985d5b1d607a1b604482015260640161081d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610ca533611537565b610ce25760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081b585c9ad95d60921b604482015260640161081d565b6004805460405163c6f83ad160e01b81526001600160a01b0386811693820193909352602481018590526044810184905291169063c6f83ad190606401600060405180830381600087803b158015610d3957600080fd5b505af1158015610d4d573d6000803e3d6000fd5b50505050505050565b600080826060015115610d6b57506000610d6f565b5060015b6000610d9184600001518560a0015160c001516001600160801b031684611279565b84516001600160a01b0316600090815260066020908152604080832060038452909152902054909150610dc7610635828461235b565b95945050505050565b610df97f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08611148565b6004546001600160a01b0316610e435760405162461bcd60e51b815260206004820152600f60248201526e696e76616c69642066756e6446656560881b604482015260640161081d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260208190526040902060010154610e8081611148565b6105478383611479565b7f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec610eb481611148565b600354604051636ce5768960e11b81526001600160a01b0386811660048301528581166024830152604482018590529091169063d9caed1290606401600060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b5050505050505050565b610f3133611537565b80610f615750610f617fcb58d6d985142a614029cdf01861b4fe094d5919a47e69b8310dc4093d9d6ad033610bde565b610fad5760405162461bcd60e51b815260206004820152601860248201527f666565526f757465723a206163636573732064656e6965640000000000000000604482015260640161081d565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e91906122ec565b90508060000361102e5750505050565b60035461104a906001600160a01b0385811691339116846115ce565b336001600160a01b0316846001600160a01b03167f51b85031527a935663233d62a057687d039b9fbcd79c55e46a5b24510159336f848460405161108f92919061238d565b60405180910390a350505050565b6110a56113c3565b6001600160a01b03811661110a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161081d565b6111138161141d565b50565b6111226008600a612493565b81565b426002556111323361141d565b61113d60003361146f565b61111360008261146f565b61111381336114de565b61115c8282610bde565b6109e4576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556111923390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000826000036111e857506000611271565b6004805460405163478c57cd60e11b81526001600160a01b038881169382019390935260248101869052604481018590528615156064820152911690638f18af9a90608401602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e91906122ec565b90505b949350505050565b60008260000361128b5750600061051b565b600c8260ff1611156112d15760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964204665655479706560881b604482015260640161081d565b6001600160a01b038416600090815260066020908152604080832060ff86168452909152812054908190036113065750620186a05b60006113146008600a612493565b826113216008600a612493565b61132b9190612348565b6113359087612331565b61133f919061249f565b905061134b8186612348565b9695505050505050565b60006001600160ff1b038211156113bf5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161081d565b5090565b6001546001600160a01b031633146109725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161081d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109e48282611152565b6114838282610bde565b156109e4576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6114e88282610bde565b6109e4576114f58161162e565b611500836020611640565b6040516020016115119291906124e5565b60408051601f198184030181529082905262461bcd60e51b825261081d9160040161255a565b60055460405163d4dfadbf60e01b81526001600160a01b038381166004830152600092839291169063d4dfadbf90602401600060405180830381865afa158015611585573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ad919081019061266a565b905080604001516101c001518061051b5750604001516101e0015192915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116289085906117db565b50505050565b60606104986001600160a01b03831660145b6060600061164f836002612331565b61165a90600261235b565b6001600160401b0381111561167157611671611acf565b6040519080825280601f01601f19166020018201604052801561169b576020820181803683370190505b509050600360fc1b816000815181106116b6576116b6612305565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106116e5576116e5612305565b60200101906001600160f81b031916908160001a9053506000611709846002612331565b61171490600161235b565b90505b600181111561178c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061174857611748612305565b1a60f81b82828151811061175e5761175e612305565b60200101906001600160f81b031916908160001a90535060049490941c9361178581612838565b9050611717565b50831561051b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161081d565b6000611830826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118b09092919063ffffffff16565b9050805160001480611851575080806020019051810190611851919061284f565b6105475760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161081d565b6060611271848460008585600080866001600160a01b031685876040516118d7919061286c565b60006040518083038185875af1925050503d8060008114611914576040519150601f19603f3d011682016040523d82523d6000602084013e611919565b606091505b509150915061192a87838387611935565b979650505050505050565b606083156119a457825160000361199d576001600160a01b0385163b61199d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161081d565b5081611271565b61127183838151156119b95781518083602001fd5b8060405162461bcd60e51b815260040161081d919061255a565b6000602082840312156119e557600080fd5b81356001600160e01b03198116811461051b57600080fd5b6001600160a01b038116811461111357600080fd5b8035611a1d816119fd565b919050565b600060208284031215611a3457600080fd5b813561051b816119fd565b801515811461111357600080fd5b8035611a1d81611a3f565b60008060408385031215611a6b57600080fd5b8235611a76816119fd565b91506020830135611a8681611a3f565b809150509250929050565b600060208284031215611aa357600080fd5b5035919050565b60008060408385031215611abd57600080fd5b823591506020830135611a86816119fd565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b0381118282101715611b0857611b08611acf565b60405290565b6040516101e081016001600160401b0381118282101715611b0857611b08611acf565b6040516101a081016001600160401b0381118282101715611b0857611b08611acf565b60405160e081016001600160401b0381118282101715611b0857611b08611acf565b604051606081016001600160401b0381118282101715611b0857611b08611acf565b60405161022081016001600160401b0381118282101715611b0857611b08611acf565b604051601f8201601f191681016001600160401b0381118282101715611be357611be3611acf565b604052919050565b803560ff81168114611a1d57600080fd5b80356001600160401b0381168114611a1d57600080fd5b60006001600160401b03821115611c2c57611c2c611acf565b5060051b60200190565b600082601f830112611c4757600080fd5b81356020611c5c611c5783611c13565b611bbb565b82815260059290921b84018101918181019086841115611c7b57600080fd5b8286015b84811015611c965780358352918301918301611c7f565b509695505050505050565b803563ffffffff81168114611a1d57600080fd5b80356001600160d81b0381168114611a1d57600080fd5b60006101808284031215611cdf57600080fd5b611ce7611ae5565b9050611cf282611a12565b8152611d0060208301611a4d565b6020820152611d1160408301611ca1565b6040820152611d2260608301611cb5565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016080830135818301525092915050565b6000806101a0808486031215611d9a57600080fd5b83356001600160401b0380821115611db157600080fd5b908501906101e08288031215611dc657600080fd5b611dce611b0e565b611dd783611a12565b8152611de560208401611a4d565b602082015260408301356040820152611e0060608401611a4d565b6060820152611e1160808401611a12565b608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100611e42818501611a4d565b90820152610120611e54848201611beb565b90820152610140611e66848201611bfc565b9082015261016083810135908201526101808084013590820152611e8b848401611beb565b848201526101c093508383013582811115611ea557600080fd5b611eb189828601611c36565b858301525080955050505050611eca8460208501611ccc565b90509250929050565b600081518084526020808501945080840160005b83811015611f0357815187529582019590820190600101611ee7565b509495945050505050565b60208152600061051b6020830184611ed3565b60008060408385031215611f3457600080fd5b8235611f3f816119fd565b91506020830135611a86816119fd565b60008060408385031215611f6257600080fd5b8235611f6d816119fd565b915060208301356001600160401b03811115611f8857600080fd5b611f9485828601611c36565b9150509250929050565b600080600060608486031215611fb357600080fd5b8335611fbe816119fd565b95602085013595506040909401359392505050565b803565ffffffffffff81168114611a1d57600080fd5b80356001600160801b0381168114611a1d57600080fd5b60006101a0828403121561201357600080fd5b61201b611b31565b905061202682611beb565b815261203460208301611ca1565b602082015261204560408301611beb565b604082015261205660608301611a12565b606082015261206760808301611fd3565b608082015261207860a08301611fe9565b60a082015261208960c08301611fe9565b60c082015261209a60e08301611fe9565b60e08201526101006120ad818401611fe9565b908201526101206120bf838201611bfc565b908201526101406120d1838201611bfc565b908201526101606120e3838201611fe9565b818301525061018080830135818301525092915050565b60006020828403121561210c57600080fd5b81356001600160401b038082111561212357600080fd5b90830190610260828603121561213857600080fd5b612140611b54565b61214983611a12565b815261215760208401611a4d565b60208201526040830135604082015261217260608401611a4d565b606082015261218360808401611a4d565b60808201526121958660a08501612000565b60a0820152610240830135828111156121ad57600080fd5b6121b987828601611c36565b60c08301525095945050505050565b600080604083850312156121db57600080fd5b82356121e6816119fd565b9150611eca60208401611beb565b60008060006060848603121561220957600080fd5b8335612214816119fd565b92506020840135612224816119fd565b929592945050506040919091013590565b60008060006060848603121561224a57600080fd5b8335612255816119fd565b9250602084810135612266816119fd565b925060408501356001600160401b0381111561228157600080fd5b8501601f8101871361229257600080fd5b80356122a0611c5782611c13565b81815260059190911b820183019083810190898311156122bf57600080fd5b928401925b828410156122dd578335825292840192908401906122c4565b80955050505050509250925092565b6000602082840312156122fe57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104985761049861231b565b818103818111156104985761049861231b565b808201808211156104985761049861231b565b600060ff821660ff81036123845761238461231b565b60010192915050565b6040815260006123a06040830185611ed3565b90508260208301529392505050565b600181815b808511156123ea5781600019048211156123d0576123d061231b565b808516156123dd57918102915b93841c93908002906123b4565b509250929050565b60008261240157506001610498565b8161240e57506000610498565b8160018114612424576002811461242e5761244a565b6001915050610498565b60ff84111561243f5761243f61231b565b50506001821b610498565b5060208310610133831016604e8410600b841016171561246d575081810a610498565b61247783836123af565b806000190482111561248b5761248b61231b565b029392505050565b600061051b83836123f2565b6000826124bc57634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156124dc5781810151838201526020016124c4565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161251d8160178501602088016124c1565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161254e8160288401602088016124c1565b01602801949350505050565b60208152600082518060208401526125798160408501602087016124c1565b601f01601f19169190910160400192915050565b600082601f83011261259e57600080fd5b81516001600160401b038111156125b7576125b7611acf565b6125ca601f8201601f1916602001611bbb565b8181528460208386010111156125df57600080fd5b6112718260208301602087016124c1565b8051611a1d816119fd565b600082601f83011261260c57600080fd5b8151602061261c611c5783611c13565b82815260059290921b8401810191818101908684111561263b57600080fd5b8286015b84811015611c96578051612652816119fd565b835291830191830161263f565b8051611a1d81611a3f565b60006020828403121561267c57600080fd5b81516001600160401b038082111561269357600080fd5b90830190606082860312156126a757600080fd5b6126af611b76565b8251828111156126be57600080fd5b6126ca8782860161258d565b82525060208301516126db816119fd565b60208201526040830151828111156126f257600080fd5b9290920191610220838703121561270857600080fd5b612710611b98565b83518381111561271f57600080fd5b61272b8882870161258d565b82525061273a602085016125f0565b602082015260408401518381111561275157600080fd5b61275d888287016125fb565b60408301525061276f606085016125f0565b6060820152612780608085016125f0565b608082015261279160a085016125f0565b60a08201526127a260c085016125f0565b60c082015260e08481015190820152610100808501519082015261012080850151908201526101408085015190820152610160808501519082015261018080850151908201526101a080850151908201526101c0925061280383850161265f565b838201526101e0925061281783850161265f565b92810192909252610200928301519282019290925260408201529392505050565b6000816128475761284761231b565b506000190190565b60006020828403121561286157600080fd5b815161051b81611a3f565b6000825161287e8184602087016124c1565b919091019291505056fea2646970667358221220d953f0d63879dc3a22ec9f79ce86ea48119fa2c0f259e5450064bc2e2e209eb064736f6c63430008110033",
    "sourceMap": "793:9535:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:173;;;;;;:::i;:::-;;:::i;:::-;;;470:14:232;;463:22;445:41;;433:2;418:18;2732:202:173;;;;;;;;4806:135:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4891:19:2;4865:7;4891:19;;;:11;:19;;;;;;;;4917:15;4891:43;;;;;;;;;4806:135;;;;1170:25:232;;;1158:2;1143:18;4806:135:2;1024:177:232;5240:178:2;;;;;;:::i;:::-;;:::i;4504:129:173:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;4929:145;;;;;;:::i;:::-;;:::i;:::-;;961:22:2;;;;;-1:-1:-1;;;;;961:22:2;;;;;;-1:-1:-1;;;;;2880:32:232;;;2862:51;;2850:2;2835:18;961:22:2;2716:203:232;5741:196:2;;;;;;:::i;:::-;;:::i;3631:136:1:-;;;;;;:::i;6941:1493:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;932:23::-;;;;;-1:-1:-1;;;;;932:23:2;;;1974:283;;;;;;:::i;:::-;;:::i;1824:101:175:-;;;:::i;2494:262:1:-;;;;;;:::i;:::-;;:::i;2581:514:2:-;;;;;;:::i;:::-;;:::i;3188:281:1:-;;;;;;:::i;:::-;;:::i;1201:85:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;1201:85;;3021:145:173;;;;;;:::i;:::-;;:::i;2153:49::-;;2198:4;2153:49;;2263:149:2;;;;;;:::i;:::-;;:::i;989:22::-;;;;;-1:-1:-1;;;;;989:22:2;;;3591:277;;;;;;:::i;:::-;;:::i;6174:506::-;;;;;;:::i;:::-;;:::i;2418:157::-;;;;;;:::i;:::-;;:::i;5354:147:173:-;;;;;;:::i;:::-;;:::i;1130:64:2:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3101:188;;;;;;:::i;:::-;;:::i;4216:408::-;;;;;;:::i;:::-;;:::i;2074:198:175:-;;;;;;:::i;:::-;;:::i;1018:73:2:-;;;:::i;2732:202:173:-;2817:4;-1:-1:-1;;;;;;2840:47:173;;-1:-1:-1;;;2840:47:173;;:87;;-1:-1:-1;;;;;;;;;;937:40:208;;;2891:36:173;2833:94;2732:202;-1:-1:-1;;2732:202:173:o;5240:178:2:-;5372:7;;;5363:48;;-1:-1:-1;;;5363:48:2;;-1:-1:-1;;;;;16084:32:232;;;5363:48:2;;;16066:51:232;;;;16160:14;;16153:22;16133:18;;;16126:50;5338:6:2;;5372:7;;;;5363:32;;16039:18:232;;5363:48:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5356:55;5240:178;-1:-1:-1;;;5240:178:2:o;4929:145:173:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;5741:196:2:-;5882:8;;5872:58;;-1:-1:-1;;;5872:58:2;;-1:-1:-1;;;;;16084:32:232;;;5872:58:2;;;16066:51:232;16160:14;;16153:22;16133:18;;;16126:50;5847:6:2;;5882:8;;5872:42;;16039:18:232;;5872:58:2;15898:284:232;6941:1493:2;7126:36;;;7145:15;7126:36;;;;;;;;;7087:20;;7126:36;;;;;;;;;;-1:-1:-1;7126:36:2;7119:43;;7172:15;7190:6;:14;;;7172:32;;7215:15;7233:139;7261:7;7282:6;:14;;;7310:8;:13;;;7337:8;:25;;;7233:14;:139::i;:::-;7215:157;-1:-1:-1;7215:157:2;7382:4;7393:15;7382:28;;;;;;;;;;:::i;:::-;;;;;;;;;;:39;7436:17;;;;:22;:53;;;;-1:-1:-1;7462:22:2;;;;:27;;7436:53;7432:95;;;7505:11;;;;7432:95;7566:6;:13;;;7562:601;;;7661:17;;;;7626:102;;7644:59;;7652:7;;7686:15;7644:7;:59::i;:::-;7626:100;:102::i;:::-;7595:4;7606:15;7595:28;;;;;;;;;;:::i;:::-;;;;;;:133;;;;;7562:601;;;7856:17;;;;7821:103;;7839:60;;7847:7;;7881:16;7644:7;:59::i;7821:103::-;7789:4;7800:16;7789:29;;;;;;;;;;:::i;:::-;;;;;;:135;;;;;7977:6;:15;;;:20;;7996:1;7977:20;7973:180;;-1:-1:-1;;;;;8032:20:2;;8017:12;8032:20;;;:11;:20;;;;;;;;8059:14;8032:43;;;;;;;;8123:15;8032:43;8123:13;:15::i;:::-;8093:4;8104:14;8093:27;;;;;;;;;;:::i;:::-;;;;;;:45;;;;;7999:154;7973:180;8176:14;;;;:18;;;8172:235;;-1:-1:-1;;;;;8249:20:2;;8234:12;8249:20;;;:11;:20;;;;;;;;8276:15;8249:44;;;;;;;;8321:14;;;;8314:21;;8249:44;8314:21;8249:44;8314:21;:::i;:::-;8307:28;;8381:15;:4;:13;:15::i;:::-;8350:4;8361:15;8350:28;;;;;;;;;;:::i;:::-;;;;;;:46;;;;;8196:211;8172:235;8416:11;;6941:1493;;;;:::o;1974:283::-;3302:13:163;;-1:-1:-1;;;3302:13:163;;;;3301:14;;3347:34;;;;-1:-1:-1;3380:1:163;3365:12;;-1:-1:-1;;;3365:12:163;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:163;1713:19:166;:23;;;3387:66:163;;-1:-1:-1;3436:12:163;;;-1:-1:-1;;;3436:12:163;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:163;;17014:2:232;3325:201:163;;;16996:21:232;17053:2;17033:18;;;17026:30;17092:34;17072:18;;;17065:62;-1:-1:-1;;;17143:18:232;;;17136:44;17197:19;;3325:201:163;;;;;;;;;3551:1;3536:16;;-1:-1:-1;;;;3536:16:163;-1:-1:-1;;;3536:16:163;;;3562:65;;;;3612:4;3596:20;;-1:-1:-1;;;;3596:20:163;-1:-1:-1;;;3596:20:163;;;3562:65;-1:-1:-1;;;;;2090:19:2;::::1;2082:49;;;::::0;-1:-1:-1;;;2082:49:2;;17429:2:232;2082:49:2::1;::::0;::::1;17411:21:232::0;17468:2;17448:18;;;17441:30;-1:-1:-1;;;17487:18:232;;;17480:47;17544:18;;2082:49:2::1;17227:341:232::0;2082:49:2::1;-1:-1:-1::0;;;;;2149:24:2;::::1;2141:52;;;::::0;-1:-1:-1;;;2141:52:2;;17775:2:232;2141:52:2::1;::::0;::::1;17757:21:232::0;17814:2;17794:18;;;17787:30;-1:-1:-1;;;17833:18:232;;;17826:45;17888:18;;2141:52:2::1;17573:339:232::0;2141:52:2::1;2204:8;:16:::0;;-1:-1:-1;;;;;2204:16:2;;::::1;-1:-1:-1::0;;;;;;2204:16:2;;::::1;;::::0;;;2230:7:::1;:20:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3647:99:163;;;;3681:13;:21;;-1:-1:-1;;;;3681:21:163;;;3721:14;;18069:36:232;;;3721:14:163;;18057:2:232;18042:18;3721:14:163;;;;;;;3269:483;1974:283:2;;:::o;1824:101:175:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2494:262:1:-;2198:4:173;2631:16;2198:4;2631:10;:16::i;:::-;-1:-1:-1;;;;;2585:16:1;::::1;2577:42;;;::::0;-1:-1:-1;;;2577:42:1;;18318:2:232;2577:42:1::1;::::0;::::1;18300:21:232::0;18357:2;18337:18;;;18330:30;-1:-1:-1;;;18376:18:232;;;18369:43;18429:18;;2577:42:1::1;18116:337:232::0;2577:42:1::1;2630:34;2198:4:173;2661:2:1::0;2630:10:::1;:34::i;:::-;2674:22;2693:2;2674:18;:22::i;:::-;2706:43;2198:4:173;2738:10:1;2706:11;:43::i;:::-;2494:262:::0;;:::o;2581:514:2:-;1116:28:1;1921:19;1943:41;1921:19;719:10:201;3021:145:173;:::i;1943:41:1:-;1921:63;;1998:14;1994:246;;;2135:6;2122:9;;2104:15;:27;;;;:::i;:::-;:37;2100:67;;2143:24;;-1:-1:-1;;;2143:24:1;;18793:2:232;2143:24:1;;;18775:21:232;18832:2;18812:18;;;18805:30;-1:-1:-1;;;18851:18:232;;;18844:44;18905:18;;2143:24:1;18591:338:232;2100:67:1;1994:246;;;2198:31;2209:5;719:10:201;2198::1;:31::i;:::-;2750:1:2::1;2735:5;:12;:16;:63;;;;-1:-1:-1::0;2771:27:2::1;2776:17;2797:1;2771:27;:::i;:::-;2755:5;:12;:43;;2735:63;2714:124;;;::::0;-1:-1:-1;;;2714:124:2;;19266:2:232;2714:124:2::1;::::0;::::1;19248:21:232::0;19305:2;19285:18;;;19278:30;-1:-1:-1;;;19324:18:232;;;19317:44;19378:18;;2714:124:2::1;19064:338:232::0;2714:124:2::1;2854:7;2849:240;2871:5;:12;2867:1;:16;;;2849:240;;;-1:-1:-1::0;;;;;2918:19:2;::::1;2904:11;2918:19:::0;;;:11:::1;:19;::::0;;;;;;;:22:::1;::::0;::::1;::::0;;;;;;;;2969:8;;2918:22;;2904:11;2969:5;;:8;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;2991:19:2;::::1;;::::0;;;:11:::1;:19:::0;;;;;;:22:::1;::::0;::::1;::::0;;;;;;;;;;:29;;;3039:39;;19605:36:232;;;19657:18;;;19650:34;;;19700:18;;;19693:34;;;2969:8:2;;-1:-1:-1;2991:19:2;3039:39:::1;::::0;19593:2:232;19578:18;3039:39:2::1;;;;;;;2890:199;;2885:3;;;;;:::i;:::-;;;;2849:240;;;;1911:346:1::0;2581:514:2;;;:::o;3188:281:1:-;1116:28;2631:16:173;2642:4;2631:10;:16::i;3021:145::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:173;;;;;;;;;;;;;;;3021:145::o;2263:149:2:-;2795:24:1;609:25;2795:10;:24::i;:::-;-1:-1:-1;;;;;2338:19:2;::::1;2330:49;;;::::0;-1:-1:-1;;;2330:49:2;;17429:2:232;2330:49:2::1;::::0;::::1;17411:21:232::0;17468:2;17448:18;;;17441:30;-1:-1:-1;;;17487:18:232;;;17480:47;17544:18;;2330:49:2::1;17227:341:232::0;2330:49:2::1;2389:8;:16:::0;;-1:-1:-1;;;;;;2389:16:2::1;-1:-1:-1::0;;;;;2389:16:2;;;::::1;::::0;;;::::1;::::0;;2263:149::o;3591:277::-;1715:21;1725:10;1715:9;:21::i;:::-;1707:48;;;;-1:-1:-1;;;1707:48:2;;20120:2:232;1707:48:2;;;20102:21:232;20159:2;20139:18;;;20132:30;-1:-1:-1;;;20178:18:232;;;20171:44;20232:18;;1707:48:2;19918:338:232;1707:48:2;3750:7:::1;::::0;;3741:120:::1;::::0;-1:-1:-1;;;3741:120:2;;-1:-1:-1;;;;;20481:32:232;;;3741:120:2;;::::1;20463:51:232::0;;;;20530:18;;;20523:34;;;20573:18;;;20566:34;;;3750:7:2;::::1;::::0;3741:45:::1;::::0;20436:18:232;;3741:120:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3591:277:::0;;;:::o;6174:506::-;6282:11;6305;6331:6;:13;;;6327:136;;;-1:-1:-1;6374:15:2;6327:136;;;-1:-1:-1;6435:16:2;6327:136;6473:17;6493:50;6501:6;:14;;;6517:6;:13;;;:18;;;-1:-1:-1;;;;;6493:50:2;6537:5;6493:7;:50::i;:::-;6584:14;;-1:-1:-1;;;;;6572:27:2;6553:16;6572:27;;;:11;:27;;;;;;;;6606:15;6572:51;;;;;;;;6473:70;;-1:-1:-1;6640:33:2;6641:20;6572:51;6473:70;6641:20;:::i;6640:33::-;6633:40;6174:506;-1:-1:-1;;;;;6174:506:2:o;2418:157::-;2795:24:1;609:25;2795:10;:24::i;:::-;2497:7:2::1;::::0;-1:-1:-1;;;;;2497:7:2::1;2489:49;;;::::0;-1:-1:-1;;;2489:49:2;;17775:2:232;2489:49:2::1;::::0;::::1;17757:21:232::0;17814:2;17794:18;;;17787:30;-1:-1:-1;;;17833:18:232;;;17826:45;17888:18;;2489:49:2::1;17573:339:232::0;2489:49:2::1;2548:7;:20:::0;;-1:-1:-1;;;;;;2548:20:2::1;-1:-1:-1::0;;;;;2548:20:2;;;::::1;::::0;;;::::1;::::0;;2418:157::o;5354:147:173:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3101:188:2:-:0;937:26:1;2631:16:173;2642:4;2631:10;:16::i;:::-;3245:8:2::1;::::0;3235:47:::1;::::0;-1:-1:-1;;;3235:47:2;;-1:-1:-1;;;;;20869:15:232;;;3235:47:2::1;::::0;::::1;20851:34:232::0;20921:15;;;20901:18;;;20894:43;20953:18;;;20946:34;;;3245:8:2;;::::1;::::0;3235:28:::1;::::0;20786:18:232;;3235:47:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3101:188:::0;;;;:::o;4216:408::-;1839:21;1849:10;1839:9;:21::i;:::-;:61;;;;1864:36;460:28:1;1889:10:2;1864:7;:36::i;:::-;1818:132;;;;-1:-1:-1;;;1818:132:2;;21193:2:232;1818:132:2;;;21175:21:232;21232:2;21212:18;;;21205:30;21271:26;21251:18;;;21244:54;21315:18;;1818:132:2;20991:348:232;1818:132:2;4376:50:::1;::::0;-1:-1:-1;;;4376:50:2;;4400:10:::1;4376:50;::::0;::::1;21556:34:232::0;4420:4:2::1;21606:18:232::0;;;21599:43;4358:15:2::1;::::0;-1:-1:-1;;;;;4376:23:2;::::1;::::0;::::1;::::0;21491:18:232;;4376:50:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4358:68;;4440:7;4451:1;4440:12:::0;4436:49:::1;;4468:7;4929:145:173::0;;;:::o;4436:49:2:-:1;4538:8;::::0;4495:61:::1;::::0;-1:-1:-1;;;;;4495:30:2;;::::1;::::0;4526:10:::1;::::0;4538:8:::1;4548:7:::0;4495:30:::1;:61::i;:::-;4591:10;-1:-1:-1::0;;;;;4572:45:2::1;4582:7;-1:-1:-1::0;;;;;4572:45:2::1;;4603:4;4609:7;4572:45;;;;;;;:::i;:::-;;;;;;;;4348:276;4216:408:::0;;;:::o;2074:198:175:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:175;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:175;;22378:2:232;2154:73:175::1;::::0;::::1;22360:21:232::0;22417:2;22397:18;;;22390:30;22456:34;22436:18;;;22429:62;-1:-1:-1;;;22507:18:232;;;22500:36;22553:19;;2154:73:175::1;22176:402:232::0;2154:73:175::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1018:73:2:-;634:33:114;444:1;634:2;:33;:::i;:::-;1018:73:2;:::o;2263:225:1:-;2327:15;2315:9;:27;2352:32;719:10:201;2352:18:1;:32::i;:::-;2395:42;2198:4:173;2426:10:1;2395;:42::i;:::-;2447:34;2198:4:173;2478:2:1;2447:10;:34::i;3460:103:173:-;3526:30;3537:4;719:10:201;2198::1;:31::i;7587:233:173:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:173;;;;;;;;;:36;;-1:-1:-1;;7708:36:173;7740:4;7708:36;;;7790:12;719:10:201;;640:96;7790:12:173;-1:-1:-1;;;;;7763:40:173;7781:7;-1:-1:-1;;;;;7763:40:173;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8852:418:2:-;9009:6;9031:9;9044:1;9031:14;9027:53;;-1:-1:-1;9068:1:2;9061:8;;9027:53;9118:7;;;9109:154;;-1:-1:-1;;;9109:154:2;;-1:-1:-1;;;;;24198:32:232;;;9109:154:2;;;24180:51:232;;;;24247:18;;;24240:34;;;24290:18;;;24283:34;;;24360:14;;24353:22;24333:18;;;24326:50;9118:7:2;;;9109:31;;24152:19:232;;9109:154:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9090:173;;8852:418;;;;;;;:::o;9526:519::-;9642:7;9665:9;9678:1;9665:14;9661:53;;-1:-1:-1;9702:1:2;9695:8;;9661:53;9745:17;9732:4;:31;;;;9724:59;;;;-1:-1:-1;;;9724:59:2;;24589:2:232;9724:59:2;;;24571:21:232;24628:2;24608:18;;;24601:30;-1:-1:-1;;;24647:18:232;;;24640:45;24702:18;;9724:59:2;24387:339:232;9724:59:2;-1:-1:-1;;;;;9810:19:2;;9793:14;9810:19;;;:11;:19;;;;;;;;:25;;;;;;;;;;;;9849:11;;;9845:57;;-1:-1:-1;9885:6:2;9845:57;9912:13;634:33:114;444:1;634:2;:33;:::i;:::-;9963:6:2;634:33:114;444:1;634:2;:33;:::i;:::-;9942:27:2;;;;:::i;:::-;9929:41;;:9;:41;:::i;:::-;9928:76;;;;:::i;:::-;9912:92;-1:-1:-1;10021:17:2;9912:92;10021:9;:17;:::i;:::-;10014:24;9526:519;-1:-1:-1;;;;;;9526:519:2:o;34781:297:211:-;34837:6;-1:-1:-1;;;;;34962:5:211;:34;;34954:87;;;;-1:-1:-1;;;34954:87:211;;25155:2:232;34954:87:211;;;25137:21:232;25194:2;25174:18;;;25167:30;25233:34;25213:18;;;25206:62;-1:-1:-1;;;25284:18:232;;;25277:38;25332:19;;34954:87:211;24953:404:232;34954:87:211;-1:-1:-1;35065:5:211;34781:297::o;1359:130:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;719:10:201;1422:23:175;1414:68;;;;-1:-1:-1;;;1414:68:175;;25564:2:232;1414:68:175;;;25546:21:232;;;25583:18;;;25576:30;25642:34;25622:18;;;25615:62;25694:18;;1414:68:175;25362:356:232;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;6937:110:173:-;7015:25;7026:4;7032:7;7015:10;:25::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:173;;;;;;;;;;:37;;-1:-1:-1;;8112:37:173;;;8168:40;719:10:201;;8112:12:173;;8168:40;;8144:5;8168:40;7991:234;;:::o;3844:479::-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:173;;;;;;;;;;-1:-1:-1;;;3970:336:173;;;;;;;:::i;10051:275:2:-;10183:7;;10168:55;;-1:-1:-1;;;10168:55:2;;-1:-1:-1;;;;;2880:32:232;;;10168:55:2;;;2862:51:232;10109:4:2;;;;10183:7;;;10168:46;;2835:18:232;;10168:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10168:55:2;;;;;;;;;;;;:::i;:::-;10125:98;;10241:12;:19;;;:30;;;:77;;;-1:-1:-1;10287:19:2;;;:31;;;;10233:86;-1:-1:-1;;10051:275:2:o;1355:203:196:-;1482:68;;;-1:-1:-1;;;;;20869:15:232;;;1482:68:196;;;20851:34:232;20921:15;;20901:18;;;20894:43;20953:18;;;;20946:34;;;1482:68:196;;;;;;;;;;20786:18:232;;;;1482:68:196;;;;;;;;-1:-1:-1;;;;;1482:68:196;-1:-1:-1;;;1482:68:196;;;1455:96;;1475:5;;1455:19;:96::i;:::-;1355:203;;;;:::o;2407:149:205:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:205;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:205;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:205;;1918:47;;-1:-1:-1;;;1975:6:205;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:205;;;;;;;;;-1:-1:-1;;;2000:6:205;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:205;;;;;;;;-1:-1:-1;2030:9:205;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:205;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:205;;;;;;;;-1:-1:-1;2141:1:205;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:205;;2162:55;;;;-1:-1:-1;;;2162:55:205;;31613:2:232;2162:55:205;;;31595:21:232;;;31632:18;;;31625:30;31691:34;31671:18;;;31664:62;31743:18;;2162:55:205;31411:356:232;5196:642:196;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:196;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:196;;32224:2:232;5720:111:196;;;32206:21:232;32263:2;32243:18;;;32236:30;32302:34;32282:18;;;32275:62;-1:-1:-1;;;32353:18:232;;;32346:40;32403:19;;5720:111:196;32022:406:232;4108:223:200;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:200;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:200:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:166;;;8113:60:200;;;;-1:-1:-1;;;8113:60:200;;33334:2:232;8113:60:200;;;33316:21:232;33373:2;33353:18;;;33346:30;33412:31;33392:18;;;33385:59;33461:18;;8113:60:200;33132:353:232;8113:60:200;-1:-1:-1;8208:10:200;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:200;;;;;;;;:::i;14:286:232:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:232;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:232;;562:42;;552:70;;618:1;615;608:12;633:134;701:20;;730:31;701:20;730:31;:::i;:::-;633:134;;;:::o;772:247::-;831:6;884:2;872:9;863:7;859:23;855:32;852:52;;;900:1;897;890:12;852:52;939:9;926:23;958:31;983:5;958:31;:::i;1206:118::-;1292:5;1285:13;1278:21;1271:5;1268:32;1258:60;;1314:1;1311;1304:12;1329:128;1394:20;;1423:28;1394:20;1423:28;:::i;1462:382::-;1527:6;1535;1588:2;1576:9;1567:7;1563:23;1559:32;1556:52;;;1604:1;1601;1594:12;1556:52;1643:9;1630:23;1662:31;1687:5;1662:31;:::i;:::-;1712:5;-1:-1:-1;1769:2:232;1754:18;;1741:32;1782:30;1741:32;1782:30;:::i;:::-;1831:7;1821:17;;;1462:382;;;;;:::o;2029:180::-;2088:6;2141:2;2129:9;2120:7;2116:23;2112:32;2109:52;;;2157:1;2154;2147:12;2109:52;-1:-1:-1;2180:23:232;;2029:180;-1:-1:-1;2029:180:232:o;2396:315::-;2464:6;2472;2525:2;2513:9;2504:7;2500:23;2496:32;2493:52;;;2541:1;2538;2531:12;2493:52;2577:9;2564:23;2554:33;;2637:2;2626:9;2622:18;2609:32;2650:31;2675:5;2650:31;:::i;2924:127::-;2985:10;2980:3;2976:20;2973:1;2966:31;3016:4;3013:1;3006:15;3040:4;3037:1;3030:15;3056:255;3128:2;3122:9;3170:6;3158:19;;-1:-1:-1;;;;;3192:34:232;;3228:22;;;3189:62;3186:88;;;3254:18;;:::i;:::-;3290:2;3283:22;3056:255;:::o;3316:::-;3388:2;3382:9;3430:6;3418:19;;-1:-1:-1;;;;;3452:34:232;;3488:22;;;3449:62;3446:88;;;3514:18;;:::i;3576:255::-;3648:2;3642:9;3690:6;3678:19;;-1:-1:-1;;;;;3712:34:232;;3748:22;;;3709:62;3706:88;;;3774:18;;:::i;3836:253::-;3908:2;3902:9;3950:4;3938:17;;-1:-1:-1;;;;;3970:34:232;;4006:22;;;3967:62;3964:88;;;4032:18;;:::i;4094:253::-;4166:2;4160:9;4208:4;4196:17;;-1:-1:-1;;;;;4228:34:232;;4264:22;;;4225:62;4222:88;;;4290:18;;:::i;4352:255::-;4424:2;4418:9;4466:6;4454:19;;-1:-1:-1;;;;;4488:34:232;;4524:22;;;4485:62;4482:88;;;4550:18;;:::i;4612:275::-;4683:2;4677:9;4748:2;4729:13;;-1:-1:-1;;4725:27:232;4713:40;;-1:-1:-1;;;;;4768:34:232;;4804:22;;;4765:62;4762:88;;;4830:18;;:::i;:::-;4866:2;4859:22;4612:275;;-1:-1:-1;4612:275:232:o;4892:156::-;4958:20;;5018:4;5007:16;;4997:27;;4987:55;;5038:1;5035;5028:12;5053:171;5120:20;;-1:-1:-1;;;;;5169:30:232;;5159:41;;5149:69;;5214:1;5211;5204:12;5229:183;5289:4;-1:-1:-1;;;;;5314:6:232;5311:30;5308:56;;;5344:18;;:::i;:::-;-1:-1:-1;5389:1:232;5385:14;5401:4;5381:25;;5229:183::o;5417:662::-;5471:5;5524:3;5517:4;5509:6;5505:17;5501:27;5491:55;;5542:1;5539;5532:12;5491:55;5578:6;5565:20;5604:4;5628:60;5644:43;5684:2;5644:43;:::i;:::-;5628:60;:::i;:::-;5722:15;;;5808:1;5804:10;;;;5792:23;;5788:32;;;5753:12;;;;5832:15;;;5829:35;;;5860:1;5857;5850:12;5829:35;5896:2;5888:6;5884:15;5908:142;5924:6;5919:3;5916:15;5908:142;;;5990:17;;5978:30;;6028:12;;;;5941;;5908:142;;;-1:-1:-1;6068:5:232;5417:662;-1:-1:-1;;;;;;5417:662:232:o;6084:163::-;6151:20;;6211:10;6200:22;;6190:33;;6180:61;;6237:1;6234;6227:12;6252:173;6320:20;;-1:-1:-1;;;;;6369:31:232;;6359:42;;6349:70;;6415:1;6412;6405:12;6430:1048;6482:5;6530:6;6518:9;6513:3;6509:19;6505:32;6502:52;;;6550:1;6547;6540:12;6502:52;6572:22;;:::i;:::-;6563:31;;6617:29;6636:9;6617:29;:::i;:::-;6610:5;6603:44;6679:35;6710:2;6699:9;6695:18;6679:35;:::i;:::-;6674:2;6667:5;6663:14;6656:59;6747:37;6780:2;6769:9;6765:18;6747:37;:::i;:::-;6742:2;6735:5;6731:14;6724:61;6817:38;6851:2;6840:9;6836:18;6817:38;:::i;:::-;6812:2;6805:5;6801:14;6794:62;6917:3;6906:9;6902:19;6889:33;6883:3;6876:5;6872:15;6865:58;6984:3;6973:9;6969:19;6956:33;6950:3;6943:5;6939:15;6932:58;7051:3;7040:9;7036:19;7023:33;7017:3;7010:5;7006:15;6999:58;7118:3;7107:9;7103:19;7090:33;7084:3;7077:5;7073:15;7066:58;7143:3;7206:2;7195:9;7191:18;7178:32;7173:2;7166:5;7162:14;7155:56;;7230:3;7293:2;7282:9;7278:18;7265:32;7260:2;7253:5;7249:14;7242:56;;7317:3;7380:2;7369:9;7365:18;7352:32;7347:2;7340:5;7336:14;7329:56;;7404:3;7467:2;7456:9;7452:18;7439:32;7434:2;7427:5;7423:14;7416:56;;6430:1048;;;;:::o;7483:1755::-;7613:6;7621;7652:3;7696:2;7684:9;7675:7;7671:23;7667:32;7664:52;;;7712:1;7709;7702:12;7664:52;7752:9;7739:23;-1:-1:-1;;;;;7822:2:232;7814:6;7811:14;7808:34;;;7838:1;7835;7828:12;7808:34;7861:22;;;;7917:6;7899:16;;;7895:29;7892:49;;;7937:1;7934;7927:12;7892:49;7963:22;;:::i;:::-;8008;8027:2;8008:22;:::i;:::-;8001:5;7994:37;8063:28;8087:2;8083;8079:11;8063:28;:::i;:::-;8058:2;8051:5;8047:14;8040:52;8145:2;8141;8137:11;8124:25;8119:2;8112:5;8108:14;8101:49;8182:28;8206:2;8202;8198:11;8182:28;:::i;:::-;8177:2;8170:5;8166:14;8159:52;8244:32;8271:3;8267:2;8263:12;8244:32;:::i;:::-;8238:3;8231:5;8227:15;8220:57;8331:3;8327:2;8323:12;8310:26;8304:3;8297:5;8293:15;8286:51;8391:3;8387:2;8383:12;8370:26;8364:3;8357:5;8353:15;8346:51;8451:3;8447:2;8443:12;8430:26;8424:3;8417:5;8413:15;8406:51;8476:3;8511:28;8535:2;8531;8527:11;8511:28;:::i;:::-;8495:14;;;8488:52;8559:3;8594:29;8611:11;;;8594:29;:::i;:::-;8578:14;;;8571:53;8643:3;8678:30;8696:11;;;8678:30;:::i;:::-;8662:14;;;8655:54;8728:3;8776:11;;;8763:25;8747:14;;;8740:49;8808:3;8856:11;;;8843:25;8827:14;;;8820:49;8901:29;8918:11;;;8901:29;:::i;:::-;8896:2;8889:5;8885:14;8878:53;8950:3;8940:13;;8999:2;8995;8991:11;8978:25;9028:2;9018:8;9015:16;9012:36;;;9044:1;9041;9034:12;9012:36;9080:56;9128:7;9117:8;9113:2;9109:17;9080:56;:::i;:::-;9075:2;9068:5;9064:14;9057:80;;9156:5;9146:15;;;;;;9180:52;9224:7;9219:2;9208:9;9204:18;9180:52;:::i;:::-;9170:62;;7483:1755;;;;;:::o;9243:434::-;9295:3;9333:5;9327:12;9360:6;9355:3;9348:19;9386:4;9415:2;9410:3;9406:12;9399:19;;9452:2;9445:5;9441:14;9473:1;9483:169;9497:6;9494:1;9491:13;9483:169;;;9558:13;;9546:26;;9592:12;;;;9627:15;;;;9519:1;9512:9;9483:169;;;-1:-1:-1;9668:3:232;;9243:434;-1:-1:-1;;;;;9243:434:232:o;9682:258::-;9859:2;9848:9;9841:21;9822:4;9879:55;9930:2;9919:9;9915:18;9907:6;9879:55;:::i;9945:388::-;10013:6;10021;10074:2;10062:9;10053:7;10049:23;10045:32;10042:52;;;10090:1;10087;10080:12;10042:52;10129:9;10116:23;10148:31;10173:5;10148:31;:::i;:::-;10198:5;-1:-1:-1;10255:2:232;10240:18;;10227:32;10268:33;10227:32;10268:33;:::i;10338:483::-;10431:6;10439;10492:2;10480:9;10471:7;10467:23;10463:32;10460:52;;;10508:1;10505;10498:12;10460:52;10547:9;10534:23;10566:31;10591:5;10566:31;:::i;:::-;10616:5;-1:-1:-1;10672:2:232;10657:18;;10644:32;-1:-1:-1;;;;;10688:30:232;;10685:50;;;10731:1;10728;10721:12;10685:50;10754:61;10807:7;10798:6;10787:9;10783:22;10754:61;:::i;:::-;10744:71;;;10338:483;;;;;:::o;10826:383::-;10903:6;10911;10919;10972:2;10960:9;10951:7;10947:23;10943:32;10940:52;;;10988:1;10985;10978:12;10940:52;11027:9;11014:23;11046:31;11071:5;11046:31;:::i;:::-;11096:5;11148:2;11133:18;;11120:32;;-1:-1:-1;11199:2:232;11184:18;;;11171:32;;10826:383;-1:-1:-1;;;10826:383:232:o;11214:167::-;11281:20;;11341:14;11330:26;;11320:37;;11310:65;;11371:1;11368;11361:12;11386:188;11454:20;;-1:-1:-1;;;;;11503:46:232;;11493:57;;11483:85;;11564:1;11561;11554:12;11579:1190;11642:5;11690:6;11678:9;11673:3;11669:19;11665:32;11662:52;;;11710:1;11707;11700:12;11662:52;11732:22;;:::i;:::-;11723:31;;11777:27;11794:9;11777:27;:::i;:::-;11770:5;11763:42;11837:37;11870:2;11859:9;11855:18;11837:37;:::i;:::-;11832:2;11825:5;11821:14;11814:61;11907:36;11939:2;11928:9;11924:18;11907:36;:::i;:::-;11902:2;11895:5;11891:14;11884:60;11976:38;12010:2;11999:9;11995:18;11976:38;:::i;:::-;11971:2;11964:5;11960:14;11953:62;12048:38;12081:3;12070:9;12066:19;12048:38;:::i;:::-;12042:3;12035:5;12031:15;12024:63;12120:39;12154:3;12143:9;12139:19;12120:39;:::i;:::-;12114:3;12107:5;12103:15;12096:64;12193:39;12227:3;12216:9;12212:19;12193:39;:::i;:::-;12187:3;12180:5;12176:15;12169:64;12266:39;12300:3;12289:9;12285:19;12266:39;:::i;:::-;12260:3;12253:5;12249:15;12242:64;12325:3;12360:38;12394:2;12383:9;12379:18;12360:38;:::i;:::-;12344:14;;;12337:62;12418:3;12453:37;12471:18;;;12453:37;:::i;:::-;12437:14;;;12430:61;12510:3;12545:37;12563:18;;;12545:37;:::i;:::-;12529:14;;;12522:61;12602:3;12637:38;12656:18;;;12637:38;:::i;:::-;12632:2;12625:5;12621:14;12614:62;;12695:3;12758:2;12747:9;12743:18;12730:32;12725:2;12718:5;12714:14;12707:56;;11579:1190;;;;:::o;12774:1033::-;12868:6;12921:2;12909:9;12900:7;12896:23;12892:32;12889:52;;;12937:1;12934;12927:12;12889:52;12977:9;12964:23;-1:-1:-1;;;;;13047:2:232;13039:6;13036:14;13033:34;;;13063:1;13060;13053:12;13033:34;13086:22;;;;13142:6;13124:16;;;13120:29;13117:49;;;13162:1;13159;13152:12;13117:49;13188:22;;:::i;:::-;13233;13252:2;13233:22;:::i;:::-;13226:5;13219:37;13288:28;13312:2;13308;13304:11;13288:28;:::i;:::-;13283:2;13276:5;13272:14;13265:52;13370:2;13366;13362:11;13349:25;13344:2;13337:5;13333:14;13326:49;13407:28;13431:2;13427;13423:11;13407:28;:::i;:::-;13402:2;13395:5;13391:14;13384:52;13469:29;13493:3;13489:2;13485:12;13469:29;:::i;:::-;13463:3;13456:5;13452:15;13445:54;13532:57;13581:7;13575:3;13571:2;13567:12;13532:57;:::i;:::-;13526:3;13519:5;13515:15;13508:82;13636:3;13632:2;13628:12;13615:26;13666:2;13656:8;13653:16;13650:36;;;13682:1;13679;13672:12;13650:36;13720:56;13768:7;13757:8;13753:2;13749:17;13720:56;:::i;:::-;13713:4;13702:16;;13695:82;-1:-1:-1;13706:5:232;12774:1033;-1:-1:-1;;;;;12774:1033:232:o;13812:317::-;13878:6;13886;13939:2;13927:9;13918:7;13914:23;13910:32;13907:52;;;13955:1;13952;13945:12;13907:52;13994:9;13981:23;14013:31;14038:5;14013:31;:::i;:::-;14063:5;-1:-1:-1;14087:36:232;14119:2;14104:18;;14087:36;:::i;14134:456::-;14211:6;14219;14227;14280:2;14268:9;14259:7;14255:23;14251:32;14248:52;;;14296:1;14293;14286:12;14248:52;14335:9;14322:23;14354:31;14379:5;14354:31;:::i;:::-;14404:5;-1:-1:-1;14461:2:232;14446:18;;14433:32;14474:33;14433:32;14474:33;:::i;:::-;14134:456;;14526:7;;-1:-1:-1;;;14580:2:232;14565:18;;;;14552:32;;14134:456::o;14595:1166::-;14696:6;14704;14712;14765:2;14753:9;14744:7;14740:23;14736:32;14733:52;;;14781:1;14778;14771:12;14733:52;14820:9;14807:23;14839:31;14864:5;14839:31;:::i;:::-;14889:5;-1:-1:-1;14913:2:232;14952:18;;;14939:32;14980:33;14939:32;14980:33;:::i;:::-;15032:7;-1:-1:-1;15090:2:232;15075:18;;15062:32;-1:-1:-1;;;;;15106:30:232;;15103:50;;;15149:1;15146;15139:12;15103:50;15172:22;;15225:4;15217:13;;15213:27;-1:-1:-1;15203:55:232;;15254:1;15251;15244:12;15203:55;15290:2;15277:16;15313:60;15329:43;15369:2;15329:43;:::i;15313:60::-;15407:15;;;15489:1;15485:10;;;;15477:19;;15473:28;;;15438:12;;;;15513:19;;;15510:39;;;15545:1;15542;15535:12;15510:39;15569:11;;;;15589:142;15605:6;15600:3;15597:15;15589:142;;;15671:17;;15659:30;;15622:12;;;;15709;;;;15589:142;;;15750:5;15740:15;;;;;;;14595:1166;;;;;:::o;16187:183::-;16256:6;16309:2;16297:9;16288:7;16284:23;16280:32;16277:52;;;16325:1;16322;16315:12;16277:52;-1:-1:-1;16348:16:232;;16187:183;-1:-1:-1;16187:183:232:o;16375:127::-;16436:10;16431:3;16427:20;16424:1;16417:31;16467:4;16464:1;16457:15;16491:4;16488:1;16481:15;16507:127;16568:10;16563:3;16559:20;16556:1;16549:31;16599:4;16596:1;16589:15;16623:4;16620:1;16613:15;16639:168;16712:9;;;16743;;16760:15;;;16754:22;;16740:37;16730:71;;16781:18;;:::i;18458:128::-;18525:9;;;18546:11;;;18543:37;;;18560:18;;:::i;18934:125::-;18999:9;;;19020:10;;;19017:36;;;19033:18;;:::i;19738:175::-;19775:3;19819:4;19812:5;19808:16;19848:4;19839:7;19836:17;19833:43;;19856:18;;:::i;:::-;19905:1;19892:15;;19738:175;-1:-1:-1;;19738:175:232:o;21842:329::-;22047:2;22036:9;22029:21;22010:4;22067:55;22118:2;22107:9;22103:18;22095:6;22067:55;:::i;:::-;22059:63;;22158:6;22153:2;22142:9;22138:18;22131:34;21842:329;;;;;:::o;22583:422::-;22672:1;22715:5;22672:1;22729:270;22750:7;22740:8;22737:21;22729:270;;;22809:4;22805:1;22801:6;22797:17;22791:4;22788:27;22785:53;;;22818:18;;:::i;:::-;22868:7;22858:8;22854:22;22851:55;;;22888:16;;;;22851:55;22967:22;;;;22927:15;;;;22729:270;;;22733:3;22583:422;;;;;:::o;23010:806::-;23059:5;23089:8;23079:80;;-1:-1:-1;23130:1:232;23144:5;;23079:80;23178:4;23168:76;;-1:-1:-1;23215:1:232;23229:5;;23168:76;23260:4;23278:1;23273:59;;;;23346:1;23341:130;;;;23253:218;;23273:59;23303:1;23294:10;;23317:5;;;23341:130;23378:3;23368:8;23365:17;23362:43;;;23385:18;;:::i;:::-;-1:-1:-1;;23441:1:232;23427:16;;23456:5;;23253:218;;23555:2;23545:8;23542:16;23536:3;23530:4;23527:13;23523:36;23517:2;23507:8;23504:16;23499:2;23493:4;23490:12;23486:35;23483:77;23480:159;;;-1:-1:-1;23592:19:232;;;23624:5;;23480:159;23671:34;23696:8;23690:4;23671:34;:::i;:::-;23741:6;23737:1;23733:6;23729:19;23720:7;23717:32;23714:58;;;23752:18;;:::i;:::-;23790:20;;23010:806;-1:-1:-1;;;23010:806:232:o;23821:131::-;23881:5;23910:36;23937:8;23931:4;23910:36;:::i;24731:217::-;24771:1;24797;24787:132;;24841:10;24836:3;24832:20;24829:1;24822:31;24876:4;24873:1;24866:15;24904:4;24901:1;24894:15;24787:132;-1:-1:-1;24933:9:232;;24731:217::o;25723:250::-;25808:1;25818:113;25832:6;25829:1;25826:13;25818:113;;;25908:11;;;25902:18;25889:11;;;25882:39;25854:2;25847:10;25818:113;;;-1:-1:-1;;25965:1:232;25947:16;;25940:27;25723:250::o;25978:812::-;26389:25;26384:3;26377:38;26359:3;26444:6;26438:13;26460:75;26528:6;26523:2;26518:3;26514:12;26507:4;26499:6;26495:17;26460:75;:::i;:::-;-1:-1:-1;;;26594:2:232;26554:16;;;26586:11;;;26579:40;26644:13;;26666:76;26644:13;26728:2;26720:11;;26713:4;26701:17;;26666:76;:::i;:::-;26762:17;26781:2;26758:26;;25978:812;-1:-1:-1;;;;25978:812:232:o;26795:396::-;26944:2;26933:9;26926:21;26907:4;26976:6;26970:13;27019:6;27014:2;27003:9;26999:18;26992:34;27035:79;27107:6;27102:2;27091:9;27087:18;27082:2;27074:6;27070:15;27035:79;:::i;:::-;27175:2;27154:15;-1:-1:-1;;27150:29:232;27135:45;;;;27182:2;27131:54;;26795:396;-1:-1:-1;;26795:396:232:o;27196:510::-;27250:5;27303:3;27296:4;27288:6;27284:17;27280:27;27270:55;;27321:1;27318;27311:12;27270:55;27350:6;27344:13;-1:-1:-1;;;;;27372:2:232;27369:26;27366:52;;;27398:18;;:::i;:::-;27442:55;27485:2;27466:13;;-1:-1:-1;;27462:27:232;27491:4;27458:38;27442:55;:::i;:::-;27522:2;27513:7;27506:19;27568:3;27561:4;27556:2;27548:6;27544:15;27540:26;27537:35;27534:55;;;27585:1;27582;27575:12;27534:55;27598:77;27672:2;27665:4;27656:7;27652:18;27645:4;27637:6;27633:17;27598:77;:::i;27711:138::-;27790:13;;27812:31;27790:13;27812:31;:::i;27854:734::-;27919:5;27972:3;27965:4;27957:6;27953:17;27949:27;27939:55;;27990:1;27987;27980:12;27939:55;28019:6;28013:13;28045:4;28069:60;28085:43;28125:2;28085:43;:::i;28069:60::-;28163:15;;;28249:1;28245:10;;;;28233:23;;28229:32;;;28194:12;;;;28273:15;;;28270:35;;;28301:1;28298;28291:12;28270:35;28337:2;28329:6;28325:15;28349:210;28365:6;28360:3;28357:15;28349:210;;;28438:3;28432:10;28455:31;28480:5;28455:31;:::i;:::-;28499:18;;28537:12;;;;28382;;28349:210;;28593:132;28669:13;;28691:28;28669:13;28691:28;:::i;28730:2535::-;28824:6;28877:2;28865:9;28856:7;28852:23;28848:32;28845:52;;;28893:1;28890;28883:12;28845:52;28926:9;28920:16;-1:-1:-1;;;;;28996:2:232;28988:6;28985:14;28982:34;;;29012:1;29009;29002:12;28982:34;29035:22;;;;29091:4;29073:16;;;29069:27;29066:47;;;29109:1;29106;29099:12;29066:47;29135:22;;:::i;:::-;29188:2;29182:9;29216:2;29206:8;29203:16;29200:36;;;29232:1;29229;29222:12;29200:36;29259:56;29307:7;29296:8;29292:2;29288:17;29259:56;:::i;:::-;29252:5;29245:71;;29354:2;29350;29346:11;29340:18;29367:33;29392:7;29367:33;:::i;:::-;29427:2;29416:14;;29409:31;29479:2;29471:11;;29465:18;29495:16;;;29492:36;;;29524:1;29521;29514:12;29492:36;29547:17;;;;;29598:6;29580:16;;;29576:29;29573:49;;;29618:1;29615;29608:12;29573:49;29646:22;;:::i;:::-;29699:2;29693:9;29727:2;29717:8;29714:16;29711:36;;;29743:1;29740;29733:12;29711:36;29772:56;29820:7;29809:8;29805:2;29801:17;29772:56;:::i;:::-;29763:7;29756:73;;29863:42;29901:2;29897;29893:11;29863:42;:::i;:::-;29858:2;29849:7;29845:16;29838:68;29945:2;29941;29937:11;29931:18;29974:2;29964:8;29961:16;29958:36;;;29990:1;29987;29980:12;29958:36;30028:67;30087:7;30076:8;30072:2;30068:17;30028:67;:::i;:::-;30023:2;30014:7;30010:16;30003:93;;30132:44;30170:4;30166:2;30162:13;30132:44;:::i;:::-;30125:4;30116:7;30112:18;30105:72;30212:43;30250:3;30246:2;30242:12;30212:43;:::i;:::-;30206:3;30197:7;30193:17;30186:70;30291:43;30329:3;30325:2;30321:12;30291:43;:::i;:::-;30285:3;30276:7;30272:17;30265:70;30370:43;30408:3;30404:2;30400:12;30370:43;:::i;:::-;30364:3;30351:17;;30344:70;30463:3;30455:12;;;30449:19;30430:17;;;30423:46;30488:3;30531:11;;;30525:18;30507:16;;;30500:44;30563:3;30606:11;;;30600:18;30582:16;;;30575:44;30638:3;30681:11;;;30675:18;30657:16;;;30650:44;30713:3;30756:11;;;30750:18;30732:16;;;30725:44;30788:3;30831:11;;;30825:18;30807:16;;;30800:44;30863:3;30906:11;;;30900:18;30882:16;;;30875:44;30939:3;;-1:-1:-1;30977:40:232;31004:12;;;30977:40;:::i;:::-;30971:3;30962:7;30958:17;30951:67;31038:3;31027:14;;31076:40;31111:3;31107:2;31103:12;31076:40;:::i;:::-;31057:17;;;31050:67;;;;31137:3;31181:12;;;31175:19;31156:17;;;31149:46;;;;31222:2;31211:14;;31204:31;31215:5;28730:2535;-1:-1:-1;;;28730:2535:232:o;31270:136::-;31309:3;31337:5;31327:39;;31346:18;;:::i;:::-;-1:-1:-1;;;31382:18:232;;31270:136::o;31772:245::-;31839:6;31892:2;31880:9;31871:7;31867:23;31863:32;31860:52;;;31908:1;31905;31898:12;31860:52;31940:9;31934:16;31959:28;31981:5;31959:28;:::i;32840:287::-;32969:3;33007:6;33001:13;33023:66;33082:6;33077:3;33070:4;33062:6;33058:17;33023:66;:::i;:::-;33105:16;;;;;32840:287;-1:-1:-1;;32840:287:232:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "FEE_RATE_PRECISION()": "f4ca4d1d",
    "collectFees(address,address,int256[])": "e50f19ef",
    "cumulativeFundingRates(address,bool)": "34f32e25",
    "factory()": "c45a0155",
    "feeAndRates(address,uint8)": "d8778068",
    "feeVault()": "478222c2",
    "fundFee()": "33abd028",
    "getExecFee(address)": "09d39897",
    "getFees((address,bool,uint256,bool,address,uint256,uint256,uint256,bool,uint8,uint64,bytes32,uint256,uint8,uint256[]),(address,bool,uint32,uint216,uint256,uint256,uint256,int256,int256,uint256,uint256,uint256))": "41510263",
    "getFundingRate(address,bool)": "20981df4",
    "getOrderFees((address,bool,uint256,bool,bool,(uint8,uint32,uint8,address,uint48,uint128,uint128,uint128,uint128,uint64,uint64,uint128,bytes32),uint256[]))": "c8830bf5",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantControllerRoleByMarketManager(address)": "7fe4a698",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address)": "485cc955",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setFeeAndRates(address,uint256[])": "7dd49023",
    "setFeeVault(address)": "a591f97f",
    "setFundFee(address)": "c9cf9f3a",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAdmin(address)": "75829def",
    "transferOwnership(address)": "f2fde38b",
    "updateCumulativeFundingRate(address,uint256,uint256)": "c6f83ad1",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"fees\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UpdateFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFeeOrRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeOrRate\",\"type\":\"uint256\"}],\"name\":\"UpdateFeeAndRates\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_RATE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int256[]\",\"name\":\"fees\",\"type\":\"int256[]\"}],\"name\":\"collectFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"cumulativeFundingRates\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"feeAndRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"getExecFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_oraclePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isExec\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"liqState\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"_fromOrder\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_refCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"execNum\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"}],\"internalType\":\"struct MarketDataTypes.UpdatePositionInputs\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"lastTime\",\"type\":\"uint32\"},{\"internalType\":\"uint216\",\"name\":\"extra3\",\"type\":\"uint216\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"entryFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"realisedPnl\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"extra0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"extra1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"extra2\",\"type\":\"uint256\"}],\"internalType\":\"struct Position.Props\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"fees\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"getFundingRate\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_oraclePrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCreate\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"updatedAtBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"triggerAbove\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"extra3\",\"type\":\"uint48\"},{\"internalType\":\"uint128\",\"name\":\"collateral\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"size\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"extra1\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"orderID\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"extra2\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"extra0\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"refCode\",\"type\":\"bytes32\"}],\"internalType\":\"struct Order.Props\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"}],\"internalType\":\"struct MarketDataTypes.UpdateOrderInputs\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getOrderFees\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"fees\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"grantControllerRoleByMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundingFee\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"rates\",\"type\":\"uint256[]\"}],\"name\":\"setFeeAndRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"setFeeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingFee\",\"type\":\"address\"}],\"name\":\"setFundFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"longSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortSize\",\"type\":\"uint256\"}],\"name\":\"updateCumulativeFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectFees(address,address,int256[])\":{\"details\":\"Collects fees from the sender and increases the fees in the fee vault for the specified account. Only the controller can call this function.\",\"params\":{\"account\":\"The account to increase fees for.\",\"fees\":\"The array of fee amounts.\",\"token\":\"The address of the token to collect fees in.\"}},\"cumulativeFundingRates(address,bool)\":{\"details\":\"Retrieves the cumulative funding rates for a specific market and position.\",\"params\":{\"isLong\":\"A flag indicating whether the position is long (true) or short (false).\",\"market\":\"The address of the market.\"},\"returns\":{\"_0\":\"The cumulative funding rates for the market and position.\"}},\"getExecFee(address)\":{\"details\":\"Retrieves the execution fee for a specific market.\",\"params\":{\"market\":\"The address of the market.\"},\"returns\":{\"_0\":\"The execution fee for the market.\"}},\"getFees((address,bool,uint256,bool,address,uint256,uint256,uint256,bool,uint8,uint64,bytes32,uint256,uint8,uint256[]),(address,bool,uint32,uint216,uint256,uint256,uint256,int256,int256,uint256,uint256,uint256))\":{\"details\":\"Retrieves the fees associated with updating a position.\",\"params\":{\"params\":\"The parameters of the position update.\",\"position\":\"The properties of the position.\"},\"returns\":{\"fees\":\"An array of fees for each fee type.\"}},\"getFundingRate(address,bool)\":{\"details\":\"Retrieves the funding rate for a specific market and position.\",\"params\":{\"isLong\":\"A flag indicating whether the position is long (true) or short (false).\",\"market\":\"The address of the market.\"},\"returns\":{\"_0\":\"The funding rate for the market and position.\"}},\"getOrderFees((address,bool,uint256,bool,bool,(uint8,uint32,uint8,address,uint48,uint128,uint128,uint128,uint128,uint64,uint64,uint128,bytes32),uint256[]))\":{\"details\":\"Retrieves the total fees for an order by calculating the trade fee and adding it to the execution fee.\",\"params\":{\"params\":\"The parameters of the order.\"},\"returns\":{\"fees\":\"The total fees for the order.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCumulativeFundingRate(address,uint256,uint256)\":{\"details\":\"Updates the cumulative funding rate for a specific market. Only the controller can call this function.\",\"params\":{\"longSize\":\"The size of the long position.\",\"market\":\"The address of the market.\",\"shortSize\":\"The size of the short position.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fee/FeeRouter.sol\":\"FeeRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-create2-deployer/=node_modules/solidity-create2-deployer/\"]},\"sources\":{\"contracts/ac/Ac.sol\":{\"keccak256\":\"0x70a1139a3ee8c0fb74f43f98cf597cf00c9ad7314084eb29a685e663f0184aa5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b67b6b43395531277914ff64024c52e96f9bc1ab25a73af762ff663ab431695e\",\"dweb:/ipfs/QmRog9AxZTGndg5goAV3zigHaKiogoKCBuuptYnxPeN572\"]},\"contracts/ac/AcUpgradable.sol\":{\"keccak256\":\"0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c\",\"dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV\"]},\"contracts/fee/FeeRouter.sol\":{\"keccak256\":\"0xcd43699eb7e373ce9e8dab9514bec7f1cabfa9bbf73c283f3c0845cc897325a1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://395c6608f20b6c34a0a90b48eaad2c3e74605164aed3e806ea3094b174d6edc2\",\"dweb:/ipfs/QmQwfwqUGcVUsRBD9vhvB67VYVpbs4MUC8NESnhYga3DWU\"]},\"contracts/fee/interfaces/IFeeRouter.sol\":{\"keccak256\":\"0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb\",\"dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA\"]},\"contracts/fee/interfaces/IFeeVault.sol\":{\"keccak256\":\"0x92e096c683a7a351d91eba5a7d47dd83e7de969c2a134d980b48d330fa45f475\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fe2a1dbbf2b9cc29f769a0a0c29d99ace43f6c986a9a6686084d0fefaf190d1d\",\"dweb:/ipfs/QmZaHgZ6iKqqEfcbyqoHaFG3erNGpSC9kCpKco8YmbJdbR\"]},\"contracts/fee/interfaces/IFundFee.sol\":{\"keccak256\":\"0xbfc1014e7666953c848e9a80f0edb6c4e7fae5cdfe7701d439628aebe8319604\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7fdefa216aef9473994ca4d0731cfe79b90ecff308e437a1f252ef08add8818a\",\"dweb:/ipfs/QmXv7iVRv3LojcUMYxYCh6Ezjy3XW8zDaQskneNESQovFp\"]},\"contracts/market/MarketDataTypes.sol\":{\"keccak256\":\"0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363\",\"dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf\"]},\"contracts/market/interfaces/IMarketFactory.sol\":{\"keccak256\":\"0x5518d24736c53545df30e79bb35dd6bcce227540742be357fad624e19857c1fb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://972696cd6e2ce8391a3f7c52a6923fa7703b4ef9f5453b92875281f4dd747098\",\"dweb:/ipfs/QmXsDqi9HYTK9mtzBW5D5khA1kZyqzrLMKMDgTTPEbkH5t\"]},\"contracts/order/OrderLib.sol\":{\"keccak256\":\"0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9\",\"dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR\"]},\"contracts/order/OrderStruct.sol\":{\"keccak256\":\"0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2\",\"dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty\"]},\"contracts/position/PositionStruct.sol\":{\"keccak256\":\"0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415\",\"dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW\"]},\"contracts/position/interfaces/IPositionBook.sol\":{\"keccak256\":\"0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d\",\"dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ\"]},\"contracts/utils/TransferHelper.sol\":{\"keccak256\":\"0xe8d49564701b77c67f321439d289a2cb83cfc7825cb047aa38cdc448ae121001\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aae873145ea2dd1b792797118a18c5bdf3fbaebb0d6eab141fe97f91bc0f77e3\",\"dweb:/ipfs/QmbDNeAJLewUtnuz1tfTEgNFexMpYAdWMmhwqckbZ64pgp\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "market",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256[]",
              "name": "fees",
              "type": "int256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "kind",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldFeeOrRate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeOrRate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdateFeeAndRates",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_RATE_PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "int256[]",
              "name": "fees",
              "type": "int256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectFees"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeFundingRates",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "feeAndRates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fundFee",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExecFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MarketDataTypes.UpdatePositionInputs",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "_market",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_isLong",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_oraclePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "_account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_sizeDelta",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_slippage",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_isExec",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "liqState",
                  "type": "uint8"
                },
                {
                  "internalType": "uint64",
                  "name": "_fromOrder",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "_refCode",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralDelta",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "execNum",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "inputs",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "struct Position.Props",
              "name": "position",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isLong",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "lastTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint216",
                  "name": "extra3",
                  "type": "uint216"
                },
                {
                  "internalType": "uint256",
                  "name": "size",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateral",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "averagePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "entryFundingRate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "realisedPnl",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "extra0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "extra1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "extra2",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFees",
          "outputs": [
            {
              "internalType": "int256[]",
              "name": "fees",
              "type": "int256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFundingRate",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MarketDataTypes.UpdateOrderInputs",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "_market",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_isLong",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_oraclePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isCreate",
                  "type": "bool"
                },
                {
                  "internalType": "struct Order.Props",
                  "name": "_order",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint32",
                      "name": "updatedAtBlock",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "triggerAbove",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "uint48",
                      "name": "extra3",
                      "type": "uint48"
                    },
                    {
                      "internalType": "uint128",
                      "name": "collateral",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "size",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "price",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "extra1",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint64",
                      "name": "orderID",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "extra2",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint128",
                      "name": "extra0",
                      "type": "uint128"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "refCode",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "uint256[]",
                  "name": "inputs",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOrderFees",
          "outputs": [
            {
              "internalType": "int256",
              "name": "fees",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantControllerRoleByMarketManager"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "fundingFee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "rates",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeAndRates"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fundingFee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFundFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "longSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCumulativeFundingRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "collectFees(address,address,int256[])": {
            "details": "Collects fees from the sender and increases the fees in the fee vault for the specified account. Only the controller can call this function.",
            "params": {
              "account": "The account to increase fees for.",
              "fees": "The array of fee amounts.",
              "token": "The address of the token to collect fees in."
            }
          },
          "cumulativeFundingRates(address,bool)": {
            "details": "Retrieves the cumulative funding rates for a specific market and position.",
            "params": {
              "isLong": "A flag indicating whether the position is long (true) or short (false).",
              "market": "The address of the market."
            },
            "returns": {
              "_0": "The cumulative funding rates for the market and position."
            }
          },
          "getExecFee(address)": {
            "details": "Retrieves the execution fee for a specific market.",
            "params": {
              "market": "The address of the market."
            },
            "returns": {
              "_0": "The execution fee for the market."
            }
          },
          "getFees((address,bool,uint256,bool,address,uint256,uint256,uint256,bool,uint8,uint64,bytes32,uint256,uint8,uint256[]),(address,bool,uint32,uint216,uint256,uint256,uint256,int256,int256,uint256,uint256,uint256))": {
            "details": "Retrieves the fees associated with updating a position.",
            "params": {
              "params": "The parameters of the position update.",
              "position": "The properties of the position."
            },
            "returns": {
              "fees": "An array of fees for each fee type."
            }
          },
          "getFundingRate(address,bool)": {
            "details": "Retrieves the funding rate for a specific market and position.",
            "params": {
              "isLong": "A flag indicating whether the position is long (true) or short (false).",
              "market": "The address of the market."
            },
            "returns": {
              "_0": "The funding rate for the market and position."
            }
          },
          "getOrderFees((address,bool,uint256,bool,bool,(uint8,uint32,uint8,address,uint48,uint128,uint128,uint128,uint128,uint64,uint64,uint128,bytes32),uint256[]))": {
            "details": "Retrieves the total fees for an order by calculating the trade fee and adding it to the execution fee.",
            "params": {
              "params": "The parameters of the order."
            },
            "returns": {
              "fees": "The total fees for the order."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateCumulativeFundingRate(address,uint256,uint256)": {
            "details": "Updates the cumulative funding rate for a specific market. Only the controller can call this function.",
            "params": {
              "longSize": "The size of the long position.",
              "market": "The address of the market.",
              "shortSize": "The size of the short position."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "solidity-create2-deployer/=node_modules/solidity-create2-deployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/fee/FeeRouter.sol": "FeeRouter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ac/Ac.sol": {
        "keccak256": "0x70a1139a3ee8c0fb74f43f98cf597cf00c9ad7314084eb29a685e663f0184aa5",
        "urls": [
          "bzz-raw://b67b6b43395531277914ff64024c52e96f9bc1ab25a73af762ff663ab431695e",
          "dweb:/ipfs/QmRog9AxZTGndg5goAV3zigHaKiogoKCBuuptYnxPeN572"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/ac/AcUpgradable.sol": {
        "keccak256": "0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75",
        "urls": [
          "bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c",
          "dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/fee/FeeRouter.sol": {
        "keccak256": "0xcd43699eb7e373ce9e8dab9514bec7f1cabfa9bbf73c283f3c0845cc897325a1",
        "urls": [
          "bzz-raw://395c6608f20b6c34a0a90b48eaad2c3e74605164aed3e806ea3094b174d6edc2",
          "dweb:/ipfs/QmQwfwqUGcVUsRBD9vhvB67VYVpbs4MUC8NESnhYga3DWU"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/fee/interfaces/IFeeRouter.sol": {
        "keccak256": "0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2",
        "urls": [
          "bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb",
          "dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/fee/interfaces/IFeeVault.sol": {
        "keccak256": "0x92e096c683a7a351d91eba5a7d47dd83e7de969c2a134d980b48d330fa45f475",
        "urls": [
          "bzz-raw://fe2a1dbbf2b9cc29f769a0a0c29d99ace43f6c986a9a6686084d0fefaf190d1d",
          "dweb:/ipfs/QmZaHgZ6iKqqEfcbyqoHaFG3erNGpSC9kCpKco8YmbJdbR"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/fee/interfaces/IFundFee.sol": {
        "keccak256": "0xbfc1014e7666953c848e9a80f0edb6c4e7fae5cdfe7701d439628aebe8319604",
        "urls": [
          "bzz-raw://7fdefa216aef9473994ca4d0731cfe79b90ecff308e437a1f252ef08add8818a",
          "dweb:/ipfs/QmXv7iVRv3LojcUMYxYCh6Ezjy3XW8zDaQskneNESQovFp"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/MarketDataTypes.sol": {
        "keccak256": "0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098",
        "urls": [
          "bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363",
          "dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/interfaces/IMarketFactory.sol": {
        "keccak256": "0x5518d24736c53545df30e79bb35dd6bcce227540742be357fad624e19857c1fb",
        "urls": [
          "bzz-raw://972696cd6e2ce8391a3f7c52a6923fa7703b4ef9f5453b92875281f4dd747098",
          "dweb:/ipfs/QmXsDqi9HYTK9mtzBW5D5khA1kZyqzrLMKMDgTTPEbkH5t"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/OrderLib.sol": {
        "keccak256": "0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6",
        "urls": [
          "bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9",
          "dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/OrderStruct.sol": {
        "keccak256": "0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e",
        "urls": [
          "bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2",
          "dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/PositionStruct.sol": {
        "keccak256": "0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286",
        "urls": [
          "bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415",
          "dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/interfaces/IPositionBook.sol": {
        "keccak256": "0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75",
        "urls": [
          "bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d",
          "dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/utils/TransferHelper.sol": {
        "keccak256": "0xe8d49564701b77c67f321439d289a2cb83cfc7825cb047aa38cdc448ae121001",
        "urls": [
          "bzz-raw://aae873145ea2dd1b792797118a18c5bdf3fbaebb0d6eab141fe97f91bc0f77e3",
          "dweb:/ipfs/QmbDNeAJLewUtnuz1tfTEgNFexMpYAdWMmhwqckbZ64pgp"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/fee/FeeRouter.sol",
    "id": 1093,
    "exportedSymbols": {
      "Ac": [
        23
      ],
      "AcUpgradable": [
        273
      ],
      "AccessControl": [
        105286
      ],
      "Address": [
        109065
      ],
      "AddressUpgradeable": [
        103672
      ],
      "Context": [
        109087
      ],
      "FeeRouter": [
        1092
      ],
      "IERC20": [
        107291
      ],
      "IERC20Metadata": [
        108159
      ],
      "IERC20Permit": [
        108195
      ],
      "IFeeRouter": [
        2261
      ],
      "IFeeVault": [
        2313
      ],
      "IFundFee": [
        2423
      ],
      "IMarketFactory": [
        13619
      ],
      "Initializable": [
        103283
      ],
      "MarketDataTypes": [
        5235
      ],
      "Ownable": [
        105472
      ],
      "Position": [
        30340
      ],
      "Precision": [
        36577
      ],
      "SafeCast": [
        112729
      ],
      "SafeERC20": [
        108574
      ],
      "TransferHelper": [
        36763
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:10292:2",
    "nodes": [
      {
        "id": 275,
        "nodeType": "PragmaDirective",
        "src": "37:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 276,
        "nodeType": "ImportDirective",
        "src": "63:56:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 107292,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 277,
        "nodeType": "ImportDirective",
        "src": "120:65:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 108575,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 278,
        "nodeType": "ImportDirective",
        "src": "186:75:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 108160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 280,
        "nodeType": "ImportDirective",
        "src": "262:73:2",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 112730,
        "symbolAliases": [
          {
            "foreign": {
              "id": 279,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 112729,
              "src": "270:8:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 281,
        "nodeType": "ImportDirective",
        "src": "336:22:2",
        "nodes": [],
        "absolutePath": "contracts/ac/Ac.sol",
        "file": "../ac/Ac.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 24,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 283,
        "nodeType": "ImportDirective",
        "src": "360:51:2",
        "nodes": [],
        "absolutePath": "contracts/fee/interfaces/IFundFee.sol",
        "file": "./interfaces/IFundFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 2424,
        "symbolAliases": [
          {
            "foreign": {
              "id": 282,
              "name": "IFundFee",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2423,
              "src": "368:8:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 285,
        "nodeType": "ImportDirective",
        "src": "412:53:2",
        "nodes": [],
        "absolutePath": "contracts/fee/interfaces/IFeeVault.sol",
        "file": "./interfaces/IFeeVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 2314,
        "symbolAliases": [
          {
            "foreign": {
              "id": 284,
              "name": "IFeeVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2313,
              "src": "420:9:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 287,
        "nodeType": "ImportDirective",
        "src": "466:62:2",
        "nodes": [],
        "absolutePath": "contracts/market/MarketDataTypes.sol",
        "file": "../market/MarketDataTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 5236,
        "symbolAliases": [
          {
            "foreign": {
              "id": 286,
              "name": "MarketDataTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5235,
              "src": "474:15:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 289,
        "nodeType": "ImportDirective",
        "src": "529:56:2",
        "nodes": [],
        "absolutePath": "contracts/position/PositionStruct.sol",
        "file": "../position/PositionStruct.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 30341,
        "symbolAliases": [
          {
            "foreign": {
              "id": 288,
              "name": "Position",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30340,
              "src": "537:8:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 291,
        "nodeType": "ImportDirective",
        "src": "586:61:2",
        "nodes": [],
        "absolutePath": "contracts/utils/TransferHelper.sol",
        "file": "./../utils/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 36764,
        "symbolAliases": [
          {
            "foreign": {
              "id": 290,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36763,
              "src": "594:14:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 292,
        "nodeType": "ImportDirective",
        "src": "648:49:2",
        "nodes": [],
        "absolutePath": "contracts/market/interfaces/IMarketFactory.sol",
        "file": "../market/interfaces/IMarketFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 13620,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 293,
        "nodeType": "ImportDirective",
        "src": "699:37:2",
        "nodes": [],
        "absolutePath": "contracts/fee/interfaces/IFeeRouter.sol",
        "file": "./interfaces/IFeeRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 2262,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 295,
        "nodeType": "ImportDirective",
        "src": "737:54:2",
        "nodes": [],
        "absolutePath": "contracts/utils/TransferHelper.sol",
        "file": "../utils/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1093,
        "sourceUnit": 36764,
        "symbolAliases": [
          {
            "foreign": {
              "id": 294,
              "name": "Precision",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36577,
              "src": "745:9:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1092,
        "nodeType": "ContractDefinition",
        "src": "793:9535:2",
        "nodes": [
          {
            "id": 303,
            "nodeType": "UsingForDirective",
            "src": "836:27:2",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 300,
              "name": "SafeERC20",
              "nameLocations": [
                "842:9:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 108574,
              "src": "842:9:2"
            },
            "typeName": {
              "id": 302,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 301,
                "name": "IERC20",
                "nameLocations": [
                  "856:6:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 107291,
                "src": "856:6:2"
              },
              "referencedDeclaration": 107291,
              "src": "856:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$107291",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 306,
            "nodeType": "UsingForDirective",
            "src": "868:26:2",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 304,
              "name": "SafeCast",
              "nameLocations": [
                "874:8:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112729,
              "src": "874:8:2"
            },
            "typeName": {
              "id": 305,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "887:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 309,
            "nodeType": "UsingForDirective",
            "src": "899:27:2",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 307,
              "name": "SafeCast",
              "nameLocations": [
                "905:8:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112729,
              "src": "905:8:2"
            },
            "typeName": {
              "id": 308,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "918:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 311,
            "nodeType": "VariableDeclaration",
            "src": "932:23:2",
            "nodes": [],
            "baseFunctions": [
              2153
            ],
            "constant": false,
            "functionSelector": "478222c2",
            "mutability": "mutable",
            "name": "feeVault",
            "nameLocation": "947:8:2",
            "scope": 1092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 310,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "932:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 313,
            "nodeType": "VariableDeclaration",
            "src": "961:22:2",
            "nodes": [],
            "baseFunctions": [
              2158
            ],
            "constant": false,
            "functionSelector": "33abd028",
            "mutability": "mutable",
            "name": "fundFee",
            "nameLocation": "976:7:2",
            "scope": 1092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 312,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "961:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 315,
            "nodeType": "VariableDeclaration",
            "src": "989:22:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "1004:7:2",
            "scope": 1092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 314,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "989:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 319,
            "nodeType": "VariableDeclaration",
            "src": "1018:73:2",
            "nodes": [],
            "baseFunctions": [
              2163
            ],
            "constant": true,
            "functionSelector": "f4ca4d1d",
            "mutability": "constant",
            "name": "FEE_RATE_PRECISION",
            "nameLocation": "1042:18:2",
            "scope": 1092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 316,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1018:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 317,
                "name": "Precision",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 36577,
                "src": "1063:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Precision_$36577_$",
                  "typeString": "type(library Precision)"
                }
              },
              "id": 318,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberLocation": "1073:18:2",
              "memberName": "FEE_RATE_PRECISION",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 36576,
              "src": "1063:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 325,
            "nodeType": "VariableDeclaration",
            "src": "1130:64:2",
            "nodes": [],
            "baseFunctions": [
              2172
            ],
            "constant": false,
            "functionSelector": "d8778068",
            "mutability": "mutable",
            "name": "feeAndRates",
            "nameLocation": "1183:11:2",
            "scope": 1092,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint8 => uint256))"
            },
            "typeName": {
              "id": 324,
              "keyType": {
                "id": 320,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1138:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1130:45:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint8 => uint256))"
              },
              "valueType": {
                "id": 323,
                "keyType": {
                  "id": 321,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "1149:25:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                  "typeString": "mapping(uint8 => uint256)"
                },
                "valueType": {
                  "id": 322,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1166:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 336,
            "nodeType": "EventDefinition",
            "src": "1201:134:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "51b85031527a935663233d62a057687d039b9fbcd79c55e46a5b24510159336f",
            "name": "UpdateFee",
            "nameLocation": "1207:9:2",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1242:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "1226:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "1275:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "1259:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "1300:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "1291:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 330,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1291:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 331,
                    "nodeType": "ArrayTypeName",
                    "src": "1291:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1322:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "1314:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1216:118:2"
            }
          },
          {
            "id": 346,
            "nodeType": "EventDefinition",
            "src": "1340:139:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8e26fb53d63c548677b068d08742bea435b6ecb7911ab3c5ad68fbccddeaf5fe",
            "name": "UpdateFeeAndRates",
            "nameLocation": "1346:17:2",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "1389:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "1373:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "1411:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "1405:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 342,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldFeeOrRate",
                  "nameLocation": "1433:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "1425:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 344,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeOrRate",
                  "nameLocation": "1463:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "1455:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:115:2"
            }
          },
          {
            "id": 375,
            "nodeType": "FunctionDefinition",
            "src": "1485:184:2",
            "nodes": [],
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1528:141:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 355,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "1546:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1566:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1558:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 356,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1558:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1558:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1546:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642061646472657373",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1570:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
                          "typeString": "literal_string \"invalid address\""
                        },
                        "value": "invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
                          "typeString": "literal_string \"invalid address\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1538:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:50:2"
                },
                {
                  "expression": {
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 364,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "1598:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 365,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "1608:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1598:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 369,
                        "name": "MANAGER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1637:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 370,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1651:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1655:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1651:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 368,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105254,
                      "src": "1626:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:36:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 351,
                    "name": "_factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 348,
                    "src": "1518:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 352,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 350,
                  "name": "Ac",
                  "nameLocations": [
                    "1515:2:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "1515:2:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1515:12:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "1505:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "1497:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:18:2"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1528:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 387,
            "nodeType": "ModifierDefinition",
            "src": "1675:98:2",
            "nodes": [],
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "1697:76:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 379,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1725:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1729:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1725:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 378,
                          "name": "_isMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "1715:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1715:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206d61726b6574",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1738:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1612cc86328f522e0281ce1bc1b5df086ac2db46862d0532d1eaa6cd2f6bd11f",
                          "typeString": "literal_string \"invalid market\""
                        },
                        "value": "invalid market"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1612cc86328f522e0281ce1bc1b5df086ac2db46862d0532d1eaa6cd2f6bd11f",
                          "typeString": "literal_string \"invalid market\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1707:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:48:2"
                },
                {
                  "id": 385,
                  "nodeType": "PlaceholderStatement",
                  "src": "1765:1:2"
                }
              ]
            },
            "name": "onlyMarket",
            "nameLocation": "1684:10:2",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1694:2:2"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 405,
            "nodeType": "ModifierDefinition",
            "src": "1779:189:2",
            "nodes": [],
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "1808:160:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 391,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1849:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1853:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1849:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 390,
                            "name": "_isMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "1839:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 395,
                              "name": "ROLE_CONTROLLER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "1872:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 396,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1889:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1893:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1889:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 394,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105050,
                            "src": "1864:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1864:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1839:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "666565526f757465723a206163636573732064656e696564",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1914:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b58a4ecb836b3ab26dd57ffde3337f220e49a089ecd6aef879880ac841f51eb5",
                          "typeString": "literal_string \"feeRouter: access denied\""
                        },
                        "value": "feeRouter: access denied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b58a4ecb836b3ab26dd57ffde3337f220e49a089ecd6aef879880ac841f51eb5",
                          "typeString": "literal_string \"feeRouter: access denied\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1818:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:132:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "1818:132:2"
                },
                {
                  "id": 403,
                  "nodeType": "PlaceholderStatement",
                  "src": "1960:1:2"
                }
              ]
            },
            "name": "onlyFeeController",
            "nameLocation": "1788:17:2",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:2:2"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 443,
            "nodeType": "FunctionDefinition",
            "src": "1974:283:2",
            "nodes": [],
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "2072:185:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 415,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "2090:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2107:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2099:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 416,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2099:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2099:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2090:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420666565207661756c74",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78001ccca4b4a9b9fa9d495b6213a0ade69d96f1b88131ab7f19d83a7d2473eb",
                          "typeString": "literal_string \"invalid fee vault\""
                        },
                        "value": "invalid fee vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78001ccca4b4a9b9fa9d495b6213a0ade69d96f1b88131ab7f19d83a7d2473eb",
                          "typeString": "literal_string \"invalid fee vault\""
                        }
                      ],
                      "id": 414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2082:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2082:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:49:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 425,
                          "name": "fundingFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "2149:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2171:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2163:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2163:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2163:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2149:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642066756e64466565",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2175:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69e77eb1f791212d2d70490c23a874249342c8afa351ed76afc7ec38be1037b4",
                          "typeString": "literal_string \"invalid fundFee\""
                        },
                        "value": "invalid fundFee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69e77eb1f791212d2d70490c23a874249342c8afa351ed76afc7ec38be1037b4",
                          "typeString": "literal_string \"invalid fundFee\""
                        }
                      ],
                      "id": 424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2141:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:52:2"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 434,
                      "name": "feeVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "2204:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 435,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "2215:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2204:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:16:2"
                },
                {
                  "expression": {
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 438,
                      "name": "fundFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "2230:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 439,
                      "name": "fundingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "2240:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2230:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:20:2"
                }
              ]
            },
            "baseFunctions": [
              2179
            ],
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 412,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 411,
                  "name": "initializer",
                  "nameLocations": [
                    "2060:11:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 103185,
                  "src": "2060:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2060:11:2"
              }
            ],
            "name": "initialize",
            "nameLocation": "1983:10:2",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2011:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "2003:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2003:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "fundingFee",
                  "nameLocation": "2034:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "2026:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:57:2"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2072:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 465,
            "nodeType": "FunctionDefinition",
            "src": "2263:149:2",
            "nodes": [],
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "2320:92:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 451,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "2338:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2355:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2347:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2347:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2347:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2338:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420666565207661756c74",
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2359:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78001ccca4b4a9b9fa9d495b6213a0ade69d96f1b88131ab7f19d83a7d2473eb",
                          "typeString": "literal_string \"invalid fee vault\""
                        },
                        "value": "invalid fee vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78001ccca4b4a9b9fa9d495b6213a0ade69d96f1b88131ab7f19d83a7d2473eb",
                          "typeString": "literal_string \"invalid fee vault\""
                        }
                      ],
                      "id": 450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2330:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2330:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "2330:49:2"
                },
                {
                  "expression": {
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 460,
                      "name": "feeVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "2389:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 461,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "2400:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2389:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "2389:16:2"
                }
              ]
            },
            "functionSelector": "a591f97f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 447,
                  "name": "onlyManager",
                  "nameLocations": [
                    "2308:11:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 191,
                  "src": "2308:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2308:11:2"
              }
            ],
            "name": "setFeeVault",
            "nameLocation": "2272:11:2",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2292:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "2284:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2283:15:2"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2320:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 487,
            "nodeType": "FunctionDefinition",
            "src": "2418:157:2",
            "nodes": [],
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "2479:96:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 473,
                          "name": "fundFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "2497:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2516:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2508:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 474,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2508:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2508:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2497:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642066756e64466565",
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2520:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69e77eb1f791212d2d70490c23a874249342c8afa351ed76afc7ec38be1037b4",
                          "typeString": "literal_string \"invalid fundFee\""
                        },
                        "value": "invalid fundFee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69e77eb1f791212d2d70490c23a874249342c8afa351ed76afc7ec38be1037b4",
                          "typeString": "literal_string \"invalid fundFee\""
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2489:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:49:2"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 482,
                      "name": "fundFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "2548:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 483,
                      "name": "fundingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "2558:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2548:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:20:2"
                }
              ]
            },
            "functionSelector": "c9cf9f3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 469,
                  "name": "onlyManager",
                  "nameLocations": [
                    "2467:11:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 191,
                  "src": "2467:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2467:11:2"
              }
            ],
            "name": "setFundFee",
            "nameLocation": "2427:10:2",
            "parameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "fundingFee",
                  "nameLocation": "2446:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "2438:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2437:20:2"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2479:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 562,
            "nodeType": "FunctionDefinition",
            "src": "2581:514:2",
            "nodes": [],
            "body": {
              "id": 561,
              "nodeType": "Block",
              "src": "2704:391:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 499,
                              "name": "rates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "2735:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2741:6:2",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2735:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2750:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2735:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 503,
                              "name": "rates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "2755:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2761:6:2",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2755:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 508,
                                        "name": "FeeType",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2148,
                                        "src": "2781:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                          "typeString": "type(enum IFeeRouter.FeeType)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                          "typeString": "type(enum IFeeRouter.FeeType)"
                                        }
                                      ],
                                      "id": 507,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "2776:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2776:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_enum$_FeeType_$2148",
                                      "typeString": "type(enum IFeeRouter.FeeType)"
                                    }
                                  },
                                  "id": 510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2790:3:2",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "2776:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                ],
                                "id": 506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2771:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 505,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2771:4:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2771:23:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2797:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2771:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2755:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2735:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420706172616d73",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2812:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac5ac7e4af96b704de23383a91c10346f729e9b7855b951aeea8b541e93db654",
                          "typeString": "literal_string \"invalid params\""
                        },
                        "value": "invalid params"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac5ac7e4af96b704de23383a91c10346f729e9b7855b951aeea8b541e93db654",
                          "typeString": "literal_string \"invalid params\""
                        }
                      ],
                      "id": 498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2714:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2714:124:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "2714:124:2"
                },
                {
                  "body": {
                    "id": 559,
                    "nodeType": "Block",
                    "src": "2890:199:2",
                    "statements": [
                      {
                        "assignments": [
                          531
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 531,
                            "mutability": "mutable",
                            "name": "old",
                            "nameLocation": "2912:3:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 559,
                            "src": "2904:11:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 530,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2904:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 537,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 532,
                              "name": "feeAndRates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "2918:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint8 => uint256))"
                              }
                            },
                            "id": 534,
                            "indexExpression": {
                              "id": 533,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "2930:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2918:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                              "typeString": "mapping(uint8 => uint256)"
                            }
                          },
                          "id": 536,
                          "indexExpression": {
                            "id": 535,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2938:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2918:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2904:36:2"
                      },
                      {
                        "assignments": [
                          539
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 539,
                            "mutability": "mutable",
                            "name": "rate",
                            "nameLocation": "2962:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 559,
                            "src": "2954:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 538,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2954:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 543,
                        "initialValue": {
                          "baseExpression": {
                            "id": 540,
                            "name": "rates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "2969:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 542,
                          "indexExpression": {
                            "id": 541,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2975:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2969:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2954:23:2"
                      },
                      {
                        "expression": {
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 544,
                                "name": "feeAndRates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "2991:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint8 => uint256))"
                                }
                              },
                              "id": 547,
                              "indexExpression": {
                                "id": 545,
                                "name": "market",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 489,
                                "src": "3003:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2991:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                                "typeString": "mapping(uint8 => uint256)"
                              }
                            },
                            "id": 548,
                            "indexExpression": {
                              "id": 546,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "3011:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2991:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 549,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "3016:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2991:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 551,
                        "nodeType": "ExpressionStatement",
                        "src": "2991:29:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 553,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "3057:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 554,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "3065:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 555,
                              "name": "old",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "3068:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 556,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "3073:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 552,
                            "name": "UpdateFeeAndRates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "3039:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint8,uint256,uint256)"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3039:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 558,
                        "nodeType": "EmitStatement",
                        "src": "3034:44:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 523,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "2867:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 524,
                        "name": "rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "2871:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2877:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2871:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2867:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 560,
                  "initializationExpression": {
                    "assignments": [
                      520
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2860:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 560,
                        "src": "2854:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2854:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 522,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2864:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2854:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2885:3:2",
                      "subExpression": {
                        "id": 527,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "2885:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 529,
                    "nodeType": "ExpressionStatement",
                    "src": "2885:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2849:240:2"
                }
              ]
            },
            "baseFunctions": [
              2187
            ],
            "functionSelector": "7dd49023",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 495,
                    "name": "MARKET_MGR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "2687:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 496,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 494,
                  "name": "onlyInitOr",
                  "nameLocations": [
                    "2676:10:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122,
                  "src": "2676:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2676:27:2"
              }
            ],
            "name": "setFeeAndRates",
            "nameLocation": "2590:14:2",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "2622:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "2614:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2614:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "rates",
                  "nameLocation": "2655:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "2638:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 490,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2638:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 491,
                    "nodeType": "ArrayTypeName",
                    "src": "2638:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:62:2"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2704:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 584,
            "nodeType": "FunctionDefinition",
            "src": "3101:188:2",
            "nodes": [],
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "3225:64:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 578,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "3264:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 579,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "3271:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 580,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "3275:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 575,
                            "name": "feeVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "3245:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 574,
                          "name": "IFeeVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "3235:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFeeVault_$2313_$",
                            "typeString": "type(contract IFeeVault)"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3235:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFeeVault_$2313",
                          "typeString": "contract IFeeVault"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3255:8:2",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2312,
                      "src": "3235:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3235:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "3235:47:2"
                }
              ]
            },
            "baseFunctions": [
              2196
            ],
            "functionSelector": "d9caed12",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 571,
                    "name": "WITHDRAW_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "3210:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 572,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 570,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3201:8:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105009,
                  "src": "3201:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3201:23:2"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3110:8:2",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3136:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "3128:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3159:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "3151:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3179:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "3171:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3171:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3118:73:2"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3225:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 606,
            "nodeType": "FunctionDefinition",
            "src": "3591:277:2",
            "nodes": [],
            "body": {
              "id": 605,
              "nodeType": "Block",
              "src": "3731:137:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 600,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3800:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 601,
                        "name": "longSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "3820:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 602,
                        "name": "shortSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "3842:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 597,
                            "name": "fundFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "3750:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 596,
                          "name": "IFundFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "3741:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFundFee_$2423_$",
                            "typeString": "type(contract IFundFee)"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3741:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFundFee_$2423",
                          "typeString": "contract IFundFee"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3759:27:2",
                      "memberName": "updateCumulativeFundingRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2387,
                      "src": "3741:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:120:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:120:2"
                }
              ]
            },
            "baseFunctions": [
              2230
            ],
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "3295:291:2",
              "text": " @dev Updates the cumulative funding rate for a specific market.\n Only the controller can call this function.\n @param market The address of the market.\n @param longSize The size of the long position.\n @param shortSize The size of the short position."
            },
            "functionSelector": "c6f83ad1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 594,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 593,
                  "name": "onlyMarket",
                  "nameLocations": [
                    "3720:10:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 387,
                  "src": "3720:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3720:10:2"
              }
            ],
            "name": "updateCumulativeFundingRate",
            "nameLocation": "3600:27:2",
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "3645:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 606,
                  "src": "3637:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3637:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "longSize",
                  "nameLocation": "3669:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 606,
                  "src": "3661:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "shortSize",
                  "nameLocation": "3695:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 606,
                  "src": "3687:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3687:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3627:83:2"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3731:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 658,
            "nodeType": "FunctionDefinition",
            "src": "4216:408:2",
            "nodes": [],
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "4348:276:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "4366:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "4358:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4358:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 632,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 625,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4400:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4404:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4400:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 629,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4420:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FeeRouter_$1092",
                              "typeString": "contract FeeRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FeeRouter_$1092",
                              "typeString": "contract FeeRouter"
                            }
                          ],
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4412:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 627,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4412:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4412:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 622,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "4383:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 621,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "4376:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4376:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4390:9:2",
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107268,
                      "src": "4376:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4376:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4358:68:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 633,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "4440:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4451:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4440:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 638,
                  "nodeType": "IfStatement",
                  "src": "4436:49:2",
                  "trueBody": {
                    "id": 637,
                    "nodeType": "Block",
                    "src": "4454:31:2",
                    "statements": [
                      {
                        "functionReturnParameters": 618,
                        "id": 636,
                        "nodeType": "Return",
                        "src": "4468:7:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4526:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4530:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4526:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 645,
                        "name": "feeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "4538:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 646,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "4548:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 640,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "4502:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 639,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "4495:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4495:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4509:16:2",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 108258,
                      "src": "4495:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$107291_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$107291_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4495:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "4495:61:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 650,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "4582:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 651,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4591:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4595:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4591:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 653,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "4603:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      },
                      {
                        "id": 654,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "4609:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 649,
                      "name": "UpdateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "4572:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_int256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,int256[] memory,uint256)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4572:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "EmitStatement",
                  "src": "4567:50:2"
                }
              ]
            },
            "baseFunctions": [
              2260
            ],
            "documentation": {
              "id": 607,
              "nodeType": "StructuredDocumentation",
              "src": "3874:337:2",
              "text": " @dev Collects fees from the sender and increases the fees in the fee vault for the specified account.\n Only the controller can call this function.\n @param account The account to increase fees for.\n @param token The address of the token to collect fees in.\n @param fees The array of fee amounts."
            },
            "functionSelector": "e50f19ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 617,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 616,
                  "name": "onlyFeeController",
                  "nameLocations": [
                    "4330:17:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 405,
                  "src": "4330:17:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4330:17:2"
              }
            ],
            "name": "collectFees",
            "nameLocation": "4225:11:2",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4254:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "4246:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4246:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4279:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "4271:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4271:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "4310:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "4294:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 612,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4294:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 613,
                    "nodeType": "ArrayTypeName",
                    "src": "4294:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4236:84:2"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:0:2"
            },
            "scope": 1092,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 677,
            "nodeType": "FunctionDefinition",
            "src": "4806:135:2",
            "nodes": [],
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "4874:67:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 666,
                        "name": "feeAndRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "4891:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint8 => uint256))"
                        }
                      },
                      "id": 668,
                      "indexExpression": {
                        "id": 667,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "4903:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4891:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                        "typeString": "mapping(uint8 => uint256)"
                      }
                    },
                    "id": 674,
                    "indexExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 671,
                            "name": "FeeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "4917:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                              "typeString": "type(enum IFeeRouter.FeeType)"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4925:7:2",
                          "memberName": "ExecFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2138,
                          "src": "4917:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FeeType_$2148",
                            "typeString": "enum IFeeRouter.FeeType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FeeType_$2148",
                            "typeString": "enum IFeeRouter.FeeType"
                          }
                        ],
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4911:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4911:5:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4911:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4891:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 665,
                  "id": 675,
                  "nodeType": "Return",
                  "src": "4884:50:2"
                }
              ]
            },
            "baseFunctions": [
              2203
            ],
            "documentation": {
              "id": 659,
              "nodeType": "StructuredDocumentation",
              "src": "4630:171:2",
              "text": " @dev Retrieves the execution fee for a specific market.\n @param market The address of the market.\n @return The execution fee for the market."
            },
            "functionSelector": "09d39897",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExecFee",
            "nameLocation": "4815:10:2",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "4834:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "4826:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4826:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4825:16:2"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "4865:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4865:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4864:9:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 696,
            "nodeType": "FunctionDefinition",
            "src": "5240:178:2",
            "nodes": [],
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "5346:72:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 691,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "5396:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 692,
                        "name": "isLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "5404:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 688,
                            "name": "fundFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "5372:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 687,
                          "name": "IFundFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "5363:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFundFee_$2423_$",
                            "typeString": "type(contract IFundFee)"
                          }
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5363:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFundFee_$2423",
                          "typeString": "contract IFundFee"
                        }
                      },
                      "id": 690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5381:14:2",
                      "memberName": "getFundingRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2396,
                      "src": "5363:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bool_$returns$_t_int256_$",
                        "typeString": "function (address,bool) view external returns (int256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5363:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 686,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "5356:55:2"
                }
              ]
            },
            "baseFunctions": [
              2212
            ],
            "documentation": {
              "id": 678,
              "nodeType": "StructuredDocumentation",
              "src": "4947:288:2",
              "text": " @dev Retrieves the funding rate for a specific market and position.\n @param market The address of the market.\n @param isLong A flag indicating whether the position is long (true) or short (false).\n @return The funding rate for the market and position."
            },
            "functionSelector": "20981df4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFundingRate",
            "nameLocation": "5249:14:2",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "5281:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "5273:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5273:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "isLong",
                  "nameLocation": "5302:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "5297:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5297:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5263:51:2"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "5338:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:8:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 715,
            "nodeType": "FunctionDefinition",
            "src": "5741:196:2",
            "nodes": [],
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "5855:82:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "5915:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 711,
                        "name": "isLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "5923:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 707,
                            "name": "feeVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "5882:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 706,
                          "name": "IFeeVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "5872:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFeeVault_$2313_$",
                            "typeString": "type(contract IFeeVault)"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5872:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFeeVault_$2313",
                          "typeString": "contract IFeeVault"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5892:22:2",
                      "memberName": "cumulativeFundingRates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2272,
                      "src": "5872:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bool_$returns$_t_int256_$",
                        "typeString": "function (address,bool) view external returns (int256)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5872:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 705,
                  "id": 713,
                  "nodeType": "Return",
                  "src": "5865:65:2"
                }
              ]
            },
            "baseFunctions": [
              2221
            ],
            "documentation": {
              "id": 697,
              "nodeType": "StructuredDocumentation",
              "src": "5424:312:2",
              "text": " @dev Retrieves the cumulative funding rates for a specific market and position.\n @param market The address of the market.\n @param isLong A flag indicating whether the position is long (true) or short (false).\n @return The cumulative funding rates for the market and position."
            },
            "functionSelector": "34f32e25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cumulativeFundingRates",
            "nameLocation": "5750:22:2",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "5790:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "5782:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5782:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "isLong",
                  "nameLocation": "5811:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "5806:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5806:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5772:51:2"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "5847:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5847:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5846:8:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 780,
            "nodeType": "FunctionDefinition",
            "src": "6174:506:2",
            "nodes": [],
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "6295:385:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    725
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 725,
                      "mutability": "mutable",
                      "name": "_kind",
                      "nameLocation": "6311:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "6305:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 724,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6305:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 726,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6305:11:2"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 727,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "6331:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UpdateOrderInputs_$4718_memory_ptr",
                        "typeString": "struct MarketDataTypes.UpdateOrderInputs memory"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6338:6:2",
                    "memberName": "isOpen",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4709,
                    "src": "6331:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 746,
                    "nodeType": "Block",
                    "src": "6407:56:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 738,
                            "name": "_kind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "6421:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 741,
                                  "name": "FeeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2148,
                                  "src": "6435:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                    "typeString": "type(enum IFeeRouter.FeeType)"
                                  }
                                },
                                "id": 742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6443:8:2",
                                "memberName": "CloseFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2136,
                                "src": "6435:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_FeeType_$2148",
                                  "typeString": "enum IFeeRouter.FeeType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_FeeType_$2148",
                                  "typeString": "enum IFeeRouter.FeeType"
                                }
                              ],
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6429:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 739,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "6429:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6429:23:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "6421:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 745,
                        "nodeType": "ExpressionStatement",
                        "src": "6421:31:2"
                      }
                    ]
                  },
                  "id": 747,
                  "nodeType": "IfStatement",
                  "src": "6327:136:2",
                  "trueBody": {
                    "id": 737,
                    "nodeType": "Block",
                    "src": "6346:55:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 729,
                            "name": "_kind",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "6360:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 732,
                                  "name": "FeeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2148,
                                  "src": "6374:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                    "typeString": "type(enum IFeeRouter.FeeType)"
                                  }
                                },
                                "id": 733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6382:7:2",
                                "memberName": "OpenFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2135,
                                "src": "6374:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_FeeType_$2148",
                                  "typeString": "enum IFeeRouter.FeeType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_FeeType_$2148",
                                  "typeString": "enum IFeeRouter.FeeType"
                                }
                              ],
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6368:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 730,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "6368:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6368:22:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "6360:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 736,
                        "nodeType": "ExpressionStatement",
                        "src": "6360:30:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 749,
                      "mutability": "mutable",
                      "name": "_tradeFee",
                      "nameLocation": "6481:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "6473:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 748,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6473:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 751,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "6501:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UpdateOrderInputs_$4718_memory_ptr",
                            "typeString": "struct MarketDataTypes.UpdateOrderInputs memory"
                          }
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6508:7:2",
                        "memberName": "_market",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4703,
                        "src": "6501:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 753,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 719,
                            "src": "6517:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UpdateOrderInputs_$4718_memory_ptr",
                              "typeString": "struct MarketDataTypes.UpdateOrderInputs memory"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6524:6:2",
                          "memberName": "_order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4714,
                          "src": "6517:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Props_$27776_memory_ptr",
                            "typeString": "struct Order.Props memory"
                          }
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6531:4:2",
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27763,
                        "src": "6517:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 756,
                        "name": "_kind",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "6537:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 750,
                      "name": "_getFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1062,
                      "src": "6493:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint8) view returns (uint256)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6493:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6473:70:2"
                },
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "_execFee",
                      "nameLocation": "6561:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "6553:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6553:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 761,
                        "name": "feeAndRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "6572:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint8 => uint256))"
                        }
                      },
                      "id": 764,
                      "indexExpression": {
                        "expression": {
                          "id": 762,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "6584:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UpdateOrderInputs_$4718_memory_ptr",
                            "typeString": "struct MarketDataTypes.UpdateOrderInputs memory"
                          }
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6591:7:2",
                        "memberName": "_market",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4703,
                        "src": "6584:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6572:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                        "typeString": "mapping(uint8 => uint256)"
                      }
                    },
                    "id": 770,
                    "indexExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 767,
                            "name": "FeeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "6606:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                              "typeString": "type(enum IFeeRouter.FeeType)"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6614:7:2",
                          "memberName": "ExecFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2138,
                          "src": "6606:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FeeType_$2148",
                            "typeString": "enum IFeeRouter.FeeType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FeeType_$2148",
                            "typeString": "enum IFeeRouter.FeeType"
                          }
                        ],
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6600:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 765,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6600:5:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6600:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6572:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6553:70:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 772,
                              "name": "_tradeFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "6641:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 773,
                              "name": "_execFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 760,
                              "src": "6653:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6641:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 775,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6640:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6663:8:2",
                      "memberName": "toInt256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 112728,
                      "src": "6640:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (int256)"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 723,
                  "id": 778,
                  "nodeType": "Return",
                  "src": "6633:40:2"
                }
              ]
            },
            "baseFunctions": [
              2238
            ],
            "documentation": {
              "id": 716,
              "nodeType": "StructuredDocumentation",
              "src": "5943:226:2",
              "text": " @dev Retrieves the total fees for an order by calculating the trade fee and adding it to the execution fee.\n @param params The parameters of the order.\n @return fees The total fees for the order."
            },
            "functionSelector": "c8830bf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderFees",
            "nameLocation": "6183:12:2",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "6246:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "6205:47:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UpdateOrderInputs_$4718_memory_ptr",
                    "typeString": "struct MarketDataTypes.UpdateOrderInputs"
                  },
                  "typeName": {
                    "id": 718,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 717,
                      "name": "MarketDataTypes.UpdateOrderInputs",
                      "nameLocations": [
                        "6205:15:2",
                        "6221:17:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4718,
                      "src": "6205:33:2"
                    },
                    "referencedDeclaration": 4718,
                    "src": "6205:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UpdateOrderInputs_$4718_storage_ptr",
                      "typeString": "struct MarketDataTypes.UpdateOrderInputs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6195:63:2"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "6289:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "6282:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6282:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6281:13:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 964,
            "nodeType": "FunctionDefinition",
            "src": "6941:1493:2",
            "nodes": [],
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "7109:1325:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 793,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "7119:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 799,
                                "name": "FeeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2148,
                                "src": "7145:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                  "typeString": "type(enum IFeeRouter.FeeType)"
                                }
                              },
                              "id": 800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7153:7:2",
                              "memberName": "Counter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2147,
                              "src": "7145:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FeeType_$2148",
                                "typeString": "enum IFeeRouter.FeeType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_FeeType_$2148",
                                "typeString": "enum IFeeRouter.FeeType"
                              }
                            ],
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7139:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 797,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "7139:5:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7139:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7126:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (int256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 794,
                            "name": "int256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7130:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 795,
                          "nodeType": "ArrayTypeName",
                          "src": "7130:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                            "typeString": "int256[]"
                          }
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7126:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[] memory"
                      }
                    },
                    "src": "7119:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                      "typeString": "int256[] memory"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "7119:43:2"
                },
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "_market",
                      "nameLocation": "7180:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 963,
                      "src": "7172:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7172:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 809,
                  "initialValue": {
                    "expression": {
                      "id": 807,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "7190:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                        "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7197:7:2",
                    "memberName": "_market",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4800,
                    "src": "7190:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7172:32:2"
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "mutability": "mutable",
                      "name": "_fundFee",
                      "nameLocation": "7222:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 963,
                      "src": "7215:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 810,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7215:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 821,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 813,
                        "name": "_market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "7261:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 814,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "7282:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                            "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                          }
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7289:7:2",
                        "memberName": "_isLong",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4802,
                        "src": "7282:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 816,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "7310:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Props_$30140_memory_ptr",
                            "typeString": "struct Position.Props memory"
                          }
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7319:4:2",
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30125,
                        "src": "7310:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 818,
                          "name": "position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "7337:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Props_$30140_memory_ptr",
                            "typeString": "struct Position.Props memory"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7346:16:2",
                        "memberName": "entryFundingRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30131,
                        "src": "7337:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 812,
                      "name": "_getFundingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "7233:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_uint256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (address,bool,uint256,int256) view returns (int256)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7233:139:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7215:157:2"
                },
                {
                  "expression": {
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 822,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "7382:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                          "typeString": "int256[] memory"
                        }
                      },
                      "id": 828,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 825,
                              "name": "FeeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "7393:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                "typeString": "type(enum IFeeRouter.FeeType)"
                              }
                            },
                            "id": 826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7401:7:2",
                            "memberName": "FundFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2137,
                            "src": "7393:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FeeType_$2148",
                              "typeString": "enum IFeeRouter.FeeType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_FeeType_$2148",
                              "typeString": "enum IFeeRouter.FeeType"
                            }
                          ],
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7387:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 823,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "7387:5:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7387:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7382:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 829,
                      "name": "_fundFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "7413:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "7382:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 831,
                  "nodeType": "ExpressionStatement",
                  "src": "7382:39:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 832,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "7436:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                            "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7443:10:2",
                        "memberName": "_sizeDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4810,
                        "src": "7436:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7457:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7436:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 836,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "7462:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                            "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7469:15:2",
                        "memberName": "collateralDelta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4824,
                        "src": "7462:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7488:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7462:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7436:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 844,
                  "nodeType": "IfStatement",
                  "src": "7432:95:2",
                  "trueBody": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "7491:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 841,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "7512:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          }
                        },
                        "functionReturnParameters": 792,
                        "id": 842,
                        "nodeType": "Return",
                        "src": "7505:11:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "expression": {
                      "id": 845,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "7566:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                        "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7573:6:2",
                    "memberName": "isOpen",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4806,
                    "src": "7566:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 922,
                    "nodeType": "Block",
                    "src": "7745:418:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 870,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "7789:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                                "typeString": "int256[] memory"
                              }
                            },
                            "id": 876,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 873,
                                    "name": "FeeType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2148,
                                    "src": "7800:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                      "typeString": "type(enum IFeeRouter.FeeType)"
                                    }
                                  },
                                  "id": 874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7808:8:2",
                                  "memberName": "CloseFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2136,
                                  "src": "7800:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                ],
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7794:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 871,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7794:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7794:23:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7789:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 878,
                                        "name": "_market",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 806,
                                        "src": "7847:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 879,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 784,
                                          "src": "7856:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                                            "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                                          }
                                        },
                                        "id": 880,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7863:10:2",
                                        "memberName": "_sizeDelta",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4810,
                                        "src": "7856:17:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 883,
                                              "name": "FeeType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2148,
                                              "src": "7881:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                                "typeString": "type(enum IFeeRouter.FeeType)"
                                              }
                                            },
                                            "id": 884,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "7889:8:2",
                                            "memberName": "CloseFee",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2136,
                                            "src": "7881:16:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_FeeType_$2148",
                                              "typeString": "enum IFeeRouter.FeeType"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_enum$_FeeType_$2148",
                                              "typeString": "enum IFeeRouter.FeeType"
                                            }
                                          ],
                                          "id": 882,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7875:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 881,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7875:5:2",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 885,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7875:23:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 877,
                                      "name": "_getFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1062,
                                      "src": "7839:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                                        "typeString": "function (address,uint256,uint8) view returns (uint256)"
                                      }
                                    },
                                    "id": 886,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7839:60:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 887,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7821:92:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7914:8:2",
                              "memberName": "toInt256",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 112728,
                              "src": "7821:101:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (int256)"
                              }
                            },
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7821:103:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "7789:135:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 891,
                        "nodeType": "ExpressionStatement",
                        "src": "7789:135:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 892,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "7977:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                                "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                              }
                            },
                            "id": 893,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7984:8:2",
                            "memberName": "liqState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4818,
                            "src": "7977:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7996:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7977:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 921,
                        "nodeType": "IfStatement",
                        "src": "7973:180:2",
                        "trueBody": {
                          "id": 920,
                          "nodeType": "Block",
                          "src": "7999:154:2",
                          "statements": [
                            {
                              "assignments": [
                                897
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 897,
                                  "mutability": "mutable",
                                  "name": "_fee",
                                  "nameLocation": "8025:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 920,
                                  "src": "8017:12:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 896,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8017:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 907,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 898,
                                    "name": "feeAndRates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 325,
                                    "src": "8032:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(uint8 => uint256))"
                                    }
                                  },
                                  "id": 900,
                                  "indexExpression": {
                                    "id": 899,
                                    "name": "_market",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 806,
                                    "src": "8044:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8032:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                                    "typeString": "mapping(uint8 => uint256)"
                                  }
                                },
                                "id": 906,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 903,
                                        "name": "FeeType",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2148,
                                        "src": "8059:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                          "typeString": "type(enum IFeeRouter.FeeType)"
                                        }
                                      },
                                      "id": 904,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "8067:6:2",
                                      "memberName": "LiqFee",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2139,
                                      "src": "8059:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_FeeType_$2148",
                                        "typeString": "enum IFeeRouter.FeeType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_FeeType_$2148",
                                        "typeString": "enum IFeeRouter.FeeType"
                                      }
                                    ],
                                    "id": 902,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8053:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 901,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8053:5:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8053:21:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8032:43:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8017:58:2"
                            },
                            {
                              "expression": {
                                "id": 918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 908,
                                    "name": "fees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 791,
                                    "src": "8093:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                                      "typeString": "int256[] memory"
                                    }
                                  },
                                  "id": 914,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 911,
                                          "name": "FeeType",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2148,
                                          "src": "8104:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                            "typeString": "type(enum IFeeRouter.FeeType)"
                                          }
                                        },
                                        "id": 912,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "8112:6:2",
                                        "memberName": "LiqFee",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2139,
                                        "src": "8104:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_FeeType_$2148",
                                          "typeString": "enum IFeeRouter.FeeType"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_FeeType_$2148",
                                          "typeString": "enum IFeeRouter.FeeType"
                                        }
                                      ],
                                      "id": 910,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      },
                                      "typeName": {
                                        "id": 909,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:5:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 913,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:21:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8093:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 915,
                                      "name": "_fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 897,
                                      "src": "8123:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 916,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8128:8:2",
                                    "memberName": "toInt256",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 112728,
                                    "src": "8123:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (int256)"
                                    }
                                  },
                                  "id": 917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8123:15:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8093:45:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 919,
                              "nodeType": "ExpressionStatement",
                              "src": "8093:45:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 923,
                  "nodeType": "IfStatement",
                  "src": "7562:601:2",
                  "trueBody": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "7581:158:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 847,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "7595:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                                "typeString": "int256[] memory"
                              }
                            },
                            "id": 853,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 850,
                                    "name": "FeeType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2148,
                                    "src": "7606:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                      "typeString": "type(enum IFeeRouter.FeeType)"
                                    }
                                  },
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7614:7:2",
                                  "memberName": "OpenFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2135,
                                  "src": "7606:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                ],
                                "id": 849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7600:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 848,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7600:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7600:22:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7595:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 855,
                                        "name": "_market",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 806,
                                        "src": "7652:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 856,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 784,
                                          "src": "7661:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                                            "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                                          }
                                        },
                                        "id": 857,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7668:10:2",
                                        "memberName": "_sizeDelta",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4810,
                                        "src": "7661:17:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 860,
                                              "name": "FeeType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2148,
                                              "src": "7686:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                                "typeString": "type(enum IFeeRouter.FeeType)"
                                              }
                                            },
                                            "id": 861,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "7694:7:2",
                                            "memberName": "OpenFee",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2135,
                                            "src": "7686:15:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_FeeType_$2148",
                                              "typeString": "enum IFeeRouter.FeeType"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_enum$_FeeType_$2148",
                                              "typeString": "enum IFeeRouter.FeeType"
                                            }
                                          ],
                                          "id": 859,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7680:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 858,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7680:5:2",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 862,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7680:22:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 854,
                                      "name": "_getFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1062,
                                      "src": "7644:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                                        "typeString": "function (address,uint256,uint8) view returns (uint256)"
                                      }
                                    },
                                    "id": 863,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7644:59:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 864,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7626:91:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7718:8:2",
                              "memberName": "toInt256",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 112728,
                              "src": "7626:100:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (int256)"
                              }
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7626:102:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "7595:133:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "7595:133:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 924,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "8176:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                          "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8183:7:2",
                      "memberName": "execNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4826,
                      "src": "8176:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8193:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8176:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "nodeType": "IfStatement",
                  "src": "8172:235:2",
                  "trueBody": {
                    "id": 959,
                    "nodeType": "Block",
                    "src": "8196:211:2",
                    "statements": [
                      {
                        "assignments": [
                          929
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 929,
                            "mutability": "mutable",
                            "name": "_fee",
                            "nameLocation": "8242:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 959,
                            "src": "8234:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 928,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8234:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 939,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 930,
                              "name": "feeAndRates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "8249:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint8 => uint256))"
                              }
                            },
                            "id": 932,
                            "indexExpression": {
                              "id": 931,
                              "name": "_market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 806,
                              "src": "8261:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8249:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                              "typeString": "mapping(uint8 => uint256)"
                            }
                          },
                          "id": 938,
                          "indexExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 935,
                                  "name": "FeeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2148,
                                  "src": "8276:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                    "typeString": "type(enum IFeeRouter.FeeType)"
                                  }
                                },
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8284:7:2",
                                "memberName": "ExecFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2138,
                                "src": "8276:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_FeeType_$2148",
                                  "typeString": "enum IFeeRouter.FeeType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_FeeType_$2148",
                                  "typeString": "enum IFeeRouter.FeeType"
                                }
                              ],
                              "id": 934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8270:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 933,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "8270:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8270:22:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8249:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8234:59:2"
                      },
                      {
                        "expression": {
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 940,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "8307:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 941,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 929,
                              "src": "8314:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 942,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 784,
                                "src": "8321:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                                  "typeString": "struct MarketDataTypes.UpdatePositionInputs memory"
                                }
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8328:7:2",
                              "memberName": "execNum",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4826,
                              "src": "8321:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "8314:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8307:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 946,
                        "nodeType": "ExpressionStatement",
                        "src": "8307:28:2"
                      },
                      {
                        "expression": {
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 947,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "8350:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                                "typeString": "int256[] memory"
                              }
                            },
                            "id": 953,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 950,
                                    "name": "FeeType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2148,
                                    "src": "8361:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                      "typeString": "type(enum IFeeRouter.FeeType)"
                                    }
                                  },
                                  "id": 951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8369:7:2",
                                  "memberName": "ExecFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2138,
                                  "src": "8361:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_FeeType_$2148",
                                    "typeString": "enum IFeeRouter.FeeType"
                                  }
                                ],
                                "id": 949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8355:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 948,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8355:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8355:22:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8350:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 954,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 929,
                                "src": "8381:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8386:8:2",
                              "memberName": "toInt256",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 112728,
                              "src": "8381:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (int256)"
                              }
                            },
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8381:15:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "8350:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "8350:46:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 961,
                    "name": "fees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 791,
                    "src": "8423:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                      "typeString": "int256[] memory"
                    }
                  },
                  "functionReturnParameters": 792,
                  "id": 962,
                  "nodeType": "Return",
                  "src": "8416:11:2"
                }
              ]
            },
            "baseFunctions": [
              2250
            ],
            "documentation": {
              "id": 781,
              "nodeType": "StructuredDocumentation",
              "src": "6686:250:2",
              "text": " @dev Retrieves the fees associated with updating a position.\n @param params The parameters of the position update.\n @param position The properties of the position.\n @return fees An array of fees for each fee type."
            },
            "functionSelector": "41510263",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFees",
            "nameLocation": "6950:7:2",
            "parameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7011:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "6967:50:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_memory_ptr",
                    "typeString": "struct MarketDataTypes.UpdatePositionInputs"
                  },
                  "typeName": {
                    "id": 783,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 782,
                      "name": "MarketDataTypes.UpdatePositionInputs",
                      "nameLocations": [
                        "6967:15:2",
                        "6983:20:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4830,
                      "src": "6967:36:2"
                    },
                    "referencedDeclaration": 4830,
                    "src": "6967:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UpdatePositionInputs_$4830_storage_ptr",
                      "typeString": "struct MarketDataTypes.UpdatePositionInputs"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "position",
                  "nameLocation": "7049:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "7027:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Props_$30140_memory_ptr",
                    "typeString": "struct Position.Props"
                  },
                  "typeName": {
                    "id": 786,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 785,
                      "name": "Position.Props",
                      "nameLocations": [
                        "7027:8:2",
                        "7036:5:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30140,
                      "src": "7027:14:2"
                    },
                    "referencedDeclaration": 30140,
                    "src": "7027:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Props_$30140_storage_ptr",
                      "typeString": "struct Position.Props"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6957:106:2"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "7103:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "7087:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 789,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7087:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 790,
                    "nodeType": "ArrayTypeName",
                    "src": "7087:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7086:22:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 996,
            "nodeType": "FunctionDefinition",
            "src": "8852:418:2",
            "nodes": [],
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "9017:253:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 978,
                      "name": "sizeDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "9031:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9044:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9031:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 984,
                  "nodeType": "IfStatement",
                  "src": "9027:53:2",
                  "trueBody": {
                    "id": 983,
                    "nodeType": "Block",
                    "src": "9047:33:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9068:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 977,
                        "id": 982,
                        "nodeType": "Return",
                        "src": "9061:8:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 989,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "9158:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 990,
                        "name": "sizeDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "9182:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 991,
                        "name": "entryFundingRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "9209:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 992,
                        "name": "isLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "9243:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 986,
                            "name": "fundFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "9118:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 985,
                          "name": "IFundFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "9109:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFundFee_$2423_$",
                            "typeString": "type(contract IFundFee)"
                          }
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9109:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFundFee_$2423",
                          "typeString": "contract IFundFee"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9127:13:2",
                      "memberName": "getFundingFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2409,
                      "src": "9109:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_int256_$_t_bool_$returns$_t_int256_$",
                        "typeString": "function (address,uint256,int256,bool) view external returns (int256)"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9109:154:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 977,
                  "id": 994,
                  "nodeType": "Return",
                  "src": "9090:173:2"
                }
              ]
            },
            "documentation": {
              "id": 965,
              "nodeType": "StructuredDocumentation",
              "src": "8440:407:2",
              "text": " @dev Calculates the funding fee for a given position update.\n @param market The address of the market.\n @param isLong A flag indicating whether the position is long (true) or short (false).\n @param sizeDelta The change in position size.\n @param entryFundingRate The funding rate at the entry of the position.\n @return The funding fee for the position update."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getFundingFee",
            "nameLocation": "8861:14:2",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "8893:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "8885:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8885:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "isLong",
                  "nameLocation": "8914:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "8909:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8909:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "sizeDelta",
                  "nameLocation": "8938:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "8930:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8930:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "entryFundingRate",
                  "nameLocation": "8964:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "8957:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8957:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8875:111:2"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "9009:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9009:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9008:8:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1062,
            "nodeType": "FunctionDefinition",
            "src": "9526:519:2",
            "nodes": [],
            "body": {
              "id": 1061,
              "nodeType": "Block",
              "src": "9651:394:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1008,
                      "name": "sizeDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "9665:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9678:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9665:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1014,
                  "nodeType": "IfStatement",
                  "src": "9661:53:2",
                  "trueBody": {
                    "id": 1013,
                    "nodeType": "Block",
                    "src": "9681:33:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9702:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1007,
                        "id": 1012,
                        "nodeType": "Return",
                        "src": "9695:8:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1016,
                          "name": "kind",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "9732:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1020,
                                    "name": "FeeType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2148,
                                    "src": "9750:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                      "typeString": "type(enum IFeeRouter.FeeType)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_enum$_FeeType_$2148_$",
                                      "typeString": "type(enum IFeeRouter.FeeType)"
                                    }
                                  ],
                                  "id": 1019,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "9745:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9745:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_enum$_FeeType_$2148",
                                  "typeString": "type(enum IFeeRouter.FeeType)"
                                }
                              },
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "9759:3:2",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "9745:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FeeType_$2148",
                                "typeString": "enum IFeeRouter.FeeType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_FeeType_$2148",
                                "typeString": "enum IFeeRouter.FeeType"
                              }
                            ],
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9740:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1017,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9740:4:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9740:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9732:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642046656554797065",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9765:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_addb4693e7d37293752529fc8efb9174cdfa9ecf68736b0843c028f4c1f96c8f",
                          "typeString": "literal_string \"invalid FeeType\""
                        },
                        "value": "invalid FeeType"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_addb4693e7d37293752529fc8efb9174cdfa9ecf68736b0843c028f4c1f96c8f",
                          "typeString": "literal_string \"invalid FeeType\""
                        }
                      ],
                      "id": 1015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9724:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9724:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "9724:59:2"
                },
                {
                  "assignments": [
                    1029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1029,
                      "mutability": "mutable",
                      "name": "_point",
                      "nameLocation": "9801:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1061,
                      "src": "9793:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9793:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1035,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1030,
                        "name": "feeAndRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "9810:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint8 => uint256))"
                        }
                      },
                      "id": 1032,
                      "indexExpression": {
                        "id": 1031,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "9822:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9810:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_uint256_$",
                        "typeString": "mapping(uint8 => uint256)"
                      }
                    },
                    "id": 1034,
                    "indexExpression": {
                      "id": 1033,
                      "name": "kind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "9830:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9810:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9793:42:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1036,
                      "name": "_point",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "9849:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9859:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9849:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1044,
                  "nodeType": "IfStatement",
                  "src": "9845:57:2",
                  "trueBody": {
                    "id": 1043,
                    "nodeType": "Block",
                    "src": "9862:40:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1039,
                            "name": "_point",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "9876:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030303030",
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9885:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "9876:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1042,
                        "nodeType": "ExpressionStatement",
                        "src": "9876:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1046,
                      "mutability": "mutable",
                      "name": "_size",
                      "nameLocation": "9920:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1061,
                      "src": "9912:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1045,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9912:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1056,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1047,
                            "name": "sizeDelta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "9929:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1048,
                                  "name": "FEE_RATE_PRECISION",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 319,
                                  "src": "9942:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1049,
                                  "name": "_point",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1029,
                                  "src": "9963:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9942:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1051,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9941:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9929:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1053,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9928:43:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1054,
                      "name": "FEE_RATE_PRECISION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "9986:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9928:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9912:92:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1057,
                      "name": "sizeDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "10021:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1058,
                      "name": "_size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "10033:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10021:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1007,
                  "id": 1060,
                  "nodeType": "Return",
                  "src": "10014:24:2"
                }
              ]
            },
            "documentation": {
              "id": 997,
              "nodeType": "StructuredDocumentation",
              "src": "9276:244:2",
              "text": " @dev Calculates the fee for a given size delta and fee kind.\n @param market The address of the market.\n @param sizeDelta The change in position size.\n @param kind The fee kind.\n @return The fee amount."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getFee",
            "nameLocation": "9535:7:2",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "9560:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "9552:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9552:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "sizeDelta",
                  "nameLocation": "9584:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "9576:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9576:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "kind",
                  "nameLocation": "9609:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "9603:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9603:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9542:77:2"
            },
            "returnParameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "9642:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9641:9:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1091,
            "nodeType": "FunctionDefinition",
            "src": "10051:275:2",
            "nodes": [],
            "body": {
              "id": 1090,
              "nodeType": "Block",
              "src": "10115:211:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1073,
                      "mutability": "mutable",
                      "name": "_marketProps",
                      "nameLocation": "10153:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1090,
                      "src": "10125:40:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                        "typeString": "struct IMarketFactory.Props"
                      },
                      "typeName": {
                        "id": 1072,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1071,
                          "name": "IMarketFactory.Props",
                          "nameLocations": [
                            "10125:14:2",
                            "10140:5:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13603,
                          "src": "10125:20:2"
                        },
                        "referencedDeclaration": 13603,
                        "src": "10125:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Props_$13603_storage_ptr",
                          "typeString": "struct IMarketFactory.Props"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1080,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1078,
                        "name": "_market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "10215:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1075,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "10183:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1074,
                          "name": "IMarketFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13619,
                          "src": "10168:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMarketFactory_$13619_$",
                            "typeString": "type(contract IMarketFactory)"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10168:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMarketFactory_$13619",
                          "typeString": "contract IMarketFactory"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10205:9:2",
                      "memberName": "getMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13618,
                      "src": "10168:46:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Props_$13603_memory_ptr_$",
                        "typeString": "function (address) view external returns (struct IMarketFactory.Props memory)"
                      }
                    },
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10168:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                      "typeString": "struct IMarketFactory.Props memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10125:98:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1081,
                              "name": "_marketProps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1073,
                              "src": "10241:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                                "typeString": "struct IMarketFactory.Props memory"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10254:6:2",
                            "memberName": "inputs",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13602,
                            "src": "10241:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateInputs_$13595_memory_ptr",
                              "typeString": "struct IMarketFactory.CreateInputs memory"
                            }
                          },
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10261:10:2",
                          "memberName": "_allowOpen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13590,
                          "src": "10241:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 1084,
                              "name": "_marketProps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1073,
                              "src": "10287:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                                "typeString": "struct IMarketFactory.Props memory"
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10300:6:2",
                            "memberName": "inputs",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13602,
                            "src": "10287:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateInputs_$13595_memory_ptr",
                              "typeString": "struct IMarketFactory.CreateInputs memory"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10307:11:2",
                          "memberName": "_allowClose",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13592,
                          "src": "10287:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10241:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1088,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10240:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1068,
                  "id": 1089,
                  "nodeType": "Return",
                  "src": "10233:86:2"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMarket",
            "nameLocation": "10060:9:2",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1064,
                  "mutability": "mutable",
                  "name": "_market",
                  "nameLocation": "10078:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1091,
                  "src": "10070:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10070:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10069:17:2"
            },
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1091,
                  "src": "10109:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10109:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10108:6:2"
            },
            "scope": 1092,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 296,
              "name": "Ac",
              "nameLocations": [
                "815:2:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23,
              "src": "815:2:2"
            },
            "id": 297,
            "nodeType": "InheritanceSpecifier",
            "src": "815:2:2"
          },
          {
            "baseName": {
              "id": 298,
              "name": "IFeeRouter",
              "nameLocations": [
                "819:10:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2261,
              "src": "819:10:2"
            },
            "id": 299,
            "nodeType": "InheritanceSpecifier",
            "src": "819:10:2"
          }
        ],
        "canonicalName": "FeeRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1092,
          2261,
          23,
          273,
          103283,
          105472,
          105286,
          110310,
          110322,
          105359,
          109087
        ],
        "name": "FeeRouter",
        "nameLocation": "802:9:2",
        "scope": 1093,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 2
}
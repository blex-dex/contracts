{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marketAddr",
          "type": "address"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_marketAddress",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "addrs",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "_openStoreLong",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_closeStoreLong",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_openStoreShort",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_closeStoreShort",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_minSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minLeverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxLeverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxTradeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minPay",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minCollateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_allowOpen",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "_allowClose",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_tokenDigits",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IMarketFactory.CreateInputs",
              "name": "inputs",
              "type": "tuple"
            }
          ],
          "internalType": "struct IMarketFactory.Props",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarkets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minPay",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "allowOpen",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allowClose",
              "type": "bool"
            }
          ],
          "internalType": "struct IMarketFactory.Outs[]",
          "name": "_outs",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_marketAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "addrs",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_openStoreLong",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_closeStoreLong",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_openStoreShort",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_closeStoreShort",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minSlippage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxSlippage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxTradeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minPay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minCollateral",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_allowOpen",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "_allowClose",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "_tokenDigits",
              "type": "uint256"
            }
          ],
          "internalType": "struct IMarketFactory.CreateInputs",
          "name": "inputs",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "268:1129:43:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063a0d2ac9814610051578063b1283e7714610066578063d4dfadbf14610091578063ec2c9016146100b1575b600080fd5b61006461005f366004610aad565b6100c6565b005b610079610074366004610b6f565b610299565b60405161008893929190610d45565b60405180910390f35b6100a461009f366004610d83565b61052d565b6040516100889190610da5565b6100b961053a565b6040516100889190610dfd565b6100ce610927565b8281526001600160a01b038216602082015260008054600181018255908052815182916012027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019081906101239082610f28565b5060208201516001820180546001600160a01b0319166001600160a01b0390921691909117905560408201518051600283019081906101629082610f28565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516101a19260028501920190610a06565b5060608201516003820180546001600160a01b03199081166001600160a01b03938416179091556080840151600484018054831691841691909117905560a0840151600584018054831691841691909117905560c0840151600684018054909216921691909117905560e082015160078201556101008083015160088301556101208301516009830155610140830151600a830155610160830151600b830155610180830151600c8301556101a0830151600d8301556101c0830151600e830180546101e086015161ffff1990911692151561ff0019169290921791151590920217905561020090910151600f909101555050505050565b600081815481106102a957600080fd5b90600052602060002090601202016000915090508060000180546102cc90610e9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610e9f565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050908060010160009054906101000a90046001600160a01b031690806002016040518061022001604052908160008201805461038490610e9f565b80601f01602080910402602001604051908101604052809291908181526020018280546103b090610e9f565b80156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b505050918352505060018201546001600160a01b0316602080830191909152600283018054604080518285028101850182528281529401939283018282801561046f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610451575b505050918352505060038201546001600160a01b0390811660208301526004830154811660408301526005830154811660608301526006830154166080820152600782015460a0820152600882015460c0820152600982015460e0820152600a82015461010080830191909152600b830154610120830152600c830154610140830152600d830154610160830152600e83015460ff80821615156101808501529190041615156101a0820152600f909101546101c090910152905083565b610535610927565b919050565b6060600080805480602002602001604051908101604052809291908181526020016000905b82821015610808578382906000526020600020906012020160405180606001604052908160008201805461059290610e9f565b80601f01602080910402602001604051908101604052809291908181526020018280546105be90610e9f565b801561060b5780601f106105e05761010080835404028352916020019161060b565b820191906000526020600020905b8154815290600101906020018083116105ee57829003601f168201915b505050918352505060018201546001600160a01b031660208201526040805161022081018252600284018054929093019290918290829061064b90610e9f565b80601f016020809104026020016040519081016040528092919081815260200182805461067790610e9f565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b505050918352505060018201546001600160a01b0316602080830191909152600283018054604080518285028101850182528281529401939283018282801561073657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610718575b505050918352505060038201546001600160a01b0390811660208084019190915260048401548216604084015260058401548216606084015260068401549091166080830152600783015460a0830152600883015460c0830152600983015460e0830152600a83015461010080840191909152600b840154610120840152600c840154610140840152600d840154610160840152600e84015460ff80821615156101808601529190041615156101a0830152600f909201546101c090910152915291835250600192909201910161055f565b505082519293508291505067ffffffffffffffff81111561082b5761082b610a80565b60405190808252806020026020018201604052801561088557816020015b6040805160a081018252606080825260006020808401829052938301819052908201819052608082015282526000199092019101816108495790505b50925060005b818110156109215760008382815181106108a7576108a7610fe8565b602002602001015190506040518060a001604052808260000151815260200182602001516001600160a01b03168152602001601481526020016001151581526020016001151581525085838151811061090257610902610fe8565b602002602001018190525050808061091990610ffe565b91505061088b565b50505090565b60405180606001604052806060815260200160006001600160a01b03168152602001610a016040518061022001604052806060815260200160006001600160a01b031681526020016060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600015158152602001600081525090565b905290565b828054828255906000526020600020908101928215610a5b579160200282015b82811115610a5b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610a26565b50610a67929150610a6b565b5090565b5b80821115610a675760008155600101610a6c565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461053557600080fd5b60008060408385031215610ac057600080fd5b823567ffffffffffffffff80821115610ad857600080fd5b818501915085601f830112610aec57600080fd5b813581811115610afe57610afe610a80565b604051601f8201601f19908116603f01168101908382118183101715610b2657610b26610a80565b81604052828152886020848701011115610b3f57600080fd5b826020860160208301376000602084830101528096505050505050610b6660208401610a96565b90509250929050565b600060208284031215610b8157600080fd5b5035919050565b6000815180845260005b81811015610bae57602081850181015186830182015201610b92565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501945080840160005b83811015610c075781516001600160a01b031687529582019590820190600101610be2565b509495945050505050565b60006102208251818552610c2882860182610b88565b9150506020830151610c4560208601826001600160a01b03169052565b5060408301518482036040860152610c5d8282610bce565b9150506060830151610c7a60608601826001600160a01b03169052565b506080830151610c9560808601826001600160a01b03169052565b5060a0830151610cb060a08601826001600160a01b03169052565b5060c0830151610ccb60c08601826001600160a01b03169052565b5060e08381015190850152610100808401519085015261012080840151908501526101408084015190850152610160808401519085015261018080840151908501526101a080840151908501526101c0808401511515908501526101e0808401511515908501526102009283015192909301919091525090565b606081526000610d586060830186610b88565b6001600160a01b03851660208401528281036040840152610d798185610c12565b9695505050505050565b600060208284031215610d9557600080fd5b610d9e82610a96565b9392505050565b602081526000825160606020840152610dc16080840182610b88565b60208501516001600160a01b0316604085810191909152850151848203601f19016060860152909150610df48282610c12565b95945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e9157603f19898403018552815160a08151818652610e4a82870182610b88565b838b01516001600160a01b0316878c0152898401518a8801526060808501511515908801526080938401511515939096019290925250509386019390860190600101610e24565b509098975050505050505050565b600181811c90821680610eb357607f821691505b602082108103610ed357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610f2357600081815260208120601f850160051c81016020861015610f005750805b601f850160051c820191505b81811015610f1f57828155600101610f0c565b5050505b505050565b815167ffffffffffffffff811115610f4257610f42610a80565b610f5681610f508454610e9f565b84610ed9565b602080601f831160018114610f8b5760008415610f735750858301515b600019600386901b1c1916600185901b178555610f1f565b600085815260208120601f198616915b82811015610fba57888601518255948401946001909101908401610f9b565b5085821015610fd85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161101e57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122020a1f0fbca73c29aaec109ad59dc1900d4d607bf1304d7cfe180ba06ff9ac52264736f6c63430008110033",
    "sourceMap": "268:1129:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:215;;;;;;:::i;:::-;;:::i;:::-;;373:22;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;403:93;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;502:672::-;;;:::i;:::-;;;;;;;:::i;1180:215::-;1252:18;;:::i;:::-;1280:17;;;-1:-1:-1;;;;;1307:17:43;;:10;;;:17;1280:10;1369:19;;;;;;;;;;;;1280:5;;1369:19;;;;;;;;;;;:::i;:::-;-1:-1:-1;1369:19:43;;;;;;;;;-1:-1:-1;;;;;;1369:19:43;-1:-1:-1;;;;;1369:19:43;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1369:19:43;;;;;;;;;;-1:-1:-1;;;;;;1369:19:43;-1:-1:-1;;;;;1369:19:43;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1369:19:43;;;;;;;;;-1:-1:-1;;;;;;1369:19:43;;;-1:-1:-1;;;;;1369:19:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1369:19:43;;;;;;-1:-1:-1;;1369:19:43;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1180:215:43:o;373:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:22:43;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;373:22:43;;;-1:-1:-1;;373:22:43;;;;-1:-1:-1;;;;;373:22:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:22:43;;;;;;;;;;;;;;;;-1:-1:-1;;;373:22:43;;;-1:-1:-1;;373:22:43;;;;-1:-1:-1;;;;;373:22:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;373:22:43;:::o;403:93::-;480:12;;:::i;:::-;403:93;;;:::o;502:672::-;547:19;578:23;604:7;578:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;578:33:43;;;-1:-1:-1;;578:33:43;;;;-1:-1:-1;;;;;578:33:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;578:33:43;;;-1:-1:-1;;578:33:43;;;;-1:-1:-1;;;;;578:33:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;578:33:43;;;;;;;;;;;;;;;;-1:-1:-1;;;578:33:43;;;-1:-1:-1;;578:33:43;;;;-1:-1:-1;;;;;578:33:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;578:33:43;;;;;;;;;;-1:-1:-1;;632:15:43;;578:33;;-1:-1:-1;632:15:43;;-1:-1:-1;;665:15:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:15:43;;-1:-1:-1;;665:15:43;;;;;;;;;;;;657:23;;695:6;690:478;711:3;707:1;:7;690:478;;;735:14;752:8;761:1;752:11;;;;;;;;:::i;:::-;;;;;;;735:28;;982:175;;;;;;;;1011:1;:6;;;982:175;;;;1041:1;:6;;;-1:-1:-1;;;;;982:175:43;;;;;1073:2;982:175;;;;1104:4;982:175;;;;;;1138:4;982:175;;;;;971:5;977:1;971:8;;;;;;;;:::i;:::-;;;;;;:186;;;;721:447;716:3;;;;;:::i;:::-;;;;690:478;;;;568:606;;502:672;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:232;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:173;214:20;;-1:-1:-1;;;;;263:31:232;;253:42;;243:70;;309:1;306;299:12;324:1006;402:6;410;463:2;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;519:9;506:23;548:18;589:2;581:6;578:14;575:34;;;605:1;602;595:12;575:34;643:6;632:9;628:22;618:32;;688:7;681:4;677:2;673:13;669:27;659:55;;710:1;707;700:12;659:55;746:2;733:16;768:2;764;761:10;758:36;;;774:18;;:::i;:::-;849:2;843:9;817:2;903:13;;-1:-1:-1;;899:22:232;;;923:2;895:31;891:40;879:53;;;947:18;;;967:22;;;944:46;941:72;;;993:18;;:::i;:::-;1033:10;1029:2;1022:22;1068:2;1060:6;1053:18;1110:7;1103:4;1098:2;1094;1090:11;1086:22;1083:35;1080:55;;;1131:1;1128;1121:12;1080:55;1191:2;1184:4;1180:2;1176:13;1169:4;1161:6;1157:17;1144:50;1238:1;1231:4;1226:2;1218:6;1214:15;1210:26;1203:37;1259:6;1249:16;;;;;;;1284:40;1318:4;1307:9;1303:20;1284:40;:::i;:::-;1274:50;;324:1006;;;;;:::o;1335:180::-;1394:6;1447:2;1435:9;1426:7;1422:23;1418:32;1415:52;;;1463:1;1460;1453:12;1415:52;-1:-1:-1;1486:23:232;;1335:180;-1:-1:-1;1335:180:232:o;1520:423::-;1562:3;1600:5;1594:12;1627:6;1622:3;1615:19;1652:1;1662:162;1676:6;1673:1;1670:13;1662:162;;;1738:4;1794:13;;;1790:22;;1784:29;1766:11;;;1762:20;;1755:59;1691:12;1662:162;;;1666:3;1869:1;1862:4;1853:6;1848:3;1844:16;1840:27;1833:38;1932:4;1925:2;1921:7;1916:2;1908:6;1904:15;1900:29;1895:3;1891:39;1887:50;1880:57;;;1520:423;;;;:::o;2057:461::-;2110:3;2148:5;2142:12;2175:6;2170:3;2163:19;2201:4;2230:2;2225:3;2221:12;2214:19;;2267:2;2260:5;2256:14;2288:1;2298:195;2312:6;2309:1;2306:13;2298:195;;;2377:13;;-1:-1:-1;;;;;2373:39:232;2361:52;;2433:12;;;;2468:15;;;;2409:1;2327:9;2298:195;;;-1:-1:-1;2509:3:232;;2057:461;-1:-1:-1;;;;;2057:461:232:o;2619:1847::-;2674:3;2702:6;2743:5;2737:12;2770:2;2765:3;2758:15;2794:45;2835:2;2830:3;2826:12;2812;2794:45;:::i;:::-;2782:57;;;2887:4;2880:5;2876:16;2870:23;2902:50;2946:4;2941:3;2937:14;2921;-1:-1:-1;;;;;2014:31:232;2002:44;;1948:104;2902:50;;3000:4;2993:5;2989:16;2983:23;3048:3;3042:4;3038:14;3031:4;3026:3;3022:14;3015:38;3076:50;3121:4;3105:14;3076:50;:::i;:::-;3062:64;;;3174:4;3167:5;3163:16;3157:23;3189:50;3233:4;3228:3;3224:14;3208;-1:-1:-1;;;;;2014:31:232;2002:44;;1948:104;3189:50;;3287:4;3280:5;3276:16;3270:23;3302:50;3346:4;3341:3;3337:14;3321;-1:-1:-1;;;;;2014:31:232;2002:44;;1948:104;3302:50;;3400:4;3393:5;3389:16;3383:23;3415:50;3459:4;3454:3;3450:14;3434;-1:-1:-1;;;;;2014:31:232;2002:44;;1948:104;3415:50;;3513:4;3506:5;3502:16;3496:23;3528:50;3572:4;3567:3;3563:14;3547;-1:-1:-1;;;;;2014:31:232;2002:44;;1948:104;3528:50;-1:-1:-1;3627:4:232;3616:16;;;3610:23;3594:14;;;3587:47;3653:6;3695:14;;;3689:21;3675:12;;;3668:43;3730:6;3772:14;;;3766:21;3752:12;;;3745:43;3807:6;3849:14;;;3843:21;3829:12;;;3822:43;3884:6;3926:14;;;3920:21;3906:12;;;3899:43;3961:6;4003:14;;;3997:21;3983:12;;;3976:43;4038:6;4080:14;;;4074:21;4060:12;;;4053:43;4115:6;4158:14;;;4152:21;2593:13;2586:21;4214:12;;;2574:34;4246:6;4289:14;;;4283:21;2593:13;2586:21;4345:12;;;2574:34;4378:6;4421:15;;;4415:22;4400:13;;;;4393:45;;;;-1:-1:-1;4400:13:232;2619:1847::o;4471:535::-;4738:2;4727:9;4720:21;4701:4;4764:45;4805:2;4794:9;4790:18;4782:6;4764:45;:::i;:::-;-1:-1:-1;;;;;4845:32:232;;4840:2;4825:18;;4818:60;4914:22;;;4909:2;4894:18;;4887:50;4954:46;4918:6;4985;4954:46;:::i;:::-;4946:54;4471:535;-1:-1:-1;;;;;;4471:535:232:o;5011:186::-;5070:6;5123:2;5111:9;5102:7;5098:23;5094:32;5091:52;;;5139:1;5136;5129:12;5091:52;5162:29;5181:9;5162:29;:::i;:::-;5152:39;5011:186;-1:-1:-1;;;5011:186:232:o;5202:628::-;5379:2;5368:9;5361:21;5342:4;5417:6;5411:13;5460:4;5455:2;5444:9;5440:18;5433:32;5488:52;5535:3;5524:9;5520:19;5506:12;5488:52;:::i;:::-;5598:2;5586:15;;5580:22;-1:-1:-1;;;;;5576:48:232;5571:2;5556:18;;;5549:76;;;;5662:15;;5656:22;5720;;;-1:-1:-1;;5716:36:232;5709:4;5694:20;;5687:66;5474;;-1:-1:-1;5770:54:232;5474:66;5656:22;5770:54;:::i;:::-;5762:62;5202:628;-1:-1:-1;;;;;5202:628:232:o;5835:1363::-;6023:4;6052:2;6092;6081:9;6077:18;6122:2;6111:9;6104:21;6145:6;6180;6174:13;6211:6;6203;6196:22;6237:2;6227:12;;6270:2;6259:9;6255:18;6248:25;;6332:2;6322:6;6319:1;6315:14;6304:9;6300:30;6296:39;6370:2;6362:6;6358:15;6391:1;6401:768;6415:6;6412:1;6409:13;6401:768;;;6508:2;6504:7;6492:9;6484:6;6480:22;6476:36;6471:3;6464:49;6542:6;6536:13;6572:4;6615:2;6609:9;6646:2;6638:6;6631:18;6676:48;6720:2;6712:6;6708:15;6694:12;6676:48;:::i;:::-;6771:11;;;6765:18;-1:-1:-1;;;;;6761:44:232;6744:15;;;6737:69;6849:11;;;6843:18;6826:15;;;6819:43;6885:4;6946:11;;;6940:18;6933:26;6926:34;6909:15;;;6902:59;6984:4;7045:11;;;7039:18;7032:26;7025:34;7008:15;;;;7001:59;;;;-1:-1:-1;;7147:12:232;;;;7112:15;;;;6802:1;6430:9;6401:768;;;-1:-1:-1;7186:6:232;;5835:1363;-1:-1:-1;;;;;;;;5835:1363:232:o;7203:380::-;7282:1;7278:12;;;;7325;;;7346:61;;7400:4;7392:6;7388:17;7378:27;;7346:61;7453:2;7445:6;7442:14;7422:18;7419:38;7416:161;;7499:10;7494:3;7490:20;7487:1;7480:31;7534:4;7531:1;7524:15;7562:4;7559:1;7552:15;7416:161;;7203:380;;;:::o;7714:545::-;7816:2;7811:3;7808:11;7805:448;;;7852:1;7877:5;7873:2;7866:17;7922:4;7918:2;7908:19;7992:2;7980:10;7976:19;7973:1;7969:27;7963:4;7959:38;8028:4;8016:10;8013:20;8010:47;;;-1:-1:-1;8051:4:232;8010:47;8106:2;8101:3;8097:12;8094:1;8090:20;8084:4;8080:31;8070:41;;8161:82;8179:2;8172:5;8169:13;8161:82;;;8224:17;;;8205:1;8194:13;8161:82;;;8165:3;;;7805:448;7714:545;;;:::o;8435:1352::-;8561:3;8555:10;8588:18;8580:6;8577:30;8574:56;;;8610:18;;:::i;:::-;8639:97;8729:6;8689:38;8721:4;8715:11;8689:38;:::i;:::-;8683:4;8639:97;:::i;:::-;8791:4;;8855:2;8844:14;;8872:1;8867:663;;;;9574:1;9591:6;9588:89;;;-1:-1:-1;9643:19:232;;;9637:26;9588:89;-1:-1:-1;;8392:1:232;8388:11;;;8384:24;8380:29;8370:40;8416:1;8412:11;;;8367:57;9690:81;;8837:944;;8867:663;7661:1;7654:14;;;7698:4;7685:18;;-1:-1:-1;;8903:20:232;;;9021:236;9035:7;9032:1;9029:14;9021:236;;;9124:19;;;9118:26;9103:42;;9216:27;;;;9184:1;9172:14;;;;9051:19;;9021:236;;;9025:3;9285:6;9276:7;9273:19;9270:201;;;9346:19;;;9340:26;-1:-1:-1;;9429:1:232;9425:14;;;9441:3;9421:24;9417:37;9413:42;9398:58;9383:74;;9270:201;-1:-1:-1;;;;;9517:1:232;9501:14;;;9497:22;9484:36;;-1:-1:-1;8435:1352:232:o;9792:127::-;9853:10;9848:3;9844:20;9841:1;9834:31;9884:4;9881:1;9874:15;9908:4;9905:1;9898:15;9924:232;9963:3;9984:17;;;9981:140;;10043:10;10038:3;10034:20;10031:1;10024:31;10078:4;10075:1;10068:15;10106:4;10103:1;10096:15;9981:140;-1:-1:-1;10148:1:232;10137:13;;9924:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getMarket(address)": "d4dfadbf",
    "getMarkets()": "ec2c9016",
    "markets(uint256)": "b1283e77",
    "setMarket(string,address)": "a0d2ac98"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketAddr\",\"type\":\"address\"}],\"name\":\"getMarket\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_marketAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_openStoreLong\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_closeStoreLong\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_openStoreShort\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_closeStoreShort\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTradeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minCollateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_allowOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowClose\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_tokenDigits\",\"type\":\"uint256\"}],\"internalType\":\"struct IMarketFactory.CreateInputs\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"internalType\":\"struct IMarketFactory.Props\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarkets\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minPay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allowClose\",\"type\":\"bool\"}],\"internalType\":\"struct IMarketFactory.Outs[]\",\"name\":\"_outs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_marketAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_openStoreLong\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_closeStoreLong\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_openStoreShort\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_closeStoreShort\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSlippage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTradeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minCollateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_allowOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowClose\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_tokenDigits\",\"type\":\"uint256\"}],\"internalType\":\"struct IMarketFactory.CreateInputs\",\"name\":\"inputs\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocker/MockMarketFactory.sol\":\"MockMarketFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-create2-deployer/=node_modules/solidity-create2-deployer/\"]},\"sources\":{\"contracts/fee/interfaces/IFeeRouter.sol\":{\"keccak256\":\"0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb\",\"dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA\"]},\"contracts/market/MarketConfigStruct.sol\":{\"keccak256\":\"0xcb33c17fa87bb3ffb7cf83e22f1af6439a8fca18677f4a4ee3e4c1ac29df14ec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://60a3aad8490144ed9bcd52c959102163462a786950b3e0db83810be8962b76fd\",\"dweb:/ipfs/QmTGd436ceMxwmYVwjfbUSZNb3BdbVycPMn8yypd9Xd4tb\"]},\"contracts/market/MarketDataTypes.sol\":{\"keccak256\":\"0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363\",\"dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf\"]},\"contracts/market/interfaces/IMarketFactory.sol\":{\"keccak256\":\"0x5518d24736c53545df30e79bb35dd6bcce227540742be357fad624e19857c1fb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://972696cd6e2ce8391a3f7c52a6923fa7703b4ef9f5453b92875281f4dd747098\",\"dweb:/ipfs/QmXsDqi9HYTK9mtzBW5D5khA1kZyqzrLMKMDgTTPEbkH5t\"]},\"contracts/market/interfaces/IMarketValid.sol\":{\"keccak256\":\"0x598813afa73b2b47861b1de36040174fc6e40002010ad94ef24e14a075a92f11\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cf4cd641017cd74945fcc577f81527c7bd7dac158965f91c6ca2f40c0f19c6eb\",\"dweb:/ipfs/QmRY5pwDDALeYoorxn8aWXjpcWYR12Fo2LtoR32DdmnQPR\"]},\"contracts/mocker/MockMarketFactory.sol\":{\"keccak256\":\"0xf34d9444d343324da975f5c51fde27d7d313e1bcd177315781c714b0fb7d8661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7269cbc032672a86e9725e76eb1cfd7f849bd19afb96f0a2df580c566ac0d9a\",\"dweb:/ipfs/QmR1MnaLm5qfov1oGatP1TJREiogehCWJDLhRuiNUCrYGy\"]},\"contracts/order/OrderLib.sol\":{\"keccak256\":\"0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9\",\"dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR\"]},\"contracts/order/OrderStruct.sol\":{\"keccak256\":\"0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2\",\"dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty\"]},\"contracts/position/PositionStruct.sol\":{\"keccak256\":\"0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415\",\"dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW\"]},\"contracts/position/interfaces/IPositionBook.sol\":{\"keccak256\":\"0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d\",\"dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_marketAddr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarket",
          "outputs": [
            {
              "internalType": "struct IMarketFactory.Props",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "struct IMarketFactory.CreateInputs",
                  "name": "inputs",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "string",
                      "name": "_name",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "_marketAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "address[]",
                      "name": "addrs",
                      "type": "address[]"
                    },
                    {
                      "internalType": "address",
                      "name": "_openStoreLong",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_closeStoreLong",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_openStoreShort",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "_closeStoreShort",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_minSlippage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_maxSlippage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_minLeverage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_maxLeverage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_maxTradeAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_minPay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_minCollateral",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "_allowOpen",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "_allowClose",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "_tokenDigits",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarkets",
          "outputs": [
            {
              "internalType": "struct IMarketFactory.Outs[]",
              "name": "_outs",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minPay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allowOpen",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allowClose",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "markets",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "struct IMarketFactory.CreateInputs",
              "name": "inputs",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_marketAddress",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "addrs",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "_openStoreLong",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_closeStoreLong",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_openStoreShort",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_closeStoreShort",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_minSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxSlippage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minLeverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxLeverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxTradeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minPay",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minCollateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_allowOpen",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "_allowClose",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_tokenDigits",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMarket"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "solidity-create2-deployer/=node_modules/solidity-create2-deployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/mocker/MockMarketFactory.sol": "MockMarketFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/fee/interfaces/IFeeRouter.sol": {
        "keccak256": "0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2",
        "urls": [
          "bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb",
          "dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/MarketConfigStruct.sol": {
        "keccak256": "0xcb33c17fa87bb3ffb7cf83e22f1af6439a8fca18677f4a4ee3e4c1ac29df14ec",
        "urls": [
          "bzz-raw://60a3aad8490144ed9bcd52c959102163462a786950b3e0db83810be8962b76fd",
          "dweb:/ipfs/QmTGd436ceMxwmYVwjfbUSZNb3BdbVycPMn8yypd9Xd4tb"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/MarketDataTypes.sol": {
        "keccak256": "0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098",
        "urls": [
          "bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363",
          "dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/interfaces/IMarketFactory.sol": {
        "keccak256": "0x5518d24736c53545df30e79bb35dd6bcce227540742be357fad624e19857c1fb",
        "urls": [
          "bzz-raw://972696cd6e2ce8391a3f7c52a6923fa7703b4ef9f5453b92875281f4dd747098",
          "dweb:/ipfs/QmXsDqi9HYTK9mtzBW5D5khA1kZyqzrLMKMDgTTPEbkH5t"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/interfaces/IMarketValid.sol": {
        "keccak256": "0x598813afa73b2b47861b1de36040174fc6e40002010ad94ef24e14a075a92f11",
        "urls": [
          "bzz-raw://cf4cd641017cd74945fcc577f81527c7bd7dac158965f91c6ca2f40c0f19c6eb",
          "dweb:/ipfs/QmRY5pwDDALeYoorxn8aWXjpcWYR12Fo2LtoR32DdmnQPR"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/mocker/MockMarketFactory.sol": {
        "keccak256": "0xf34d9444d343324da975f5c51fde27d7d313e1bcd177315781c714b0fb7d8661",
        "urls": [
          "bzz-raw://c7269cbc032672a86e9725e76eb1cfd7f849bd19afb96f0a2df580c566ac0d9a",
          "dweb:/ipfs/QmR1MnaLm5qfov1oGatP1TJREiogehCWJDLhRuiNUCrYGy"
        ],
        "license": "MIT"
      },
      "contracts/order/OrderLib.sol": {
        "keccak256": "0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6",
        "urls": [
          "bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9",
          "dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/OrderStruct.sol": {
        "keccak256": "0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e",
        "urls": [
          "bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2",
          "dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/PositionStruct.sol": {
        "keccak256": "0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286",
        "urls": [
          "bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415",
          "dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/interfaces/IPositionBook.sol": {
        "keccak256": "0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75",
        "urls": [
          "bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d",
          "dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mocker/MockMarketFactory.sol",
    "id": 17628,
    "exportedSymbols": {
      "IMarketFactory": [
        13619
      ],
      "IMarketValid": [
        13928
      ],
      "MarketConfigStruct": [
        4689
      ],
      "MockMarketFactory": [
        17627
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1366:43",
    "nodes": [
      {
        "id": 17509,
        "nodeType": "PragmaDirective",
        "src": "32:24:43",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 17511,
        "nodeType": "ImportDirective",
        "src": "58:68:43",
        "nodes": [],
        "absolutePath": "contracts/market/MarketConfigStruct.sol",
        "file": "../market/MarketConfigStruct.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17628,
        "sourceUnit": 4690,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17510,
              "name": "MarketConfigStruct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4689,
              "src": "66:18:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17513,
        "nodeType": "ImportDirective",
        "src": "127:67:43",
        "nodes": [],
        "absolutePath": "contracts/market/interfaces/IMarketValid.sol",
        "file": "../market/interfaces/IMarketValid.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17628,
        "sourceUnit": 13929,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17512,
              "name": "IMarketValid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13928,
              "src": "135:12:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17515,
        "nodeType": "ImportDirective",
        "src": "195:71:43",
        "nodes": [],
        "absolutePath": "contracts/market/interfaces/IMarketFactory.sol",
        "file": "../market/interfaces/IMarketFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17628,
        "sourceUnit": 13620,
        "symbolAliases": [
          {
            "foreign": {
              "id": 17514,
              "name": "IMarketFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13619,
              "src": "203:14:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 17627,
        "nodeType": "ContractDefinition",
        "src": "268:1129:43",
        "nodes": [
          {
            "id": 17521,
            "nodeType": "UsingForDirective",
            "src": "319:48:43",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 17518,
              "name": "MarketConfigStruct",
              "nameLocations": [
                "325:18:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4689,
              "src": "325:18:43"
            },
            "typeName": {
              "id": 17520,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17519,
                "name": "IMarketValid.Props",
                "nameLocations": [
                  "348:12:43",
                  "361:5:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13921,
                "src": "348:18:43"
              },
              "referencedDeclaration": 13921,
              "src": "348:18:43",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Props_$13921_storage_ptr",
                "typeString": "struct IMarketValid.Props"
              }
            }
          },
          {
            "id": 17525,
            "nodeType": "VariableDeclaration",
            "src": "373:22:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "b1283e77",
            "mutability": "mutable",
            "name": "markets",
            "nameLocation": "388:7:43",
            "scope": 17627,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Props_$13603_storage_$dyn_storage",
              "typeString": "struct IMarketFactory.Props[]"
            },
            "typeName": {
              "baseType": {
                "id": 17523,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 17522,
                  "name": "Props",
                  "nameLocations": [
                    "373:5:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13603,
                  "src": "373:5:43"
                },
                "referencedDeclaration": 13603,
                "src": "373:5:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Props_$13603_storage_ptr",
                  "typeString": "struct IMarketFactory.Props"
                }
              },
              "id": 17524,
              "nodeType": "ArrayTypeName",
              "src": "373:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Props_$13603_storage_$dyn_storage_ptr",
                "typeString": "struct IMarketFactory.Props[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 17534,
            "nodeType": "FunctionDefinition",
            "src": "403:93:43",
            "nodes": [],
            "body": {
              "id": 17533,
              "nodeType": "Block",
              "src": "494:2:43",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              13618
            ],
            "functionSelector": "d4dfadbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarket",
            "nameLocation": "412:9:43",
            "parameters": {
              "id": 17528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17527,
                  "mutability": "mutable",
                  "name": "_marketAddr",
                  "nameLocation": "439:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 17534,
                  "src": "431:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:35:43"
            },
            "returnParameters": {
              "id": 17532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17534,
                  "src": "480:12:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                    "typeString": "struct IMarketFactory.Props"
                  },
                  "typeName": {
                    "id": 17530,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 17529,
                      "name": "Props",
                      "nameLocations": [
                        "480:5:43"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13603,
                      "src": "480:5:43"
                    },
                    "referencedDeclaration": 13603,
                    "src": "480:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Props_$13603_storage_ptr",
                      "typeString": "struct IMarketFactory.Props"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "479:14:43"
            },
            "scope": 17627,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 17596,
            "nodeType": "FunctionDefinition",
            "src": "502:672:43",
            "nodes": [],
            "body": {
              "id": 17595,
              "nodeType": "Block",
              "src": "568:606:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    17545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17545,
                      "mutability": "mutable",
                      "name": "_markets",
                      "nameLocation": "593:8:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 17595,
                      "src": "578:23:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Props_$13603_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IMarketFactory.Props[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 17543,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 17542,
                            "name": "Props",
                            "nameLocations": [
                              "578:5:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13603,
                            "src": "578:5:43"
                          },
                          "referencedDeclaration": 13603,
                          "src": "578:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Props_$13603_storage_ptr",
                            "typeString": "struct IMarketFactory.Props"
                          }
                        },
                        "id": 17544,
                        "nodeType": "ArrayTypeName",
                        "src": "578:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Props_$13603_storage_$dyn_storage_ptr",
                          "typeString": "struct IMarketFactory.Props[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17547,
                  "initialValue": {
                    "id": 17546,
                    "name": "markets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17525,
                    "src": "604:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Props_$13603_storage_$dyn_storage",
                      "typeString": "struct IMarketFactory.Props storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "578:33:43"
                },
                {
                  "assignments": [
                    17549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17549,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "626:3:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 17595,
                      "src": "621:8:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17548,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "621:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17552,
                  "initialValue": {
                    "expression": {
                      "id": 17550,
                      "name": "_markets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17545,
                      "src": "632:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Props_$13603_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IMarketFactory.Props memory[] memory"
                      }
                    },
                    "id": 17551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "641:6:43",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "632:15:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "621:26:43"
                },
                {
                  "expression": {
                    "id": 17560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17553,
                      "name": "_outs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17539,
                      "src": "657:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Outs_$13559_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IMarketFactory.Outs memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 17558,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17549,
                          "src": "676:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 17557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "665:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Outs_$13559_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct IMarketFactory.Outs memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 17555,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 17554,
                              "name": "Outs",
                              "nameLocations": [
                                "669:4:43"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 13559,
                              "src": "669:4:43"
                            },
                            "referencedDeclaration": 13559,
                            "src": "669:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Outs_$13559_storage_ptr",
                              "typeString": "struct IMarketFactory.Outs"
                            }
                          },
                          "id": 17556,
                          "nodeType": "ArrayTypeName",
                          "src": "669:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Outs_$13559_storage_$dyn_storage_ptr",
                            "typeString": "struct IMarketFactory.Outs[]"
                          }
                        }
                      },
                      "id": 17559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "665:15:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Outs_$13559_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IMarketFactory.Outs memory[] memory"
                      }
                    },
                    "src": "657:23:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Outs_$13559_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IMarketFactory.Outs memory[] memory"
                    }
                  },
                  "id": 17561,
                  "nodeType": "ExpressionStatement",
                  "src": "657:23:43"
                },
                {
                  "body": {
                    "id": 17593,
                    "nodeType": "Block",
                    "src": "721:447:43",
                    "statements": [
                      {
                        "assignments": [
                          17574
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 17574,
                            "mutability": "mutable",
                            "name": "m",
                            "nameLocation": "748:1:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 17593,
                            "src": "735:14:43",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                              "typeString": "struct IMarketFactory.Props"
                            },
                            "typeName": {
                              "id": 17573,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 17572,
                                "name": "Props",
                                "nameLocations": [
                                  "735:5:43"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 13603,
                                "src": "735:5:43"
                              },
                              "referencedDeclaration": 13603,
                              "src": "735:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Props_$13603_storage_ptr",
                                "typeString": "struct IMarketFactory.Props"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 17578,
                        "initialValue": {
                          "baseExpression": {
                            "id": 17575,
                            "name": "_markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17545,
                            "src": "752:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Props_$13603_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IMarketFactory.Props memory[] memory"
                            }
                          },
                          "id": 17577,
                          "indexExpression": {
                            "id": 17576,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17563,
                            "src": "761:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "752:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                            "typeString": "struct IMarketFactory.Props memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "735:28:43"
                      },
                      {
                        "expression": {
                          "id": 17591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 17579,
                              "name": "_outs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17539,
                              "src": "971:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Outs_$13559_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IMarketFactory.Outs memory[] memory"
                              }
                            },
                            "id": 17581,
                            "indexExpression": {
                              "id": 17580,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17563,
                              "src": "977:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "971:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Outs_$13559_memory_ptr",
                              "typeString": "struct IMarketFactory.Outs memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 17583,
                                  "name": "m",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17574,
                                  "src": "1011:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                                    "typeString": "struct IMarketFactory.Props memory"
                                  }
                                },
                                "id": 17584,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1013:4:43",
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13597,
                                "src": "1011:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 17585,
                                  "name": "m",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17574,
                                  "src": "1041:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                                    "typeString": "struct IMarketFactory.Props memory"
                                  }
                                },
                                "id": 17586,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1043:4:43",
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13599,
                                "src": "1041:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "3230",
                                "id": 17587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1073:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_20_by_1",
                                  "typeString": "int_const 20"
                                },
                                "value": "20"
                              },
                              {
                                "hexValue": "74727565",
                                "id": 17588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1104:4:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "hexValue": "74727565",
                                "id": 17589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1138:4:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_20_by_1",
                                  "typeString": "int_const 20"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 17582,
                              "name": "Outs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13559,
                              "src": "982:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Outs_$13559_storage_ptr_$",
                                "typeString": "type(struct IMarketFactory.Outs storage pointer)"
                              }
                            },
                            "id": 17590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "1005:4:43",
                              "1035:4:43",
                              "1065:6:43",
                              "1093:9:43",
                              "1126:10:43"
                            ],
                            "names": [
                              "name",
                              "addr",
                              "minPay",
                              "allowOpen",
                              "allowClose"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "982:175:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Outs_$13559_memory_ptr",
                              "typeString": "struct IMarketFactory.Outs memory"
                            }
                          },
                          "src": "971:186:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Outs_$13559_memory_ptr",
                            "typeString": "struct IMarketFactory.Outs memory"
                          }
                        },
                        "id": 17592,
                        "nodeType": "ExpressionStatement",
                        "src": "971:186:43"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 17566,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17563,
                      "src": "707:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 17567,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17549,
                      "src": "711:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "707:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17594,
                  "initializationExpression": {
                    "assignments": [
                      17563
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 17563,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "700:1:43",
                        "nodeType": "VariableDeclaration",
                        "scope": 17594,
                        "src": "695:6:43",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17562,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "695:4:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 17565,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 17564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "704:1:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "695:10:43"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 17570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "716:3:43",
                      "subExpression": {
                        "id": 17569,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17563,
                        "src": "716:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 17571,
                    "nodeType": "ExpressionStatement",
                    "src": "716:3:43"
                  },
                  "nodeType": "ForStatement",
                  "src": "690:478:43"
                }
              ]
            },
            "baseFunctions": [
              13610
            ],
            "functionSelector": "ec2c9016",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarkets",
            "nameLocation": "511:10:43",
            "parameters": {
              "id": 17535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:43"
            },
            "returnParameters": {
              "id": 17540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17539,
                  "mutability": "mutable",
                  "name": "_outs",
                  "nameLocation": "561:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 17596,
                  "src": "547:19:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Outs_$13559_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IMarketFactory.Outs[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17537,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 17536,
                        "name": "Outs",
                        "nameLocations": [
                          "547:4:43"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13559,
                        "src": "547:4:43"
                      },
                      "referencedDeclaration": 13559,
                      "src": "547:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Outs_$13559_storage_ptr",
                        "typeString": "struct IMarketFactory.Outs"
                      }
                    },
                    "id": 17538,
                    "nodeType": "ArrayTypeName",
                    "src": "547:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Outs_$13559_storage_$dyn_storage_ptr",
                      "typeString": "struct IMarketFactory.Outs[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "546:21:43"
            },
            "scope": 17627,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 17626,
            "nodeType": "FunctionDefinition",
            "src": "1180:215:43",
            "nodes": [],
            "body": {
              "id": 17625,
              "nodeType": "Block",
              "src": "1242:153:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    17605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17605,
                      "mutability": "mutable",
                      "name": "_prop",
                      "nameLocation": "1265:5:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 17625,
                      "src": "1252:18:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                        "typeString": "struct IMarketFactory.Props"
                      },
                      "typeName": {
                        "id": 17604,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 17603,
                          "name": "Props",
                          "nameLocations": [
                            "1252:5:43"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13603,
                          "src": "1252:5:43"
                        },
                        "referencedDeclaration": 13603,
                        "src": "1252:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Props_$13603_storage_ptr",
                          "typeString": "struct IMarketFactory.Props"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17606,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1252:18:43"
                },
                {
                  "expression": {
                    "id": 17611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 17607,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17605,
                        "src": "1280:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                          "typeString": "struct IMarketFactory.Props memory"
                        }
                      },
                      "id": 17609,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1286:4:43",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13597,
                      "src": "1280:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17610,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17598,
                      "src": "1293:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1280:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 17612,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:17:43"
                },
                {
                  "expression": {
                    "id": 17617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 17613,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17605,
                        "src": "1307:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                          "typeString": "struct IMarketFactory.Props memory"
                        }
                      },
                      "id": 17615,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1313:4:43",
                      "memberName": "addr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13599,
                      "src": "1307:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17616,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17600,
                      "src": "1320:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1307:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17618,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:17:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17622,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17605,
                        "src": "1382:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                          "typeString": "struct IMarketFactory.Props memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Props_$13603_memory_ptr",
                          "typeString": "struct IMarketFactory.Props memory"
                        }
                      ],
                      "expression": {
                        "id": 17619,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17525,
                        "src": "1369:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Props_$13603_storage_$dyn_storage",
                          "typeString": "struct IMarketFactory.Props storage ref[] storage ref"
                        }
                      },
                      "id": 17621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1377:4:43",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1369:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Props_$13603_storage_$dyn_storage_ptr_$_t_struct$_Props_$13603_storage_$returns$__$bound_to$_t_array$_t_struct$_Props_$13603_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IMarketFactory.Props storage ref[] storage pointer,struct IMarketFactory.Props storage ref)"
                      }
                    },
                    "id": 17623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:19:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17624,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:19:43"
                }
              ]
            },
            "functionSelector": "a0d2ac98",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMarket",
            "nameLocation": "1189:9:43",
            "parameters": {
              "id": 17601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17598,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1213:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 17626,
                  "src": "1199:18:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17597,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17600,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1227:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 17626,
                  "src": "1219:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:34:43"
            },
            "returnParameters": {
              "id": 17602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:43"
            },
            "scope": 17627,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17516,
              "name": "IMarketFactory",
              "nameLocations": [
                "298:14:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13619,
              "src": "298:14:43"
            },
            "id": 17517,
            "nodeType": "InheritanceSpecifier",
            "src": "298:14:43"
          }
        ],
        "canonicalName": "MockMarketFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          17627,
          13619
        ],
        "name": "MockMarketFactory",
        "nameLocation": "277:17:43",
        "scope": 17628,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 43
}
{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPerIntervalChange",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "grantControllerRoleByMarketManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardTracker",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastDistributionTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardTracker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setTokensPerInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateLastDistributionTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "413:3431:119:-:0;;;;;;;;;;;;-1:-1:-1;936:32:175;719:10:201;936:18:175;:32::i;:::-;413:3431:119;;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;413:3431:119:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806375b17350116100b8578063a8d936271161007c578063a8d9362714610292578063d547741f1461029b578063e4fc6b6d146102ae578063eded3fda146102b6578063f2fde38b146102be578063f7c618c1146102d157600080fd5b806375b173501461024a5780637fe4a698146102535780638da5cb5b1461026657806391d1485414610277578063a217fddf1461028a57600080fd5b806336568abe1161010a57806336568abe146101db5780633ae6d6eb146101e9578063485cc955146101f15780636bcb411a14610204578063715018a61461022f57806375829def1461023757600080fd5b806301e336671461014757806301ffc9a71461015c57806318e20a0314610184578063248a9ca3146101975780632f2ff15d146101c8575b600080fd5b61015a610155366004611020565b6102e4565b005b61016f61016a36600461105c565b610326565b60405190151581526020015b60405180910390f35b61015a610192366004611086565b61035d565b6101ba6101a5366004611086565b60009081526020819052604090206001015490565b60405190815260200161017b565b61015a6101d636600461109f565b61043a565b61015a61014236600461109f565b61015a61045f565b61015a6101ff3660046110cb565b610490565b600654610217906001600160a01b031681565b6040516001600160a01b03909116815260200161017b565b61015a61066d565b61015a6102453660046110f5565b610681565b6101ba60055481565b61015a6102613660046110f5565b6106f5565b6001546001600160a01b0316610217565b61016f61028536600461109f565b61071f565b6101ba600081565b6101ba60045481565b61015a6102a936600461109f565b610748565b6101ba61076d565b6101ba6108c3565b61015a6102cc3660046110f5565b6108fa565b600354610217906001600160a01b031681565b61030d7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610973565b6103216001600160a01b038416838361097d565b505050565b60006001600160e01b03198216637965db0b60e01b148061035757506301ffc9a760e01b6001600160e01b03198316145b92915050565b7fcb6bc1c12dd43bca8d7dd46d975f913325437d0dcd5978e99d515e4ad39b977261038781610973565b60055460000361039657426005555b600660009054906101000a90046001600160a01b03166001600160a01b0316633e158b0c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103e657600080fd5b505af11580156103fa573d6000803e3d6000fd5b5050506004839055506040518281527f98dc76c39aa5a5dcb749f8750a65db3dfa1e14bcc1591a9c16a7420e5da748f89060200160405180910390a15050565b60008281526020819052604090206001015461045581610973565b61032183836109cf565b7fcb6bc1c12dd43bca8d7dd46d975f913325437d0dcd5978e99d515e4ad39b977261048981610973565b5042600555565b600154600160a81b900460ff16158080156104b6575060018054600160a01b900460ff16105b806104d65750303b1580156104d6575060018054600160a01b900460ff16145b61053e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff60a01b1916600160a01b179055801561056b576001805460ff60a81b1916600160a81b1790555b61057433610a53565b6001600160a01b0383166105b35760405162461bcd60e51b8152600401610535906020808252600490820152637a65726f60e01b604082015260600190565b6001600160a01b0382166105f25760405162461bcd60e51b8152600401610535906020808252600490820152637a65726f60e01b604082015260600190565b600380546001600160a01b038086166001600160a01b03199283161790925560068054928516929091169190911790558015610321576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b610675610a76565b61067f6000610ad0565b565b600061068c81610973565b6001600160a01b0382166106d25760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b6044820152606401610535565b6106dd600083610b22565b6106e682610ad0565b6106f1600033610b2c565b5050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b761014281610973565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461076381610973565b6103218383610b2c565b6006546000906001600160a01b031633146107d85760405162461bcd60e51b815260206004820152602560248201527f5265776172644469737472696275746f723a20696e76616c6964206d73672e7360448201526432b73232b960d91b6064820152608401610535565b60006107e26108c3565b9050806000036107f457600091505090565b426005556003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190611110565b905080821115610873578091505b60035461088a906001600160a01b0316338461097d565b6040518281527f4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead9060200160405180910390a150905090565b600060055442036108d45750600090565b6000600554426108e4919061113f565b9050806004546108f49190611152565b91505090565b610902610a76565b6001600160a01b0381166109675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610535565b61097081610ad0565b50565b6109708133610b91565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610321908490610bea565b6109d9828261071f565b6106f1576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610a0f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b42600255610a6033610ad0565b610a6b600033610b22565b610970600082610b22565b6001546001600160a01b0316331461067f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610535565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6106f182826109cf565b610b36828261071f565b156106f1576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610b9b828261071f565b6106f157610ba881610cbf565b610bb3836020610cd1565b604051602001610bc492919061118d565b60408051601f198184030181529082905262461bcd60e51b825261053591600401611202565b6000610c3f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e749092919063ffffffff16565b9050805160001480610c60575080806020019051810190610c609190611235565b6103215760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610535565b60606103576001600160a01b03831660145b60606000610ce0836002611152565b610ceb906002611257565b67ffffffffffffffff811115610d0357610d0361126a565b6040519080825280601f01601f191660200182016040528015610d2d576020820181803683370190505b509050600360fc1b81600081518110610d4857610d48611280565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610d7757610d77611280565b60200101906001600160f81b031916908160001a9053506000610d9b846002611152565b610da6906001611257565b90505b6001811115610e1e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610dda57610dda611280565b1a60f81b828281518110610df057610df0611280565b60200101906001600160f81b031916908160001a90535060049490941c93610e1781611296565b9050610da9565b508315610e6d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610535565b9392505050565b6060610e838484600085610e8b565b949350505050565b606082471015610eec5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610535565b600080866001600160a01b03168587604051610f0891906112ad565b60006040518083038185875af1925050503d8060008114610f45576040519150601f19603f3d011682016040523d82523d6000602084013e610f4a565b606091505b5091509150610f5b87838387610f66565b979650505050505050565b60608315610fd5578251600003610fce576001600160a01b0385163b610fce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610535565b5081610e83565b610e838383815115610fea5781518083602001fd5b8060405162461bcd60e51b81526004016105359190611202565b80356001600160a01b038116811461101b57600080fd5b919050565b60008060006060848603121561103557600080fd5b61103e84611004565b925061104c60208501611004565b9150604084013590509250925092565b60006020828403121561106e57600080fd5b81356001600160e01b031981168114610e6d57600080fd5b60006020828403121561109857600080fd5b5035919050565b600080604083850312156110b257600080fd5b823591506110c260208401611004565b90509250929050565b600080604083850312156110de57600080fd5b6110e783611004565b91506110c260208401611004565b60006020828403121561110757600080fd5b610e6d82611004565b60006020828403121561112257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035757610357611129565b808202811582820484141761035757610357611129565b60005b8381101561118457818101518382015260200161116c565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516111c5816017850160208801611169565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516111f6816028840160208801611169565b01602801949350505050565b6020815260008251806020840152611221816040850160208701611169565b601f01601f19169190910160400192915050565b60006020828403121561124757600080fd5b81518015158114610e6d57600080fd5b8082018082111561035757610357611129565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816112a5576112a5611129565b506000190190565b600082516112bf818460208701611169565b919091019291505056fea2646970667358221220da1b69a75b32b39941d45918153322ba61f55b6090521df9dd72199222a4937e64736f6c63430008110033",
    "sourceMap": "413:3431:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:188;;;;;;:::i;:::-;;:::i;:::-;;2732:202:173;;;;;;:::i;:::-;;:::i;:::-;;;981:14:232;;974:22;956:41;;944:2;929:18;2732:202:173;;;;;;;;2068:318:119;;;;;;:::i;:::-;;:::i;4504:129:173:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;;;;1524:25:232;;;1512:2;1497:18;4504:129:173;1378:177:232;4929:145:173;;;;;;:::i;:::-;;:::i;3631:136:1:-;;;;;;:::i;1749:127:119:-;;;:::i;731:346::-;;;;;;:::i;:::-;;:::i;606:28::-;;;;;-1:-1:-1;;;;;606:28:119;;;;;;-1:-1:-1;;;;;2248:32:232;;;2230:51;;2218:2;2203:18;606:28:119;2084:203:232;1824:101:175;;;:::i;2494:262:1:-;;;;;;:::i;:::-;;:::i;565:35:119:-;;;;;;3188:281:1;;;;;;:::i;:::-;;:::i;1201:85:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;1201:85;;3021:145:173;;;;;;:::i;:::-;;:::i;2153:49::-;;2198:4;2153:49;;527:32:119;;;;;;5354:147:173;;;;;;:::i;:::-;;:::i;3316:490:119:-;;;:::i;2548:263::-;;;:::i;2074:198:175:-;;;;;;:::i;:::-;;:::i;495:26:119:-;;;;;-1:-1:-1;;;;;495:26:119;;;1414:188;2795:24:1;609:25;2795:10;:24::i;:::-;1549:46:119::1;-1:-1:-1::0;;;;;1549:27:119;::::1;1577:8:::0;1587:7;1549:27:::1;:46::i;:::-;1414:188:::0;;;:::o;2732:202:173:-;2817:4;-1:-1:-1;;;;;;2840:47:173;;-1:-1:-1;;;2840:47:173;;:87;;-1:-1:-1;;;;;;;;;;937:40:208;;;2891:36:173;2833:94;2732:202;-1:-1:-1;;2732:202:173:o;2068:318:119:-;1420:27:1;2631:16:173;2642:4;2631:10;:16::i;:::-;2177:20:119::1;;2201:1;2177:25:::0;2173:69:::1;;2227:15;2204:20;:38:::0;2173:69:::1;2265:13;;;;;;;;;-1:-1:-1::0;;;;;2265:13:119::1;-1:-1:-1::0;;;;;2252:41:119::1;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;2305:17:119::1;:27:::0;;;-1:-1:-1;2347:32:119::1;::::0;1524:25:232;;;2347:32:119::1;::::0;1512:2:232;1497:18;2347:32:119::1;;;;;;;2068:318:::0;;:::o;4929:145:173:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;1749:127:119:-:0;1420:27:1;2631:16:173;2642:4;2631:10;:16::i;:::-;-1:-1:-1;1854:15:119::1;1831:20;:38:::0;1749:127::o;731:346::-;3302:13:163;;-1:-1:-1;;;3302:13:163;;;;3301:14;;3347:34;;;;-1:-1:-1;3380:1:163;3365:12;;-1:-1:-1;;;3365:12:163;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:163;1713:19:166;:23;;;3387:66:163;;-1:-1:-1;3436:12:163;;;-1:-1:-1;;;3436:12:163;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:163;;2867:2:232;3325:201:163;;;2849:21:232;2906:2;2886:18;;;2879:30;2945:34;2925:18;;;2918:62;-1:-1:-1;;;2996:18:232;;;2989:44;3050:19;;3325:201:163;;;;;;;;;3551:1;3536:16;;-1:-1:-1;;;;3536:16:163;-1:-1:-1;;;3536:16:163;;;3562:65;;;;3612:4;3596:20;;-1:-1:-1;;;;3596:20:163;-1:-1:-1;;;3596:20:163;;;3562:65;850:36:119::1;875:10;850:24;:36::i;:::-;-1:-1:-1::0;;;;;904:26:119;::::1;896:43;;;;-1:-1:-1::0;;;896:43:119::1;;;;;;3282:2:232::0;3264:21;;;3321:1;3301:18;;;3294:29;-1:-1:-1;;;3354:2:232;3339:18;;3332:34;3398:2;3383:18;;3080:327;896:43:119::1;-1:-1:-1::0;;;;;957:28:119;::::1;949:45;;;;-1:-1:-1::0;;;949:45:119::1;;;;;;3282:2:232::0;3264:21;;;3321:1;3301:18;;;3294:29;-1:-1:-1;;;3354:2:232;3339:18;;3332:34;3398:2;3383:18;;3080:327;949:45:119::1;1004:11;:26:::0;;-1:-1:-1;;;;;1004:26:119;;::::1;-1:-1:-1::0;;;;;;1004:26:119;;::::1;;::::0;;;1040:13:::1;:30:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3647:99:163;;;;3681:13;:21;;-1:-1:-1;;;;3681:21:163;;;3721:14;;3564:36:232;;;3721:14:163;;3552:2:232;3537:18;3721:14:163;;;;;;;3269:483;731:346:119;;:::o;1824:101:175:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2494:262:1:-;2198:4:173;2631:16;2198:4;2631:10;:16::i;:::-;-1:-1:-1;;;;;2585:16:1;::::1;2577:42;;;::::0;-1:-1:-1;;;2577:42:1;;3813:2:232;2577:42:1::1;::::0;::::1;3795:21:232::0;3852:2;3832:18;;;3825:30;-1:-1:-1;;;3871:18:232;;;3864:43;3924:18;;2577:42:1::1;3611:337:232::0;2577:42:1::1;2630:34;2198:4:173;2661:2:1::0;2630:10:::1;:34::i;:::-;2674:22;2693:2;2674:18;:22::i;:::-;2706:43;2198:4:173;2738:10:1;2706:11;:43::i;:::-;2494:262:::0;;:::o;3188:281::-;1116:28;2631:16:173;2642:4;2631:10;:16::i;3021:145::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:173;;;;;;;;;;;;;;;3021:145::o;5354:147::-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3316:490:119:-:0;2990:13;;3374:7;;-1:-1:-1;;;;;2990:13:119;2976:10;:27;2955:111;;;;-1:-1:-1;;;2955:111:119;;4155:2:232;2955:111:119;;;4137:21:232;4194:2;4174:18;;;4167:30;4233:34;4213:18;;;4206:62;-1:-1:-1;;;4284:18:232;;;4277:35;4329:19;;2955:111:119;3953:401:232;2955:111:119;3393:14:::1;3410:16;:14;:16::i;:::-;3393:33;;3440:6;3450:1;3440:11:::0;3436:50:::1;;3474:1;3467:8;;;3316:490:::0;:::o;3436:50::-:1;3519:15;3496:20;:38:::0;3570:11:::1;::::0;3563:44:::1;::::0;-1:-1:-1;;;3563:44:119;;3601:4:::1;3563:44;::::0;::::1;2230:51:232::0;3545:15:119::1;::::0;-1:-1:-1;;;;;3570:11:119::1;::::0;3563:29:::1;::::0;2203:18:232;;3563:44:119::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3545:62;;3630:7;3621:6;:16;3617:63;;;3662:7;3653:16;;3617:63;3697:11;::::0;3690:52:::1;::::0;-1:-1:-1;;;;;3697:11:119::1;3723:10;3735:6:::0;3690:32:::1;:52::i;:::-;3758:18;::::0;1524:25:232;;;3758:18:119::1;::::0;1512:2:232;1497:18;3758::119::1;;;;;;;-1:-1:-1::0;3793:6:119;-1:-1:-1;3316:490:119;:::o;2548:263::-;2595:7;2637:20;;2618:15;:39;2614:78;;-1:-1:-1;2680:1:119;;2548:263::o;2614:78::-;2702:16;2739:20;;2721:15;:38;;;;:::i;:::-;2702:57;;2796:8;2776:17;;:28;;;;:::i;:::-;2769:35;;;2548:263;:::o;2074:198:175:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:175;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:175;;5188:2:232;2154:73:175::1;::::0;::::1;5170:21:232::0;5227:2;5207:18;;;5200:30;5266:34;5246:18;;;5239:62;-1:-1:-1;;;5317:18:232;;;5310:36;5363:19;;2154:73:175::1;4986:402:232::0;2154:73:175::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;3460:103:173:-;3526:30;3537:4;719:10:201;3526::173;:30::i;941:175:196:-;1050:58;;;-1:-1:-1;;;;;5585:32:232;;1050:58:196;;;5567:51:232;5634:18;;;;5627:34;;;1050:58:196;;;;;;;;;;5540:18:232;;;;1050:58:196;;;;;;;;-1:-1:-1;;;;;1050:58:196;-1:-1:-1;;;1050:58:196;;;1023:86;;1043:5;;1023:19;:86::i;7587:233:173:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:173;;;;;;;;;:36;;-1:-1:-1;;7708:36:173;7740:4;7708:36;;;7790:12;719:10:201;;640:96;7790:12:173;-1:-1:-1;;;;;7763:40:173;7781:7;-1:-1:-1;;;;;7763:40:173;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;2263:225:1:-;2327:15;2315:9;:27;2352:32;719:10:201;2352:18:1;:32::i;:::-;2395:42;2198:4:173;2426:10:1;2395;:42::i;:::-;2447:34;2198:4:173;2478:2:1;2447:10;:34::i;1359:130:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;719:10:201;1422:23:175;1414:68;;;;-1:-1:-1;;;1414:68:175;;5874:2:232;1414:68:175;;;5856:21:232;;;5893:18;;;5886:30;5952:34;5932:18;;;5925:62;6004:18;;1414:68:175;5672:356:232;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;6937:110:173:-;7015:25;7026:4;7032:7;7015:10;:25::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:173;;;;;;;;;;:37;;-1:-1:-1;;8112:37:173;;;8168:40;719:10:201;;8112:12:173;;8168:40;;8144:5;8168:40;7991:234;;:::o;3844:479::-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:173;;;;;;;;;;-1:-1:-1;;;3970:336:173;;;;;;;:::i;5196:642:196:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:196;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:196;;7990:2:232;5720:111:196;;;7972:21:232;8029:2;8009:18;;;8002:30;8068:34;8048:18;;;8041:62;-1:-1:-1;;;8119:18:232;;;8112:40;8169:19;;5720:111:196;7788:406:232;2407:149:205;2465:13;2497:52;-1:-1:-1;;;;;2509:22:205;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:205;;1918:47;;-1:-1:-1;;;1975:6:205;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:205;;;;;;;;;-1:-1:-1;;;2000:6:205;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:205;;;;;;;;-1:-1:-1;2030:9:205;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:205;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:205;;;;;;;;-1:-1:-1;2141:1:205;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:205;;2162:55;;;;-1:-1:-1;;;2162:55:205;;8936:2:232;2162:55:205;;;8918:21:232;;;8955:18;;;8948:30;9014:34;8994:18;;;8987:62;9066:18;;2162:55:205;8734:356:232;2162:55:205;2241:6;1818:437;-1:-1:-1;;;1818:437:205:o;4108:223:200:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:200:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:200;;9297:2:232;5354:81:200;;;9279:21:232;9336:2;9316:18;;;9309:30;9375:34;9355:18;;;9348:62;-1:-1:-1;;;9426:18:232;;;9419:36;9472:19;;5354:81:200;9095:402:232;5354:81:200;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:200;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:200:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:166;;;8113:60:200;;;;-1:-1:-1;;;8113:60:200;;9996:2:232;8113:60:200;;;9978:21:232;10035:2;10015:18;;;10008:30;10074:31;10054:18;;;10047:59;10123:18;;8113:60:200;9794:353:232;8113:60:200;-1:-1:-1;8208:10:200;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:200;;;;;;;;:::i;14:173:232:-;82:20;;-1:-1:-1;;;;;131:31:232;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;525:286::-;583:6;636:2;624:9;615:7;611:23;607:32;604:52;;;652:1;649;642:12;604:52;678:23;;-1:-1:-1;;;;;;730:32:232;;720:43;;710:71;;777:1;774;767:12;1008:180;1067:6;1120:2;1108:9;1099:7;1095:23;1091:32;1088:52;;;1136:1;1133;1126:12;1088:52;-1:-1:-1;1159:23:232;;1008:180;-1:-1:-1;1008:180:232:o;1560:254::-;1628:6;1636;1689:2;1677:9;1668:7;1664:23;1660:32;1657:52;;;1705:1;1702;1695:12;1657:52;1741:9;1728:23;1718:33;;1770:38;1804:2;1793:9;1789:18;1770:38;:::i;:::-;1760:48;;1560:254;;;;;:::o;1819:260::-;1887:6;1895;1948:2;1936:9;1927:7;1923:23;1919:32;1916:52;;;1964:1;1961;1954:12;1916:52;1987:29;2006:9;1987:29;:::i;:::-;1977:39;;2035:38;2069:2;2058:9;2054:18;2035:38;:::i;2292:186::-;2351:6;2404:2;2392:9;2383:7;2379:23;2375:32;2372:52;;;2420:1;2417;2410:12;2372:52;2443:29;2462:9;2443:29;:::i;4359:184::-;4429:6;4482:2;4470:9;4461:7;4457:23;4453:32;4450:52;;;4498:1;4495;4488:12;4450:52;-1:-1:-1;4521:16:232;;4359:184;-1:-1:-1;4359:184:232:o;4548:127::-;4609:10;4604:3;4600:20;4597:1;4590:31;4640:4;4637:1;4630:15;4664:4;4661:1;4654:15;4680:128;4747:9;;;4768:11;;;4765:37;;;4782:18;;:::i;4813:168::-;4886:9;;;4917;;4934:15;;;4928:22;;4914:37;4904:71;;4955:18;;:::i;6033:250::-;6118:1;6128:113;6142:6;6139:1;6136:13;6128:113;;;6218:11;;;6212:18;6199:11;;;6192:39;6164:2;6157:10;6128:113;;;-1:-1:-1;;6275:1:232;6257:16;;6250:27;6033:250::o;6288:812::-;6699:25;6694:3;6687:38;6669:3;6754:6;6748:13;6770:75;6838:6;6833:2;6828:3;6824:12;6817:4;6809:6;6805:17;6770:75;:::i;:::-;-1:-1:-1;;;6904:2:232;6864:16;;;6896:11;;;6889:40;6954:13;;6976:76;6954:13;7038:2;7030:11;;7023:4;7011:17;;6976:76;:::i;:::-;7072:17;7091:2;7068:26;;6288:812;-1:-1:-1;;;;6288:812:232:o;7105:396::-;7254:2;7243:9;7236:21;7217:4;7286:6;7280:13;7329:6;7324:2;7313:9;7309:18;7302:34;7345:79;7417:6;7412:2;7401:9;7397:18;7392:2;7384:6;7380:15;7345:79;:::i;:::-;7485:2;7464:15;-1:-1:-1;;7460:29:232;7445:45;;;;7492:2;7441:54;;7105:396;-1:-1:-1;;7105:396:232:o;7506:277::-;7573:6;7626:2;7614:9;7605:7;7601:23;7597:32;7594:52;;;7642:1;7639;7632:12;7594:52;7674:9;7668:16;7727:5;7720:13;7713:21;7706:5;7703:32;7693:60;;7749:1;7746;7739:12;8199:125;8264:9;;;8285:10;;;8282:36;;;8298:18;;:::i;8329:127::-;8390:10;8385:3;8381:20;8378:1;8371:31;8421:4;8418:1;8411:15;8445:4;8442:1;8435:15;8461:127;8522:10;8517:3;8513:20;8510:1;8503:31;8553:4;8550:1;8543:15;8577:4;8574:1;8567:15;8593:136;8632:3;8660:5;8650:39;;8669:18;;:::i;:::-;-1:-1:-1;;;8705:18:232;;8593:136::o;9502:287::-;9631:3;9669:6;9663:13;9685:66;9744:6;9739:3;9732:4;9724:6;9720:17;9685:66;:::i;:::-;9767:16;;;;;9502:287;-1:-1:-1;;9502:287:232:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "distribute()": "e4fc6b6d",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantControllerRoleByMarketManager(address)": "7fe4a698",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address)": "485cc955",
    "lastDistributionTime()": "75b17350",
    "owner()": "8da5cb5b",
    "pendingRewards()": "eded3fda",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardToken()": "f7c618c1",
    "rewardTracker()": "6bcb411a",
    "setTokensPerInterval(uint256)": "18e20a03",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokensPerInterval()": "a8d93627",
    "transferAdmin(address)": "75829def",
    "transferOwnership(address)": "f2fde38b",
    "updateLastDistributionTime()": "3ae6d6eb",
    "withdrawToken(address,address,uint256)": "01e33667"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPerIntervalChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"grantControllerRoleByMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardTracker\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDistributionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setTokensPerInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateLastDistributionTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"distribute()\":{\"details\":\"Called by `VaultReward`.Distributes pending rewards to the reward tracker contract. Only the reward tracker contract can call this function.\",\"returns\":{\"_0\":\"The amount of rewards distributed.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingRewards()\":{\"details\":\"Calculates the pending rewards based on the last distribution time and tokens per interval.\",\"returns\":{\"_0\":\"The pending rewards.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setTokensPerInterval(uint256)\":{\"details\":\"Sets the number of tokens to distribute per interval. Only the admin can call this function.\",\"params\":{\"_amount\":\"The number of tokens per interval.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateLastDistributionTime()\":{\"details\":\"Updates the last distribution time to the current block timestamp. Only the admin can call this function.\"},\"withdrawToken(address,address,uint256)\":{\"details\":\"Withdraws tokens from the contract and transfers them to the specified account. Only the admin can call this function.\",\"params\":{\"_account\":\"The address to transfer the tokens to.\",\"_amount\":\"The amount of tokens to withdraw.\",\"_token\":\"The address of the token to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/RewardDistributor.sol\":\"RewardDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-create2-deployer/=node_modules/solidity-create2-deployer/\"]},\"sources\":{\"contracts/ac/AcUpgradable.sol\":{\"keccak256\":\"0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c\",\"dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV\"]},\"contracts/vault/RewardDistributor.sol\":{\"keccak256\":\"0xfd5d9852231418c3b0b9b3a2bcac57fa5a4880e3cf9c4c1abd18690cfbee4aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb7e7e3cd33aa1864adb25b0d75cbf03b27c99710564145ef6896ee0a7c9a17a\",\"dweb:/ipfs/QmXSsRD6xG4ve7xCcFWzHgyhk5dmNw8FxfHLewggPbbD47\"]},\"contracts/vault/interfaces/ICoreVault.sol\":{\"keccak256\":\"0x152b38fe84e5fcdf6f9e2973894a6a44e54c702d348452d2b03a81c88e2967b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c3da45a08744f27d2cdfb0adfb4ec45a8ecf5fea46ae07d71efe96f35dbe771\",\"dweb:/ipfs/QmdQdu7LWLYKfxMgeDMPQV7P55DxJT4d4NG58k96ELg4RL\"]},\"contracts/vault/interfaces/IVaultReward.sol\":{\"keccak256\":\"0xdc966d25a3c6d5a69803ddd279e19a025225d68a707bb28b8f091164b94de7ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70fff8acaad53fac4451970c51bc4011021d128111816ad2ca9aaf7ce99ed7f8\",\"dweb:/ipfs/QmULDUnnP6K9FeUPeXKrKGXKCXYsyrjgWixiwLvQ5t8DqV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3\",\"dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xa0ebd2a1608780392e5bc8805079b1a1961ebd73128ee23ab7149e7f6904fa53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7767ecfd8f8c30fb97fe2dc3b63e96f4593e458551c44e901a3acd4ed930d32c\",\"dweb:/ipfs/QmPJDWJBrzeCee7PqrixFwuCYhsEnFXcQqV6Z6FFdJSNpd\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distribute",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensPerIntervalChange",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantControllerRoleByMarketManager"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardTracker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastDistributionTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardTracker",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokensPerInterval"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensPerInterval",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateLastDistributionTime"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawToken"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "distribute()": {
            "details": "Called by `VaultReward`.Distributes pending rewards to the reward tracker contract. Only the reward tracker contract can call this function.",
            "returns": {
              "_0": "The amount of rewards distributed."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingRewards()": {
            "details": "Calculates the pending rewards based on the last distribution time and tokens per interval.",
            "returns": {
              "_0": "The pending rewards."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setTokensPerInterval(uint256)": {
            "details": "Sets the number of tokens to distribute per interval. Only the admin can call this function.",
            "params": {
              "_amount": "The number of tokens per interval."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateLastDistributionTime()": {
            "details": "Updates the last distribution time to the current block timestamp. Only the admin can call this function."
          },
          "withdrawToken(address,address,uint256)": {
            "details": "Withdraws tokens from the contract and transfers them to the specified account. Only the admin can call this function.",
            "params": {
              "_account": "The address to transfer the tokens to.",
              "_amount": "The amount of tokens to withdraw.",
              "_token": "The address of the token to withdraw."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "solidity-create2-deployer/=node_modules/solidity-create2-deployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vault/RewardDistributor.sol": "RewardDistributor"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ac/AcUpgradable.sol": {
        "keccak256": "0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75",
        "urls": [
          "bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c",
          "dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/vault/RewardDistributor.sol": {
        "keccak256": "0xfd5d9852231418c3b0b9b3a2bcac57fa5a4880e3cf9c4c1abd18690cfbee4aed",
        "urls": [
          "bzz-raw://fb7e7e3cd33aa1864adb25b0d75cbf03b27c99710564145ef6896ee0a7c9a17a",
          "dweb:/ipfs/QmXSsRD6xG4ve7xCcFWzHgyhk5dmNw8FxfHLewggPbbD47"
        ],
        "license": "MIT"
      },
      "contracts/vault/interfaces/ICoreVault.sol": {
        "keccak256": "0x152b38fe84e5fcdf6f9e2973894a6a44e54c702d348452d2b03a81c88e2967b8",
        "urls": [
          "bzz-raw://6c3da45a08744f27d2cdfb0adfb4ec45a8ecf5fea46ae07d71efe96f35dbe771",
          "dweb:/ipfs/QmdQdu7LWLYKfxMgeDMPQV7P55DxJT4d4NG58k96ELg4RL"
        ],
        "license": "MIT"
      },
      "contracts/vault/interfaces/IVaultReward.sol": {
        "keccak256": "0xdc966d25a3c6d5a69803ddd279e19a025225d68a707bb28b8f091164b94de7ed",
        "urls": [
          "bzz-raw://70fff8acaad53fac4451970c51bc4011021d128111816ad2ca9aaf7ce99ed7f8",
          "dweb:/ipfs/QmULDUnnP6K9FeUPeXKrKGXKCXYsyrjgWixiwLvQ5t8DqV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c",
        "urls": [
          "bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3",
          "dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xa0ebd2a1608780392e5bc8805079b1a1961ebd73128ee23ab7149e7f6904fa53",
        "urls": [
          "bzz-raw://7767ecfd8f8c30fb97fe2dc3b63e96f4593e458551c44e901a3acd4ed930d32c",
          "dweb:/ipfs/QmPJDWJBrzeCee7PqrixFwuCYhsEnFXcQqV6Z6FFdJSNpd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vault/RewardDistributor.sol",
    "id": 39104,
    "exportedSymbols": {
      "AcUpgradable": [
        273
      ],
      "IERC20": [
        107291
      ],
      "IVaultReward": [
        40821
      ],
      "ReentrancyGuard": [
        106626
      ],
      "RewardDistributor": [
        39103
      ],
      "SafeERC20": [
        108574
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3812:119",
    "nodes": [
      {
        "id": 38853,
        "nodeType": "PragmaDirective",
        "src": "33:24:119",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 38855,
        "nodeType": "ImportDirective",
        "src": "59:70:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39104,
        "sourceUnit": 107292,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38854,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 107291,
              "src": "67:6:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38857,
        "nodeType": "ImportDirective",
        "src": "130:82:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39104,
        "sourceUnit": 108575,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38856,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 108574,
              "src": "138:9:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38859,
        "nodeType": "ImportDirective",
        "src": "213:85:119",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39104,
        "sourceUnit": 106627,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38858,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106626,
              "src": "221:15:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38861,
        "nodeType": "ImportDirective",
        "src": "299:59:119",
        "nodes": [],
        "absolutePath": "contracts/vault/interfaces/IVaultReward.sol",
        "file": "./interfaces/IVaultReward.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39104,
        "sourceUnit": 40822,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38860,
              "name": "IVaultReward",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40821,
              "src": "307:12:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38863,
        "nodeType": "ImportDirective",
        "src": "359:52:119",
        "nodes": [],
        "absolutePath": "contracts/ac/AcUpgradable.sol",
        "file": "../ac/AcUpgradable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39104,
        "sourceUnit": 274,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38862,
              "name": "AcUpgradable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 273,
              "src": "367:12:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39103,
        "nodeType": "ContractDefinition",
        "src": "413:3431:119",
        "nodes": [
          {
            "id": 38869,
            "nodeType": "UsingForDirective",
            "src": "462:27:119",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 38866,
              "name": "SafeERC20",
              "nameLocations": [
                "468:9:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 108574,
              "src": "468:9:119"
            },
            "typeName": {
              "id": 38868,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38867,
                "name": "IERC20",
                "nameLocations": [
                  "482:6:119"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 107291,
                "src": "482:6:119"
              },
              "referencedDeclaration": 107291,
              "src": "482:6:119",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$107291",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 38871,
            "nodeType": "VariableDeclaration",
            "src": "495:26:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "510:11:119",
            "scope": 39103,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38870,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "495:7:119",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38873,
            "nodeType": "VariableDeclaration",
            "src": "527:32:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8d93627",
            "mutability": "mutable",
            "name": "tokensPerInterval",
            "nameLocation": "542:17:119",
            "scope": 39103,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38872,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "527:7:119",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38875,
            "nodeType": "VariableDeclaration",
            "src": "565:35:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "75b17350",
            "mutability": "mutable",
            "name": "lastDistributionTime",
            "nameLocation": "580:20:119",
            "scope": 39103,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38874,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "565:7:119",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38877,
            "nodeType": "VariableDeclaration",
            "src": "606:28:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "6bcb411a",
            "mutability": "mutable",
            "name": "rewardTracker",
            "nameLocation": "621:13:119",
            "scope": 39103,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38876,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:119",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 38881,
            "nodeType": "EventDefinition",
            "src": "641:33:119",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead",
            "name": "Distribute",
            "nameLocation": "647:10:119",
            "parameters": {
              "id": 38880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38879,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "666:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38881,
                  "src": "658:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:16:119"
            }
          },
          {
            "id": 38885,
            "nodeType": "EventDefinition",
            "src": "679:46:119",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "98dc76c39aa5a5dcb749f8750a65db3dfa1e14bcc1591a9c16a7420e5da748f8",
            "name": "TokensPerIntervalChange",
            "nameLocation": "685:23:119",
            "parameters": {
              "id": 38884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38883,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "717:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38885,
                  "src": "709:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "708:16:119"
            }
          },
          {
            "id": 38930,
            "nodeType": "FunctionDefinition",
            "src": "731:346:119",
            "nodes": [],
            "body": {
              "id": 38929,
              "nodeType": "Block",
              "src": "840:237:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38897,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "875:3:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "879:6:119",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "875:10:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38894,
                        "name": "AcUpgradable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "850:12:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AcUpgradable_$273_$",
                          "typeString": "type(contract AcUpgradable)"
                        }
                      },
                      "id": 38896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "863:11:119",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "850:24:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:36:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38900,
                  "nodeType": "ExpressionStatement",
                  "src": "850:36:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38902,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38887,
                          "src": "904:12:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "928:1:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "920:7:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38903,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "920:7:119",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "920:10:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "904:26:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f",
                        "id": 38908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "932:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8",
                          "typeString": "literal_string \"zero\""
                        },
                        "value": "zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8",
                          "typeString": "literal_string \"zero\""
                        }
                      ],
                      "id": 38901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "896:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:43:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38910,
                  "nodeType": "ExpressionStatement",
                  "src": "896:43:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38912,
                          "name": "_rewardTracker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38889,
                          "src": "957:14:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "983:1:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "975:7:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38913,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "975:7:119",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "975:10:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "957:28:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f",
                        "id": 38918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8",
                          "typeString": "literal_string \"zero\""
                        },
                        "value": "zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8",
                          "typeString": "literal_string \"zero\""
                        }
                      ],
                      "id": 38911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "949:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:45:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38920,
                  "nodeType": "ExpressionStatement",
                  "src": "949:45:119"
                },
                {
                  "expression": {
                    "id": 38923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38921,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38871,
                      "src": "1004:11:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38922,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38887,
                      "src": "1018:12:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1004:26:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38924,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:26:119"
                },
                {
                  "expression": {
                    "id": 38927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38925,
                      "name": "rewardTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38877,
                      "src": "1040:13:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38926,
                      "name": "_rewardTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38889,
                      "src": "1056:14:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1040:30:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38928,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:30:119"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38892,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38891,
                  "name": "initializer",
                  "nameLocations": [
                    "828:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 103185,
                  "src": "828:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "828:11:119"
              }
            ],
            "name": "initialize",
            "nameLocation": "740:10:119",
            "parameters": {
              "id": 38890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38887,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "768:12:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38930,
                  "src": "760:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38889,
                  "mutability": "mutable",
                  "name": "_rewardTracker",
                  "nameLocation": "798:14:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38930,
                  "src": "790:22:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:68:119"
            },
            "returnParameters": {
              "id": 38893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "840:0:119"
            },
            "scope": 39103,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38951,
            "nodeType": "FunctionDefinition",
            "src": "1414:188:119",
            "nodes": [],
            "body": {
              "id": 38950,
              "nodeType": "Block",
              "src": "1539:63:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38946,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38935,
                        "src": "1577:8:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38947,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38937,
                        "src": "1587:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 38943,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38933,
                            "src": "1556:6:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38942,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "1549:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 38944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1549:14:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 38945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1564:12:119",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 108231,
                      "src": "1549:27:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$107291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$107291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 38948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:46:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38949,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:46:119"
                }
              ]
            },
            "documentation": {
              "id": 38931,
              "nodeType": "StructuredDocumentation",
              "src": "1083:326:119",
              "text": " @dev Withdraws tokens from the contract and transfers them to the specified account.\n Only the admin can call this function.\n @param _token The address of the token to withdraw.\n @param _account The address to transfer the tokens to.\n @param _amount The amount of tokens to withdraw."
            },
            "functionSelector": "01e33667",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38940,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38939,
                  "name": "onlyManager",
                  "nameLocations": [
                    "1527:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 191,
                  "src": "1527:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "1527:11:119"
              }
            ],
            "name": "withdrawToken",
            "nameLocation": "1423:13:119",
            "parameters": {
              "id": 38938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38933,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1454:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38951,
                  "src": "1446:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38935,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1478:8:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38951,
                  "src": "1470:16:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38937,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1504:7:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38951,
                  "src": "1496:15:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1436:81:119"
            },
            "returnParameters": {
              "id": 38941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:0:119"
            },
            "scope": 39103,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38964,
            "nodeType": "FunctionDefinition",
            "src": "1749:127:119",
            "nodes": [],
            "body": {
              "id": 38963,
              "nodeType": "Block",
              "src": "1821:55:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38958,
                      "name": "lastDistributionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38875,
                      "src": "1831:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 38959,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1854:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 38960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1860:9:119",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1854:15:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1831:38:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38962,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:38:119"
                }
              ]
            },
            "documentation": {
              "id": 38952,
              "nodeType": "StructuredDocumentation",
              "src": "1608:136:119",
              "text": " @dev Updates the last distribution time to the current block timestamp.\n Only the admin can call this function."
            },
            "functionSelector": "3ae6d6eb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 38955,
                    "name": "VAULT_MGR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "1805:14:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 38956,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38954,
                  "name": "onlyRole",
                  "nameLocations": [
                    "1796:8:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105009,
                  "src": "1796:8:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "1796:24:119"
              }
            ],
            "name": "updateLastDistributionTime",
            "nameLocation": "1758:26:119",
            "parameters": {
              "id": 38953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1784:2:119"
            },
            "returnParameters": {
              "id": 38957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:119"
            },
            "scope": 39103,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38997,
            "nodeType": "FunctionDefinition",
            "src": "2068:318:119",
            "nodes": [],
            "body": {
              "id": 38996,
              "nodeType": "Block",
              "src": "2163:223:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38973,
                      "name": "lastDistributionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38875,
                      "src": "2177:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 38974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2201:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2177:25:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38981,
                  "nodeType": "IfStatement",
                  "src": "2173:69:119",
                  "trueBody": {
                    "expression": {
                      "id": 38979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 38976,
                        "name": "lastDistributionTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38875,
                        "src": "2204:20:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "id": 38977,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2227:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 38978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2233:9:119",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2227:15:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2204:38:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38980,
                    "nodeType": "ExpressionStatement",
                    "src": "2204:38:119"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 38983,
                            "name": "rewardTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38877,
                            "src": "2265:13:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38982,
                          "name": "IVaultReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40821,
                          "src": "2252:12:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVaultReward_$40821_$",
                            "typeString": "type(contract IVaultReward)"
                          }
                        },
                        "id": 38984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2252:27:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultReward_$40821",
                          "typeString": "contract IVaultReward"
                        }
                      },
                      "id": 38985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2280:13:119",
                      "memberName": "updateRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40704,
                      "src": "2252:41:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 38986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:43:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38987,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:43:119"
                },
                {
                  "expression": {
                    "id": 38990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38988,
                      "name": "tokensPerInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38873,
                      "src": "2305:17:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38989,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38967,
                      "src": "2325:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2305:27:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38991,
                  "nodeType": "ExpressionStatement",
                  "src": "2305:27:119"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38993,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38967,
                        "src": "2371:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38992,
                      "name": "TokensPerIntervalChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38885,
                      "src": "2347:23:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:32:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38995,
                  "nodeType": "EmitStatement",
                  "src": "2342:37:119"
                }
              ]
            },
            "documentation": {
              "id": 38965,
              "nodeType": "StructuredDocumentation",
              "src": "1882:180:119",
              "text": " @dev Sets the number of tokens to distribute per interval.\n Only the admin can call this function.\n @param _amount The number of tokens per interval."
            },
            "functionSelector": "18e20a03",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 38970,
                    "name": "VAULT_MGR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "2147:14:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 38971,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38969,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2138:8:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105009,
                  "src": "2138:8:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "2138:24:119"
              }
            ],
            "name": "setTokensPerInterval",
            "nameLocation": "2077:20:119",
            "parameters": {
              "id": 38968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38967,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2115:7:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 38997,
                  "src": "2107:15:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2097:31:119"
            },
            "returnParameters": {
              "id": 38972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2163:0:119"
            },
            "scope": 39103,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39023,
            "nodeType": "FunctionDefinition",
            "src": "2548:263:119",
            "nodes": [],
            "body": {
              "id": 39022,
              "nodeType": "Block",
              "src": "2604:207:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 39003,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2618:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 39004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2624:9:119",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2618:15:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 39005,
                      "name": "lastDistributionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38875,
                      "src": "2637:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2618:39:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39010,
                  "nodeType": "IfStatement",
                  "src": "2614:78:119",
                  "trueBody": {
                    "id": 39009,
                    "nodeType": "Block",
                    "src": "2659:33:119",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 39007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2680:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 39002,
                        "id": 39008,
                        "nodeType": "Return",
                        "src": "2673:8:119"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    39012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39012,
                      "mutability": "mutable",
                      "name": "timeDiff",
                      "nameLocation": "2710:8:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 39022,
                      "src": "2702:16:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2702:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39017,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 39013,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2721:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 39014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2727:9:119",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2721:15:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 39015,
                      "name": "lastDistributionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38875,
                      "src": "2739:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2721:38:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2702:57:119"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39018,
                      "name": "tokensPerInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38873,
                      "src": "2776:17:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 39019,
                      "name": "timeDiff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39012,
                      "src": "2796:8:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2776:28:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39002,
                  "id": 39021,
                  "nodeType": "Return",
                  "src": "2769:35:119"
                }
              ]
            },
            "documentation": {
              "id": 38998,
              "nodeType": "StructuredDocumentation",
              "src": "2392:151:119",
              "text": " @dev Calculates the pending rewards based on the last distribution time and tokens per interval.\n @return The pending rewards."
            },
            "functionSelector": "eded3fda",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingRewards",
            "nameLocation": "2557:14:119",
            "parameters": {
              "id": 38999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2571:2:119"
            },
            "returnParameters": {
              "id": 39002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39001,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39023,
                  "src": "2595:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2594:9:119"
            },
            "scope": 39103,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39036,
            "nodeType": "ModifierDefinition",
            "src": "2916:168:119",
            "nodes": [],
            "body": {
              "id": 39035,
              "nodeType": "Block",
              "src": "2945:139:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 39030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 39027,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2976:3:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 39028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2980:6:119",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2976:10:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 39029,
                          "name": "rewardTracker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38877,
                          "src": "2990:13:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2976:27:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265776172644469737472696275746f723a20696e76616c6964206d73672e73656e646572",
                        "id": 39031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3017:39:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_202e28fda09340b1380d2d377871563a2145bc1030b33840cf2d8db45422abf9",
                          "typeString": "literal_string \"RewardDistributor: invalid msg.sender\""
                        },
                        "value": "RewardDistributor: invalid msg.sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_202e28fda09340b1380d2d377871563a2145bc1030b33840cf2d8db45422abf9",
                          "typeString": "literal_string \"RewardDistributor: invalid msg.sender\""
                        }
                      ],
                      "id": 39026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2955:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2955:111:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39033,
                  "nodeType": "ExpressionStatement",
                  "src": "2955:111:119"
                },
                {
                  "id": 39034,
                  "nodeType": "PlaceholderStatement",
                  "src": "3076:1:119"
                }
              ]
            },
            "documentation": {
              "id": 39024,
              "nodeType": "StructuredDocumentation",
              "src": "2817:94:119",
              "text": " @dev Modifier to only allow the reward tracker contract to call a function."
            },
            "name": "onlyRewardTracker",
            "nameLocation": "2925:17:119",
            "parameters": {
              "id": 39025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2942:2:119"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39098,
            "nodeType": "FunctionDefinition",
            "src": "3316:490:119",
            "nodes": [],
            "body": {
              "id": 39097,
              "nodeType": "Block",
              "src": "3383:423:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39045,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3401:6:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 39097,
                      "src": "3393:14:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39044,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3393:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39048,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39046,
                      "name": "pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39023,
                      "src": "3410:14:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 39047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:16:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3393:33:119"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39049,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39045,
                      "src": "3440:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 39050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3450:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3440:11:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39055,
                  "nodeType": "IfStatement",
                  "src": "3436:50:119",
                  "trueBody": {
                    "id": 39054,
                    "nodeType": "Block",
                    "src": "3453:33:119",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 39052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3474:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 39043,
                        "id": 39053,
                        "nodeType": "Return",
                        "src": "3467:8:119"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 39059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39056,
                      "name": "lastDistributionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38875,
                      "src": "3496:20:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 39057,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3519:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 39058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3525:9:119",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3519:15:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3496:38:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39060,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:38:119"
                },
                {
                  "assignments": [
                    39062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39062,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3553:7:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 39097,
                      "src": "3545:15:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39061,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3545:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39072,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39069,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3601:4:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RewardDistributor_$39103",
                              "typeString": "contract RewardDistributor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RewardDistributor_$39103",
                              "typeString": "contract RewardDistributor"
                            }
                          ],
                          "id": 39068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3593:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3593:7:119",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3593:13:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 39064,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38871,
                            "src": "3570:11:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39063,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "3563:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 39065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3563:19:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 39066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3583:9:119",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107248,
                      "src": "3563:29:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 39071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:44:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3545:62:119"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39073,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39045,
                      "src": "3621:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 39074,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39062,
                      "src": "3630:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3621:16:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39081,
                  "nodeType": "IfStatement",
                  "src": "3617:63:119",
                  "trueBody": {
                    "id": 39080,
                    "nodeType": "Block",
                    "src": "3639:41:119",
                    "statements": [
                      {
                        "expression": {
                          "id": 39078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39076,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39045,
                            "src": "3653:6:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 39077,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39062,
                            "src": "3662:7:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3653:16:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39079,
                        "nodeType": "ExpressionStatement",
                        "src": "3653:16:119"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 39086,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3723:3:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3727:6:119",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3723:10:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 39088,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39045,
                        "src": "3735:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 39083,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38871,
                            "src": "3697:11:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39082,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "3690:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 39084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3690:19:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 39085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3710:12:119",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 108231,
                      "src": "3690:32:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$107291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$107291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 39089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:52:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39090,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:52:119"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 39092,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39045,
                        "src": "3769:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39091,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38881,
                      "src": "3758:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 39093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:18:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39094,
                  "nodeType": "EmitStatement",
                  "src": "3753:23:119"
                },
                {
                  "expression": {
                    "id": 39095,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39045,
                    "src": "3793:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39043,
                  "id": 39096,
                  "nodeType": "Return",
                  "src": "3786:13:119"
                }
              ]
            },
            "documentation": {
              "id": 39037,
              "nodeType": "StructuredDocumentation",
              "src": "3090:221:119",
              "text": " @dev Called by `VaultReward`.Distributes pending rewards to the reward tracker contract.\n Only the reward tracker contract can call this function.\n @return The amount of rewards distributed."
            },
            "functionSelector": "e4fc6b6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39040,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39039,
                  "name": "onlyRewardTracker",
                  "nameLocations": [
                    "3347:17:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39036,
                  "src": "3347:17:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "3347:17:119"
              }
            ],
            "name": "distribute",
            "nameLocation": "3325:10:119",
            "parameters": {
              "id": 39038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:2:119"
            },
            "returnParameters": {
              "id": 39043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39098,
                  "src": "3374:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3374:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3373:9:119"
            },
            "scope": 39103,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39102,
            "nodeType": "VariableDeclaration",
            "src": "3812:29:119",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "3832:9:119",
            "scope": 39103,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 39099,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3812:7:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 39101,
              "length": {
                "hexValue": "3530",
                "id": 39100,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3820:2:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "3812:11:119",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38864,
              "name": "AcUpgradable",
              "nameLocations": [
                "443:12:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 273,
              "src": "443:12:119"
            },
            "id": 38865,
            "nodeType": "InheritanceSpecifier",
            "src": "443:12:119"
          }
        ],
        "canonicalName": "RewardDistributor",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39103,
          273,
          103283,
          105472,
          105286,
          110310,
          110322,
          105359,
          109087
        ],
        "name": "RewardDistributor",
        "nameLocation": "422:17:119",
        "scope": 39104,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 119
}
{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cumulativeRewardPerToken",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatePool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "apr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "averageStakedAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC4626",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSharesOut",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sharesOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "buyLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "claimForAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimLPReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimableReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "coreVault",
      "outputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeRewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRouter",
      "outputs": [
        {
          "internalType": "contract IFeeRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLPPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLPReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "grantControllerRoleByMarketManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_coreVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vaultRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_distributor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lpEarnedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "previousCumulatedRewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC4626",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAssetsOut",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assetOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "sellLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_apr",
          "type": "uint256"
        }
      ],
      "name": "setAPR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "updateRewardsByAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRouter",
      "outputs": [
        {
          "internalType": "contract IVaultRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a33610024565b6001600355610076565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61230a806100856000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c8063a318021711610167578063d53b26ee116100ce578063ef8b30f711610087578063ef8b30f714610592578063f29ebf61146105a5578063f2fde38b146105b8578063f5fc5076146105cb578063f7c618c1146105d4578063f8c8765e146105dc57600080fd5b8063d53b26ee14610529578063d547741f1461053c578063e547bb911461054f578063e950342514610557578063eb4fe81814610577578063eded3fda1461058a57600080fd5b8063b3d7f6b911610120578063b3d7f6b9146104d8578063b77905ae146104eb578063bfe10928146104f3578063c120105414610506578063c89d5b8b1461050e578063d37c441c1461051657600080fd5b8063a318021714610456578063a8d9362714610476578063a9d424e21461047e578063aaf5eb6814610491578063ae8bcdf8146104a5578063afd6a5cc146104c557600080fd5b80634cdad5061161020b5780637fe4a698116101c45780637fe4a698146103fc578063854303cf1461040f5780638da5cb5b146104225780638f089d651461043357806391d148541461043b578063a217fddf1461044e57600080fd5b80634cdad5061461039257806357ded9c9146103a5578063674ce1b5146103ae5780636dc7b0a1146103d9578063715018a6146103e157806375829def146103e957600080fd5b80632f2ff15d1161025d5780632f2ff15d1461032357806331de7d151461033657806336568abe146103495780633e158b0c14610357578063402914f51461035f57806344a084111461037257600080fd5b806301ffc9a71461029a57806305300b28146102c25780630a28a477146102d85780631ee2b0b2146102eb578063248a9ca314610300575b600080fd5b6102ad6102a8366004611ea5565b6105ef565b60405190151581526020015b60405180910390f35b6102ca610626565b6040519081526020016102b9565b6102ca6102e6366004611ecf565b610698565b6102fe6102f9366004611efd565b610707565b005b6102ca61030e366004611ecf565b60009081526020819052604090206001015490565b6102fe610331366004611f1a565b610a00565b6102ca610344366004611f4a565b610a2a565b6102fe610295366004611f1a565b6102fe610b10565b6102ca61036d366004611efd565b610b2e565b6102ca610380366004611efd565b600a6020526000908152604090205481565b6102ca6103a0366004611ecf565b610ced565b6102ca60095481565b6005546103c1906001600160a01b031681565b6040516001600160a01b0390911681526020016102b9565b6102ca610d1f565b6102fe610d69565b6102fe6103f7366004611efd565b610d7b565b6102fe61040a366004611efd565b610def565b6102fe61041d366004611ecf565b610e19565b6001546001600160a01b03166103c1565b6102ca610e49565b6102ad610449366004611f1a565b610e8b565b6102ca600081565b6102ca610464366004611efd565b600d6020526000908152604090205481565b6102ca610eb4565b6102ca61048c366004611f4a565b610efe565b6102ca6c0c9f2c9cd04674edea4000000081565b6102ca6104b3366004611efd565b600b6020526000908152604090205481565b6102ca6104d3366004611efd565b6110ba565b6102ca6104e6366004611ecf565b6110f4565b6102ca611126565b6008546103c1906001600160a01b031681565b6102ca61127a565b6009546102ca565b6006546103c1906001600160a01b031681565b6102ca610537366004611efd565b6112c4565b6102fe61054a366004611f1a565b611304565b6102ca611329565b6102ca610565366004611efd565b600c6020526000908152604090205481565b6102ca610585366004611efd565b61134b565b6102ca61138b565b6102ca6105a0366004611ecf565b611396565b6004546103c1906001600160a01b031681565b6102fe6105c6366004611efd565b6113c8565b6102ca60075481565b6103c1611441565b6102fe6105ea366004611f90565b6114af565b60006001600160e01b03198216637965db0b60e01b148061062057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546040805162a6016560e31b815290516000926001600160a01b0316916305300b289160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106939190611fec565b905090565b600554604051630a28a47760e01b8152600481018390526000916001600160a01b031690630a28a477906024015b602060405180830381865afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190611fec565b6008546040805163e4fc6b6d60e01b815290516000926001600160a01b03169163e4fc6b6d916004808301926020929190829003018187875af1158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190611fec565b90506000600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190611fec565b60075490915081158015906108065750600083115b1561087957816108236c0c9f2c9cd04674edea400000008561201b565b61082d9190612032565b6108379082612054565b600781905560408051848152602081018390529192507f055418cabed8a0ec732dd9b1f84e69d3f33a8f9a70d721b7a6962a00c26a4572910160405180910390a15b806000036108875750505050565b6001600160a01b038416156109fa5760006108a185611672565b6001600160a01b0386166000908152600a6020526040812054919250906c0c9f2c9cd04674edea40000000906108d79085612067565b6108e1908461201b565b6108eb9190612032565b6001600160a01b0387166000908152600c602052604081205491925090610913908390612054565b6001600160a01b0388166000908152600c60209081526040808320849055600a9091529020859055905080158015906109545750600061095288611672565b115b156109f6576001600160a01b0387166000908152600b602052604081205461097d908490612054565b90506109d06109968261099087876116a5565b906116b8565b6001600160a01b038a166000908152600b6020908152604080832054600d909252909120546109ca918591610990916116a5565b906116c4565b6001600160a01b0389166000908152600d6020908152604080832093909355600b905220555b5050505b50505050565b600082815260208190526040902060010154610a1b816116d0565b610a2583836116da565b505050565b6000610a3461175e565b610a3d33610707565b604051635d043b2960e11b8152600481018490526001600160a01b0385811660248301819052604483015283919087169063ba087652906064016020604051808303816000875af1158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba9190611fec565b9150811015610afe5760405162461bcd60e51b815260206004820152600b60248201526a26b4b727baba22b93937b960a91b60448201526064015b60405180910390fd5b610b086001600355565b949350505050565b610b1861175e565b610b226000610707565b610b2c6001600355565b565b600080610b3a83611672565b905080600003610b615750506001600160a01b03166000908152600c602052604090205490565b600554604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcf9190611fec565b90506000610c616c0c9f2c9cd04674edea40000000600860009054906101000a90046001600160a01b03166001600160a01b031663eded3fda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b9190611fec565b906116a5565b90506000610c7b610c7283856116b8565b600754906116c4565b6001600160a01b0387166000908152600a6020526040902054909150610ce390610cc4906c0c9f2c9cd04674edea400000009061099090610cbd9086906117b7565b88906116a5565b6001600160a01b0388166000908152600c6020526040902054906116c4565b9695505050505050565b60055460405163266d6a8360e11b8152600481018390526000916001600160a01b031690634cdad506906024016106c6565b60065460408051636dc7b0a160e01b815290516000926001600160a01b031691636dc7b0a19160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b610d716117c3565b610b2c600061181d565b6000610d86816116d0565b6001600160a01b038216610dcc5760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b6044820152606401610af5565b610dd760008361186f565b610de08261181d565b610deb600033611879565b5050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b7610295816116d0565b7fcb6bc1c12dd43bca8d7dd46d975f913325437d0dcd5978e99d515e4ad39b9772610e43816116d0565b50600955565b336000908152600b60205260408120548103610e655750600090565b336000908152600c6020908152604080832054600b909252909120546106939190612067565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6008546040805163a8d9362760e01b815290516000926001600160a01b03169163a8d936279160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b6000610f0861175e565b610f1133610707565b6000856001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f75919061207a565b9050610f83813330876118de565b60405163095ea7b360e01b81526001600160a01b0387811660048301526024820186905282169063095ea7b3906044016020604051808303816000875af1158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff69190612097565b50604051636e553f6560e01b8152600481018590526001600160a01b038681166024830152849190881690636e553f65906044016020604051808303816000875af1158015611049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106d9190611fec565b92508210156110af5760405162461bcd60e51b815260206004820152600e60248201526d26b4b729b430b932b9a2b93937b960911b6044820152606401610af5565b50610b086001600355565b60006110e57fcb58d6d985142a614029cdf01861b4fe094d5919a47e69b8310dc4093d9d6ad06116d0565b6110ee82611949565b50919050565b60055460405163b3d7f6b960e01b8152600481018390526000916001600160a01b03169063b3d7f6b9906024016106c6565b600080600560009054906101000a90046001600160a01b03166001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a09190611fec565b90506000600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121b9190611fec565b9050811580611228575080155b1561125257611235610626565b61124090600a61219d565b61124b90600161201b565b9250505090565b8061125b610626565b61126690600a61219d565b611270908461201b565b61124b9190612032565b60065460408051633048041560e21b815290516000926001600160a01b03169163c12010549160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b6000816001600160a01b0316636fd3acb46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e3573d6000803e3d6000fd5b60008281526020819052604090206001015461131f816116d0565b610a258383611879565b600061133361175e565b61133c33611949565b90506113486001600355565b90565b6000816001600160a01b031663c7b8b46d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e3573d6000803e3d6000fd5b600061069333610b2e565b60055460405163ef8b30f760e01b8152600481018390526000916001600160a01b03169063ef8b30f7906024016106c6565b6113d06117c3565b6001600160a01b0381166114355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610af5565b61143e8161181d565b50565b600554604080516338d52e0f60e01b815290516000926001600160a01b0316916338d52e0f9160048083019260209291908290030181865afa15801561148b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610693919061207a565b600154600160a81b900460ff16158080156114d5575060018054600160a01b900460ff16105b806114f55750303b1580156114f5575060018054600160a01b900460ff16145b6115585760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610af5565b6001805460ff60a01b1916600160a01b1790558015611585576001805460ff60a81b1916600160a81b1790555b6001600160a01b03851661159857600080fd5b6001600160a01b0384166115ab57600080fd5b6001600160a01b0383166115be57600080fd5b6001600160a01b0382166115d157600080fd5b6115da33611a53565b600680546001600160a01b038087166001600160a01b03199283161790925560058054888416908316179055600480548684169083161790556008805492851692909116919091179055801561166b576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a08231906024016106c6565b60006116b1828461201b565b9392505050565b60006116b18284612032565b60006116b18284612054565b61143e8133611a76565b6116e48282610e8b565b610deb576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561171a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6002600354036117b05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610af5565b6002600355565b60006116b18284612067565b6001546001600160a01b03163314610b2c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610af5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610deb82826116da565b6118838282610e8b565b15610deb576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6040516001600160a01b03808516602483015283166044820152606481018290526109fa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611acf565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa158015611997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bb9190611fec565b116119c857506000919050565b6119d182610707565b506001600160a01b0381166000908152600c602052604081208054919055611a0c82826119fc611441565b6001600160a01b03169190611ba4565b604080516001600160a01b0384168152602081018390527fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba910160405180910390a1919050565b42600255611a603361181d565b611a6b60003361186f565b61143e60008261186f565b611a808282610e8b565b610deb57611a8d81611bd4565b611a98836020611be6565b604051602001611aa99291906121cd565b60408051601f198184030181529082905262461bcd60e51b8252610af591600401612242565b6000611b24826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d829092919063ffffffff16565b9050805160001480611b45575080806020019051810190611b459190612097565b610a255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610af5565b6040516001600160a01b038316602482015260448101829052610a2590849063a9059cbb60e01b90606401611912565b60606106206001600160a01b03831660145b60606000611bf583600261201b565b611c00906002612054565b67ffffffffffffffff811115611c1857611c18612275565b6040519080825280601f01601f191660200182016040528015611c42576020820181803683370190505b509050600360fc1b81600081518110611c5d57611c5d61228b565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611c8c57611c8c61228b565b60200101906001600160f81b031916908160001a9053506000611cb084600261201b565b611cbb906001612054565b90505b6001811115611d33576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611cef57611cef61228b565b1a60f81b828281518110611d0557611d0561228b565b60200101906001600160f81b031916908160001a90535060049490941c93611d2c816122a1565b9050611cbe565b5083156116b15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610af5565b6060610b08848460008585600080866001600160a01b03168587604051611da991906122b8565b60006040518083038185875af1925050503d8060008114611de6576040519150601f19603f3d011682016040523d82523d6000602084013e611deb565b606091505b5091509150611dfc87838387611e07565b979650505050505050565b60608315611e76578251600003611e6f576001600160a01b0385163b611e6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610af5565b5081610b08565b610b088383815115611e8b5781518083602001fd5b8060405162461bcd60e51b8152600401610af59190612242565b600060208284031215611eb757600080fd5b81356001600160e01b0319811681146116b157600080fd5b600060208284031215611ee157600080fd5b5035919050565b6001600160a01b038116811461143e57600080fd5b600060208284031215611f0f57600080fd5b81356116b181611ee8565b60008060408385031215611f2d57600080fd5b823591506020830135611f3f81611ee8565b809150509250929050565b60008060008060808587031215611f6057600080fd5b8435611f6b81611ee8565b93506020850135611f7b81611ee8565b93969395505050506040820135916060013590565b60008060008060808587031215611fa657600080fd5b8435611fb181611ee8565b93506020850135611fc181611ee8565b92506040850135611fd181611ee8565b91506060850135611fe181611ee8565b939692955090935050565b600060208284031215611ffe57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761062057610620612005565b60008261204f57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561062057610620612005565b8181038181111561062057610620612005565b60006020828403121561208c57600080fd5b81516116b181611ee8565b6000602082840312156120a957600080fd5b815180151581146116b157600080fd5b600181815b808511156120f45781600019048211156120da576120da612005565b808516156120e757918102915b93841c93908002906120be565b509250929050565b60008261210b57506001610620565b8161211857506000610620565b816001811461212e576002811461213857612154565b6001915050610620565b60ff84111561214957612149612005565b50506001821b610620565b5060208310610133831016604e8410600b8410161715612177575081810a610620565b61218183836120b9565b806000190482111561219557612195612005565b029392505050565b60006116b183836120fc565b60005b838110156121c45781810151838201526020016121ac565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516122058160178501602088016121a9565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516122368160288401602088016121a9565b01602801949350505050565b60208152600082518060208401526122618160408501602087016121a9565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816122b0576122b0612005565b506000190190565b600082516122ca8184602087016121a9565b919091019291505056fea26469706673582212208b1e52d7051e3c30e677f72fc8f1fdc739be1d30dfa56742f49f8ec34406245764736f6c63430008110033",
    "sourceMap": "758:14968:120:-:0;;;;;;;;;;;;-1:-1:-1;936:32:175;719:10:201;936:18:175;:32::i;:::-;1716:1:187;1821:7;:22;758:14968:120;;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;758:14968:120:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c8063a318021711610167578063d53b26ee116100ce578063ef8b30f711610087578063ef8b30f714610592578063f29ebf61146105a5578063f2fde38b146105b8578063f5fc5076146105cb578063f7c618c1146105d4578063f8c8765e146105dc57600080fd5b8063d53b26ee14610529578063d547741f1461053c578063e547bb911461054f578063e950342514610557578063eb4fe81814610577578063eded3fda1461058a57600080fd5b8063b3d7f6b911610120578063b3d7f6b9146104d8578063b77905ae146104eb578063bfe10928146104f3578063c120105414610506578063c89d5b8b1461050e578063d37c441c1461051657600080fd5b8063a318021714610456578063a8d9362714610476578063a9d424e21461047e578063aaf5eb6814610491578063ae8bcdf8146104a5578063afd6a5cc146104c557600080fd5b80634cdad5061161020b5780637fe4a698116101c45780637fe4a698146103fc578063854303cf1461040f5780638da5cb5b146104225780638f089d651461043357806391d148541461043b578063a217fddf1461044e57600080fd5b80634cdad5061461039257806357ded9c9146103a5578063674ce1b5146103ae5780636dc7b0a1146103d9578063715018a6146103e157806375829def146103e957600080fd5b80632f2ff15d1161025d5780632f2ff15d1461032357806331de7d151461033657806336568abe146103495780633e158b0c14610357578063402914f51461035f57806344a084111461037257600080fd5b806301ffc9a71461029a57806305300b28146102c25780630a28a477146102d85780631ee2b0b2146102eb578063248a9ca314610300575b600080fd5b6102ad6102a8366004611ea5565b6105ef565b60405190151581526020015b60405180910390f35b6102ca610626565b6040519081526020016102b9565b6102ca6102e6366004611ecf565b610698565b6102fe6102f9366004611efd565b610707565b005b6102ca61030e366004611ecf565b60009081526020819052604090206001015490565b6102fe610331366004611f1a565b610a00565b6102ca610344366004611f4a565b610a2a565b6102fe610295366004611f1a565b6102fe610b10565b6102ca61036d366004611efd565b610b2e565b6102ca610380366004611efd565b600a6020526000908152604090205481565b6102ca6103a0366004611ecf565b610ced565b6102ca60095481565b6005546103c1906001600160a01b031681565b6040516001600160a01b0390911681526020016102b9565b6102ca610d1f565b6102fe610d69565b6102fe6103f7366004611efd565b610d7b565b6102fe61040a366004611efd565b610def565b6102fe61041d366004611ecf565b610e19565b6001546001600160a01b03166103c1565b6102ca610e49565b6102ad610449366004611f1a565b610e8b565b6102ca600081565b6102ca610464366004611efd565b600d6020526000908152604090205481565b6102ca610eb4565b6102ca61048c366004611f4a565b610efe565b6102ca6c0c9f2c9cd04674edea4000000081565b6102ca6104b3366004611efd565b600b6020526000908152604090205481565b6102ca6104d3366004611efd565b6110ba565b6102ca6104e6366004611ecf565b6110f4565b6102ca611126565b6008546103c1906001600160a01b031681565b6102ca61127a565b6009546102ca565b6006546103c1906001600160a01b031681565b6102ca610537366004611efd565b6112c4565b6102fe61054a366004611f1a565b611304565b6102ca611329565b6102ca610565366004611efd565b600c6020526000908152604090205481565b6102ca610585366004611efd565b61134b565b6102ca61138b565b6102ca6105a0366004611ecf565b611396565b6004546103c1906001600160a01b031681565b6102fe6105c6366004611efd565b6113c8565b6102ca60075481565b6103c1611441565b6102fe6105ea366004611f90565b6114af565b60006001600160e01b03198216637965db0b60e01b148061062057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6006546040805162a6016560e31b815290516000926001600160a01b0316916305300b289160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106939190611fec565b905090565b600554604051630a28a47760e01b8152600481018390526000916001600160a01b031690630a28a477906024015b602060405180830381865afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190611fec565b6008546040805163e4fc6b6d60e01b815290516000926001600160a01b03169163e4fc6b6d916004808301926020929190829003018187875af1158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190611fec565b90506000600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190611fec565b60075490915081158015906108065750600083115b1561087957816108236c0c9f2c9cd04674edea400000008561201b565b61082d9190612032565b6108379082612054565b600781905560408051848152602081018390529192507f055418cabed8a0ec732dd9b1f84e69d3f33a8f9a70d721b7a6962a00c26a4572910160405180910390a15b806000036108875750505050565b6001600160a01b038416156109fa5760006108a185611672565b6001600160a01b0386166000908152600a6020526040812054919250906c0c9f2c9cd04674edea40000000906108d79085612067565b6108e1908461201b565b6108eb9190612032565b6001600160a01b0387166000908152600c602052604081205491925090610913908390612054565b6001600160a01b0388166000908152600c60209081526040808320849055600a9091529020859055905080158015906109545750600061095288611672565b115b156109f6576001600160a01b0387166000908152600b602052604081205461097d908490612054565b90506109d06109968261099087876116a5565b906116b8565b6001600160a01b038a166000908152600b6020908152604080832054600d909252909120546109ca918591610990916116a5565b906116c4565b6001600160a01b0389166000908152600d6020908152604080832093909355600b905220555b5050505b50505050565b600082815260208190526040902060010154610a1b816116d0565b610a2583836116da565b505050565b6000610a3461175e565b610a3d33610707565b604051635d043b2960e11b8152600481018490526001600160a01b0385811660248301819052604483015283919087169063ba087652906064016020604051808303816000875af1158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba9190611fec565b9150811015610afe5760405162461bcd60e51b815260206004820152600b60248201526a26b4b727baba22b93937b960a91b60448201526064015b60405180910390fd5b610b086001600355565b949350505050565b610b1861175e565b610b226000610707565b610b2c6001600355565b565b600080610b3a83611672565b905080600003610b615750506001600160a01b03166000908152600c602052604090205490565b600554604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcf9190611fec565b90506000610c616c0c9f2c9cd04674edea40000000600860009054906101000a90046001600160a01b03166001600160a01b031663eded3fda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b9190611fec565b906116a5565b90506000610c7b610c7283856116b8565b600754906116c4565b6001600160a01b0387166000908152600a6020526040902054909150610ce390610cc4906c0c9f2c9cd04674edea400000009061099090610cbd9086906117b7565b88906116a5565b6001600160a01b0388166000908152600c6020526040902054906116c4565b9695505050505050565b60055460405163266d6a8360e11b8152600481018390526000916001600160a01b031690634cdad506906024016106c6565b60065460408051636dc7b0a160e01b815290516000926001600160a01b031691636dc7b0a19160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b610d716117c3565b610b2c600061181d565b6000610d86816116d0565b6001600160a01b038216610dcc5760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b6044820152606401610af5565b610dd760008361186f565b610de08261181d565b610deb600033611879565b5050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b7610295816116d0565b7fcb6bc1c12dd43bca8d7dd46d975f913325437d0dcd5978e99d515e4ad39b9772610e43816116d0565b50600955565b336000908152600b60205260408120548103610e655750600090565b336000908152600c6020908152604080832054600b909252909120546106939190612067565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6008546040805163a8d9362760e01b815290516000926001600160a01b03169163a8d936279160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b6000610f0861175e565b610f1133610707565b6000856001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f75919061207a565b9050610f83813330876118de565b60405163095ea7b360e01b81526001600160a01b0387811660048301526024820186905282169063095ea7b3906044016020604051808303816000875af1158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff69190612097565b50604051636e553f6560e01b8152600481018590526001600160a01b038681166024830152849190881690636e553f65906044016020604051808303816000875af1158015611049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106d9190611fec565b92508210156110af5760405162461bcd60e51b815260206004820152600e60248201526d26b4b729b430b932b9a2b93937b960911b6044820152606401610af5565b50610b086001600355565b60006110e57fcb58d6d985142a614029cdf01861b4fe094d5919a47e69b8310dc4093d9d6ad06116d0565b6110ee82611949565b50919050565b60055460405163b3d7f6b960e01b8152600481018390526000916001600160a01b03169063b3d7f6b9906024016106c6565b600080600560009054906101000a90046001600160a01b03166001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a09190611fec565b90506000600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121b9190611fec565b9050811580611228575080155b1561125257611235610626565b61124090600a61219d565b61124b90600161201b565b9250505090565b8061125b610626565b61126690600a61219d565b611270908461201b565b61124b9190612032565b60065460408051633048041560e21b815290516000926001600160a01b03169163c12010549160048083019260209291908290030181865afa15801561066f573d6000803e3d6000fd5b6000816001600160a01b0316636fd3acb46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e3573d6000803e3d6000fd5b60008281526020819052604090206001015461131f816116d0565b610a258383611879565b600061133361175e565b61133c33611949565b90506113486001600355565b90565b6000816001600160a01b031663c7b8b46d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106e3573d6000803e3d6000fd5b600061069333610b2e565b60055460405163ef8b30f760e01b8152600481018390526000916001600160a01b03169063ef8b30f7906024016106c6565b6113d06117c3565b6001600160a01b0381166114355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610af5565b61143e8161181d565b50565b600554604080516338d52e0f60e01b815290516000926001600160a01b0316916338d52e0f9160048083019260209291908290030181865afa15801561148b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610693919061207a565b600154600160a81b900460ff16158080156114d5575060018054600160a01b900460ff16105b806114f55750303b1580156114f5575060018054600160a01b900460ff16145b6115585760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610af5565b6001805460ff60a01b1916600160a01b1790558015611585576001805460ff60a81b1916600160a81b1790555b6001600160a01b03851661159857600080fd5b6001600160a01b0384166115ab57600080fd5b6001600160a01b0383166115be57600080fd5b6001600160a01b0382166115d157600080fd5b6115da33611a53565b600680546001600160a01b038087166001600160a01b03199283161790925560058054888416908316179055600480548684169083161790556008805492851692909116919091179055801561166b576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a08231906024016106c6565b60006116b1828461201b565b9392505050565b60006116b18284612032565b60006116b18284612054565b61143e8133611a76565b6116e48282610e8b565b610deb576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561171a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6002600354036117b05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610af5565b6002600355565b60006116b18284612067565b6001546001600160a01b03163314610b2c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610af5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610deb82826116da565b6118838282610e8b565b15610deb576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6040516001600160a01b03808516602483015283166044820152606481018290526109fa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611acf565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa158015611997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bb9190611fec565b116119c857506000919050565b6119d182610707565b506001600160a01b0381166000908152600c602052604081208054919055611a0c82826119fc611441565b6001600160a01b03169190611ba4565b604080516001600160a01b0384168152602081018390527fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba910160405180910390a1919050565b42600255611a603361181d565b611a6b60003361186f565b61143e60008261186f565b611a808282610e8b565b610deb57611a8d81611bd4565b611a98836020611be6565b604051602001611aa99291906121cd565b60408051601f198184030181529082905262461bcd60e51b8252610af591600401612242565b6000611b24826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d829092919063ffffffff16565b9050805160001480611b45575080806020019051810190611b459190612097565b610a255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610af5565b6040516001600160a01b038316602482015260448101829052610a2590849063a9059cbb60e01b90606401611912565b60606106206001600160a01b03831660145b60606000611bf583600261201b565b611c00906002612054565b67ffffffffffffffff811115611c1857611c18612275565b6040519080825280601f01601f191660200182016040528015611c42576020820181803683370190505b509050600360fc1b81600081518110611c5d57611c5d61228b565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611c8c57611c8c61228b565b60200101906001600160f81b031916908160001a9053506000611cb084600261201b565b611cbb906001612054565b90505b6001811115611d33576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611cef57611cef61228b565b1a60f81b828281518110611d0557611d0561228b565b60200101906001600160f81b031916908160001a90535060049490941c93611d2c816122a1565b9050611cbe565b5083156116b15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610af5565b6060610b08848460008585600080866001600160a01b03168587604051611da991906122b8565b60006040518083038185875af1925050503d8060008114611de6576040519150601f19603f3d011682016040523d82523d6000602084013e611deb565b606091505b5091509150611dfc87838387611e07565b979650505050505050565b60608315611e76578251600003611e6f576001600160a01b0385163b611e6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610af5565b5081610b08565b610b088383815115611e8b5781518083602001fd5b8060405162461bcd60e51b8152600401610af59190612242565b600060208284031215611eb757600080fd5b81356001600160e01b0319811681146116b157600080fd5b600060208284031215611ee157600080fd5b5035919050565b6001600160a01b038116811461143e57600080fd5b600060208284031215611f0f57600080fd5b81356116b181611ee8565b60008060408385031215611f2d57600080fd5b823591506020830135611f3f81611ee8565b809150509250929050565b60008060008060808587031215611f6057600080fd5b8435611f6b81611ee8565b93506020850135611f7b81611ee8565b93969395505050506040820135916060013590565b60008060008060808587031215611fa657600080fd5b8435611fb181611ee8565b93506020850135611fc181611ee8565b92506040850135611fd181611ee8565b91506060850135611fe181611ee8565b939692955090935050565b600060208284031215611ffe57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761062057610620612005565b60008261204f57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561062057610620612005565b8181038181111561062057610620612005565b60006020828403121561208c57600080fd5b81516116b181611ee8565b6000602082840312156120a957600080fd5b815180151581146116b157600080fd5b600181815b808511156120f45781600019048211156120da576120da612005565b808516156120e757918102915b93841c93908002906120be565b509250929050565b60008261210b57506001610620565b8161211857506000610620565b816001811461212e576002811461213857612154565b6001915050610620565b60ff84111561214957612149612005565b50506001821b610620565b5060208310610133831016604e8410600b8410161715612177575081810a610620565b61218183836120b9565b806000190482111561219557612195612005565b029392505050565b60006116b183836120fc565b60005b838110156121c45781810151838201526020016121ac565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516122058160178501602088016121a9565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516122368160288401602088016121a9565b01602801949350505050565b60208152600082518060208401526122618160408501602087016121a9565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816122b0576122b0612005565b506000190190565b600082516122ca8184602087016121a9565b919091019291505056fea26469706673582212208b1e52d7051e3c30e677f72fc8f1fdc739be1d30dfa56742f49f8ec34406245764736f6c63430008110033",
    "sourceMap": "758:14968:120:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:173;;;;;;:::i;:::-;;:::i;:::-;;;470:14:232;;463:22;445:41;;433:2;418:18;2732:202:173;;;;;;;;11173:106:120;;;:::i;:::-;;;643:25:232;;;631:2;616:18;11173:106:120;497:177:232;9606:130:120;;;;;;:::i;:::-;;:::i;5904:1860::-;;;;;;:::i;:::-;;:::i;:::-;;4504:129:173;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;4929:145;;;;;;:::i;:::-;;:::i;3645:321:120:-;;;;;;:::i;:::-;;:::i;3631:136:1:-;;;;;;:::i;5465:98:120:-;;;:::i;14695:862::-;;;;;;:::i;:::-;;:::i;1166:66::-;;;;;;:::i;:::-;;;;;;;;;;;;;;9788:126;;;;;;:::i;:::-;;:::i;1141:18::-;;;;;;993:27;;;;;-1:-1:-1;;;;;993:27:120;;;;;;-1:-1:-1;;;;;2672:32:232;;;2654:51;;2642:2;2627:18;993:27:120;2488:223:232;10789:92:120;;;:::i;1824:101:175:-;;;:::i;2494:262:1:-;;;;;;:::i;:::-;;:::i;3188:281::-;;;;;;:::i;:::-;;:::i;12415:91:120:-;;;;;;:::i;:::-;;:::i;1201:85:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;1201:85;;8235:191:120;;;:::i;3021:145:173:-;;;;;;:::i;:::-;;:::i;2153:49::-;;2198:4;2153:49;;1350:55:120;;;;;;:::i;:::-;;;;;;;;;;;;;;13001:136;;;:::i;2476:564::-;;;;;;:::i;:::-;;:::i;913:40::-;;949:4;913:40;;1238:50;;;;;;:::i;:::-;;;;;;;;;;;;;;4769:152;;;;;;:::i;:::-;;:::i;9430:122::-;;;;;;:::i;:::-;;:::i;8908:291::-;;;:::i;1109:26::-;;;;;-1:-1:-1;;;;;1109:26:120;;;10210:106;;;:::i;12512:77::-;12579:3;;12512:77;;1027:31;;;;;-1:-1:-1;;;;;1027:31:120;;;12303:106;;;;;;:::i;:::-;;:::i;5354:147:173:-;;;;;;:::i;:::-;;:::i;4636:127:120:-;;;:::i;1294:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;11627:108;;;;;;:::i;:::-;;:::i;13243:103::-;;;:::i;9252:128::-;;;;;;:::i;:::-;;:::i;960:27::-;;;;;-1:-1:-1;;;;;960:27:120;;;2074:198:175;;;;;;:::i;:::-;;:::i;1064:39:120:-;;;;;;13143:94;;;:::i;1412:566::-;;;;;;:::i;:::-;;:::i;2732:202:173:-;2817:4;-1:-1:-1;;;;;;2840:47:173;;-1:-1:-1;;;2840:47:173;;:87;;-1:-1:-1;;;;;;;;;;937:40:208;;;2891:36:173;2833:94;2732:202;-1:-1:-1;;2732:202:173:o;11173:106:120:-;11245:11;;:27;;;-1:-1:-1;;;11245:27:120;;;;11219:7;;-1:-1:-1;;;;;11245:11:120;;:25;;:27;;;;;;;;;;;;;;:11;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11238:34;;11173:106;:::o;9606:130::-;9696:9;;:33;;-1:-1:-1;;;9696:33:120;;;;;643:25:232;;;9670:7:120;;-1:-1:-1;;;;;9696:9:120;;:25;;616:18:232;;9696:33:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5904:1860::-;6012:11;;5993:44;;;-1:-1:-1;;;5993:44:120;;;;5971:19;;-1:-1:-1;;;;;6012:11:120;;5993:42;;:44;;;;;;;;;;;;;;5971:19;6012:11;5993:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5971:66;;6047:14;6064:9;;;;;;;;;-1:-1:-1;;;;;6064:9:120;-1:-1:-1;;;;;6064:21:120;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6133:24;;6047:40;;-1:-1:-1;6172:10:120;;;;;:29;;;6200:1;6186:11;:15;6172:29;6168:332;;;6349:6;6306:23;949:4;6306:11;:23;:::i;:::-;6305:50;;;;:::i;:::-;6261:94;;:25;:94;:::i;:::-;6370:24;:52;;;6442:47;;;5349:25:232;;;5405:2;5390:18;;5383:34;;;6370:52:120;;-1:-1:-1;6442:47:120;;5322:18:232;6442:47:120;;;;;;;6168:332;6514:25;6543:1;6514:30;6510:67;;6560:7;;;5904:1860;:::o;6510:67::-;-1:-1:-1;;;;;6591:22:120;;;6587:1171;;6629:20;6652:23;6666:8;6652:13;:23::i;:::-;-1:-1:-1;;;;;6794:41:120;;6689:21;6794:41;;;:31;:41;;;;;;6629:46;;-1:-1:-1;6689:21:120;949:4;;6746:89;;:25;:89;:::i;:::-;6714:122;;:12;:122;:::i;:::-;6713:136;;;;:::i;:::-;-1:-1:-1;;;;;6891:25:120;;6864:24;6891:25;;;:15;:25;;;;;;6689:160;;-1:-1:-1;6864:24:120;6891:57;;6689:160;;6891:57;:::i;:::-;-1:-1:-1;;;;;6963:25:120;;;;;;:15;:25;;;;;;;;:44;;;7021:31;:71;;;;;:99;;;6864:84;-1:-1:-1;7139:20:120;;;;;:51;;;7189:1;7163:23;7177:8;7163:13;:23::i;:::-;:27;7139:51;7135:613;;;-1:-1:-1;;;;;7241:25:120;;7210:28;7241:25;;;:15;:25;;;;;;:61;;7289:13;;7241:61;:::i;:::-;7210:92;-1:-1:-1;7354:313:120;7534:111;7210:92;7534:31;:12;7551:13;7534:16;:31::i;:::-;:35;;:111::i;:::-;-1:-1:-1;;;;;7410:25:120;;;;;;:15;:25;;;;;;;;;7354:20;:30;;;;;;;:129;;7462:20;;7354:82;;:55;:82::i;:129::-;:154;;:313::i;:::-;-1:-1:-1;;;;;7321:30:120;;;;;;:20;:30;;;;;;;;:346;;;;7685:15;:25;;;:48;7135:613;6615:1143;;;6587:1171;5961:1803;;;5904:1860;:::o;4929:145:173:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;3645:321:120:-;3792:16;2261:21:187;:19;:21::i;:::-;3820:34:120::1;3843:10;3820:22;:34::i;:::-;3880:28;::::0;-1:-1:-1;;;3880:28:120;;::::1;::::0;::::1;5763:25:232::0;;;-1:-1:-1;;;;;5862:15:232;;;5842:18;;;5835:43;;;5894:18;;;5887:43;3912:12:120;;3880;;::::1;::::0;::::1;::::0;5736:18:232;;3880:28:120::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3869:39;;;3868:56;3864:95;;;3938:21;::::0;-1:-1:-1;;;3938:21:120;;6143:2:232;3938:21:120::1;::::0;::::1;6125::232::0;6182:2;6162:18;;;6155:30;-1:-1:-1;;;6201:18:232;;;6194:41;6252:18;;3938:21:120::1;;;;;;;;3864:95;2303:20:187::0;1716:1;2809:7;:22;2629:209;2303:20;3645:321:120;;;;;;:::o;5465:98::-;2261:21:187;:19;:21::i;:::-;5522:34:120::1;5553:1;5522:22;:34::i;:::-;2303:20:187::0;1716:1;2809:7;:22;2629:209;2303:20;5465:98:120:o;14695:862::-;14753:7;14772:20;14795:23;14809:8;14795:13;:23::i;:::-;14772:46;;14832:12;14848:1;14832:17;14828:80;;-1:-1:-1;;;;;;;14872:25:120;;;;;:15;:25;;;;;;;14695:862::o;14828:80::-;14934:9;;:23;;;-1:-1:-1;;;14934:23:120;;;;14917:14;;-1:-1:-1;;;;;14934:9:120;;:21;;:23;;;;;;;;;;;;;;:9;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14917:40;;14967:23;14993:89;949:4;15012:11;;;;;;;;;-1:-1:-1;;;;;15012:11:120;-1:-1:-1;;;;;14993:59:120;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;:89::i;:::-;14967:115;-1:-1:-1;15092:36:120;15131:79;15173:27;14967:115;15193:6;15173:19;:27::i;:::-;15131:24;;;:28;:79::i;:::-;-1:-1:-1;;;;;15411:41:120;;;;;;:31;:41;;;;;;15092:118;;-1:-1:-1;15239:311:120;;15286:250;;949:4;;15286:214;;15349:129;;15092:118;;15349:32;:129::i;:::-;15286:12;;:37;:214::i;:250::-;-1:-1:-1;;;;;15239:25:120;;;;;;:15;:25;;;;;;;:29;:311::i;:::-;15220:330;14695:862;-1:-1:-1;;;;;;14695:862:120:o;9788:126::-;9876:9;;:31;;-1:-1:-1;;;9876:31:120;;;;;643:25:232;;;9850:7:120;;-1:-1:-1;;;;;9876:9:120;;:23;;616:18:232;;9876:31:120;497:177:232;10789:92:120;10854:11;;:20;;;-1:-1:-1;;;10854:20:120;;;;10828:7;;-1:-1:-1;;;;;10854:11:120;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;;;;;;;;;;;;1824:101:175;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;2494:262:1:-:0;2198:4:173;2631:16;2198:4;2631:10;:16::i;:::-;-1:-1:-1;;;;;2585:16:1;::::1;2577:42;;;::::0;-1:-1:-1;;;2577:42:1;;6483:2:232;2577:42:1::1;::::0;::::1;6465:21:232::0;6522:2;6502:18;;;6495:30;-1:-1:-1;;;6541:18:232;;;6534:43;6594:18;;2577:42:1::1;6281:337:232::0;2577:42:1::1;2630:34;2198:4:173;2661:2:1::0;2630:10:::1;:34::i;:::-;2674:22;2693:2;2674:18;:22::i;:::-;2706:43;2198:4:173;2738:10:1;2706:11;:43::i;:::-;2494:262:::0;;:::o;3188:281::-;1116:28;2631:16:173;2642:4;2631:10;:16::i;12415:91:120:-;1420:27:1;2631:16:173;2642:4;2631:10;:16::i;:::-;-1:-1:-1;12489:3:120::1;:10:::0;12415:91::o;8235:191::-;8318:10;8279:7;8302:27;;;:15;:27;;;;;;:32;;8298:46;;-1:-1:-1;8343:1:120;;8235:191::o;8298:46::-;8408:10;8392:27;;;;:15;:27;;;;;;;;;8362:15;:27;;;;;;;:57;;8392:27;8362:57;:::i;3021:145:173:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:173;;;;;;;;;;;;;;;3021:145::o;13001:136:120:-;13098:11;;13079:51;;;-1:-1:-1;;;13079:51:120;;;;13053:7;;-1:-1:-1;;;;;13098:11:120;;13079:49;;:51;;;;;;;;;;;;;;13098:11;13079:51;;;;;;;;;;;;;;2476:564;2622:17;2261:21:187;:19;:21::i;:::-;2651:34:120::1;2674:10;2651:22;:34::i;:::-;2695:14;2712:5;-1:-1:-1::0;;;;;2712:11:120::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2695:30;;2736:135;2783:6;2804:10;2836:4;2855:6;2736:26;:135::i;:::-;2881:46;::::0;-1:-1:-1;;;2881:46:120;;-1:-1:-1;;;;;7071:32:232;;;2881:46:120::1;::::0;::::1;7053:51:232::0;7120:18;;;7113:34;;;2881:22:120;::::1;::::0;::::1;::::0;7026:18:232;;2881:46:120::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2954:25:120::1;::::0;-1:-1:-1;;;2954:25:120;;::::1;::::0;::::1;7614::232::0;;;-1:-1:-1;;;;;7675:32:232;;;7655:18;;;7648:60;2983:12:120;;2954:13;;::::1;::::0;::::1;::::0;7587:18:232;;2954:25:120::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2942:37;;;2941:54;2937:96;;;3009:24;::::0;-1:-1:-1;;;3009:24:120;;7921:2:232;3009:24:120::1;::::0;::::1;7903:21:232::0;7960:2;7940:18;;;7933:30;-1:-1:-1;;;7979:18:232;;;7972:44;8033:18;;3009:24:120::1;7719:338:232::0;2937:96:120::1;2641:399;2303:20:187::0;1716:1;2809:7;:22;2629:209;4769:152:120;4858:19;3051:27:1;460:28;3051:10;:27::i;:::-;4889:25:120::1;4906:7;4889:16;:25::i;:::-;;4769:152:::0;;;:::o;9430:122::-;9516:9;;:29;;-1:-1:-1;;;9516:29:120;;;;;643:25:232;;;9490:7:120;;-1:-1:-1;;;;;9516:9:120;;:21;;616:18:232;;9516:29:120;497:177:232;8908:291:120;8951:7;8970:14;8987:9;;;;;;;;;-1:-1:-1;;;;;8987:9:120;-1:-1:-1;;;;;8987:21:120;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8970:40;;9020:14;9037:9;;;;;;;;;-1:-1:-1;;;;;9037:9:120;-1:-1:-1;;;;;9037:21:120;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9020:40;-1:-1:-1;9074:11:120;;;:26;;-1:-1:-1;9089:11:120;;9074:26;9070:64;;;9119:15;:13;:15::i;:::-;9113:21;;:2;:21;:::i;:::-;9109:25;;:1;:25;:::i;:::-;9102:32;;;;8908:291;:::o;9070:64::-;9186:6;9167:15;:13;:15::i;:::-;9161:21;;:2;:21;:::i;:::-;9152:30;;:6;:30;:::i;:::-;9151:41;;;;:::i;10210:106::-;10282:11;;:27;;;-1:-1:-1;;;10282:27:120;;;;10256:7;;-1:-1:-1;;;;;10282:11:120;;:25;;:27;;;;;;;;;;;;;;:11;:27;;;;;;;;;;;;;;12303:106;12360:7;12386:5;-1:-1:-1;;;;;12386:14:120;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5354:147:173;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;4636:127:120:-:0;4690:19;2261:21:187;:19;:21::i;:::-;4728:28:120::1;4745:10;4728:16;:28::i;:::-;4721:35;;2303:20:187::0;1716:1;2809:7;:22;2629:209;2303:20;4636:127:120;:::o;11627:108::-;11685:7;11711:5;-1:-1:-1;;;;;11711:15:120;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13243:103;13292:7;13318:21;13328:10;13318:9;:21::i;9252:128::-;9341:9;;:32;;-1:-1:-1;;;9341:32:120;;;;;643:25:232;;;9315:7:120;;-1:-1:-1;;;;;9341:9:120;;:24;;616:18:232;;9341:32:120;497:177:232;2074:198:175;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:175;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:175;;9638:2:232;2154:73:175::1;::::0;::::1;9620:21:232::0;9677:2;9657:18;;;9650:30;9716:34;9696:18;;;9689:62;-1:-1:-1;;;9767:18:232;;;9760:36;9813:19;;2154:73:175::1;9436:402:232::0;2154:73:175::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;13143:94:120:-;13213:9;;:17;;;-1:-1:-1;;;13213:17:120;;;;13187:7;;-1:-1:-1;;;;;13213:9:120;;:15;;:17;;;;;;;;;;;;;;:9;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1412:566::-;3302:13:163;;-1:-1:-1;;;3302:13:163;;;;3301:14;;3347:34;;;;-1:-1:-1;3380:1:163;3365:12;;-1:-1:-1;;;3365:12:163;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:163;1713:19:166;:23;;;3387:66:163;;-1:-1:-1;3436:12:163;;;-1:-1:-1;;;3436:12:163;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:163;;10045:2:232;3325:201:163;;;10027:21:232;10084:2;10064:18;;;10057:30;10123:34;10103:18;;;10096:62;-1:-1:-1;;;10174:18:232;;;10167:44;10228:19;;3325:201:163;9843:410:232;3325:201:163;3551:1;3536:16;;-1:-1:-1;;;;3536:16:163;-1:-1:-1;;;3536:16:163;;;3562:65;;;;3612:4;3596:20;;-1:-1:-1;;;;3596:20:163;-1:-1:-1;;;3596:20:163;;;3562:65;-1:-1:-1;;;;;1593:24:120;::::1;1585:33;;;::::0;::::1;;-1:-1:-1::0;;;;;1636:26:120;::::1;1628:35;;;::::0;::::1;;-1:-1:-1::0;;;;;1681:24:120;::::1;1673:33;;;::::0;::::1;;-1:-1:-1::0;;;;;1724:26:120;::::1;1716:35;;;::::0;::::1;;1761:36;1786:10;1761:24;:36::i;:::-;1807:11;:40:::0;;-1:-1:-1;;;;;1807:40:120;;::::1;-1:-1:-1::0;;;;;;1807:40:120;;::::1;;::::0;;;1857:9:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;1901:9:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;1945:11:::1;:26:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3647:99:163;;;;3681:13;:21;;-1:-1:-1;;;;3681:21:163;;;3721:14;;10410:36:232;;;3721:14:163;;10398:2:232;10383:18;3721:14:163;;;;;;;3647:99;3269:483;1412:566:120;;;;:::o;15563:125::-;15652:9;;:29;;-1:-1:-1;;;15652:29:120;;-1:-1:-1;;;;;2672:32:232;;;15652:29:120;;;2654:51:232;15626:7:120;;15652:9;;:19;;2627:18:232;;15652:29:120;2488:223:232;3465:96:212;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:212:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;3460:103:173:-;3526:30;3537:4;719:10:201;3526::173;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:173;;;;;;;;;:36;;-1:-1:-1;;7708:36:173;7740:4;7708:36;;;7790:12;719:10:201;;640:96;7790:12:173;-1:-1:-1;;;;;7763:40:173;7781:7;-1:-1:-1;;;;;7763:40:173;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;2336:287:187:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:187;;10659:2:232;2460:63:187;;;10641:21:232;10698:2;10678:18;;;10671:30;10737:33;10717:18;;;10710:61;10788:18;;2460:63:187;10457:355:232;2460:63:187;1759:1;2598:7;:18;2336:287::o;3122:96:212:-;3180:7;3206:5;3210:1;3206;:5;:::i;1359:130:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;719:10:201;1422:23:175;1414:68;;;;-1:-1:-1;;;1414:68:175;;11019:2:232;1414:68:175;;;11001:21:232;;;11038:18;;;11031:30;11097:34;11077:18;;;11070:62;11149:18;;1414:68:175;10817:356:232;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;6937:110:173:-;7015:25;7026:4;7032:7;7015:10;:25::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:173;;;;;;;;;;:37;;-1:-1:-1;;8112:37:173;;;8168:40;719:10:201;;8112:12:173;;8168:40;;8144:5;8168:40;7991:234;;:::o;1355:203:196:-;1482:68;;-1:-1:-1;;;;;11436:15:232;;;1482:68:196;;;11418:34:232;11488:15;;11468:18;;;11461:43;11520:18;;;11513:34;;;1455:96:196;;1475:5;;-1:-1:-1;;;1505:27:196;11353:18:232;;1482:68:196;;;;-1:-1:-1;;1482:68:196;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:196;-1:-1:-1;;;;;;1482:68:196;;;;;;;;;;1455:19;:96::i;4927:403:120:-;5037:9;;:29;;-1:-1:-1;;;5037:29:120;;-1:-1:-1;;;;;2672:32:232;;;5037:29:120;;;2654:51:232;5002:19:120;;;;5037:9;;;:19;;2627:18:232;;5037:29:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;5033:48;;-1:-1:-1;5080:1:120;;4927:403;-1:-1:-1;4927:403:120:o;5033:48::-;5091:32;5114:8;5091:22;:32::i;:::-;-1:-1:-1;;;;;;5147:25:120;;;;;;:15;:25;;;;;;;5182:29;;;5221:57;5163:8;5147:25;5228:13;:11;:13::i;:::-;-1:-1:-1;;;;;5221:34:120;;:57;:34;:57::i;:::-;5293:30;;;-1:-1:-1;;;;;7071:32:232;;7053:51;;7135:2;7120:18;;7113:34;;;5293:30:120;;7026:18:232;5293:30:120;;;;;;;4927:403;;;:::o;2263:225:1:-;2327:15;2315:9;:27;2352:32;719:10:201;2352:18:1;:32::i;:::-;2395:42;2198:4:173;2426:10:1;2395;:42::i;:::-;2447:34;2198:4:173;2478:2:1;2447:10;:34::i;3844:479:173:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:173;;;;;;;;;;-1:-1:-1;;;3970:336:173;;;;;;;:::i;5196:642:196:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:196;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:196;;13233:2:232;5720:111:196;;;13215:21:232;13272:2;13252:18;;;13245:30;13311:34;13291:18;;;13284:62;-1:-1:-1;;;13362:18:232;;;13355:40;13412:19;;5720:111:196;13031:406:232;941:175:196;1050:58;;-1:-1:-1;;;;;7071:32:232;;1050:58:196;;;7053:51:232;7120:18;;;7113:34;;;1023:86:196;;1043:5;;-1:-1:-1;;;1073:23:196;7026:18:232;;1050:58:196;6879:274:232;2407:149:205;2465:13;2497:52;-1:-1:-1;;;;;2509:22:205;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:205;;1918:47;;-1:-1:-1;;;1975:6:205;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:205;;;;;;;;;-1:-1:-1;;;2000:6:205;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:205;;;;;;;;-1:-1:-1;2030:9:205;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:205;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:205;;;;;;;;-1:-1:-1;2141:1:205;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:205;;2162:55;;;;-1:-1:-1;;;2162:55:205;;14049:2:232;2162:55:205;;;14031:21:232;;;14068:18;;;14061:30;14127:34;14107:18;;;14100:62;14179:18;;2162:55:205;13847:356:232;4108:223:200;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:200;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:200:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:166;;;8113:60:200;;;;-1:-1:-1;;;8113:60:200;;15109:2:232;8113:60:200;;;15091:21:232;15148:2;15128:18;;;15121:30;15187:31;15167:18;;;15160:59;15236:18;;8113:60:200;14907:353:232;8113:60:200;-1:-1:-1;8208:10:200;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:200;;;;;;;;:::i;14:286:232:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:232;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:232;;679:180;-1:-1:-1;679:180:232:o;864:131::-;-1:-1:-1;;;;;939:31:232;;929:42;;919:70;;985:1;982;975:12;1000:247;1059:6;1112:2;1100:9;1091:7;1087:23;1083:32;1080:52;;;1128:1;1125;1118:12;1080:52;1167:9;1154:23;1186:31;1211:5;1186:31;:::i;1619:315::-;1687:6;1695;1748:2;1736:9;1727:7;1723:23;1719:32;1716:52;;;1764:1;1761;1754:12;1716:52;1800:9;1787:23;1777:33;;1860:2;1849:9;1845:18;1832:32;1873:31;1898:5;1873:31;:::i;:::-;1923:5;1913:15;;;1619:315;;;;;:::o;1939:544::-;2044:6;2052;2060;2068;2121:3;2109:9;2100:7;2096:23;2092:33;2089:53;;;2138:1;2135;2128:12;2089:53;2177:9;2164:23;2196:31;2221:5;2196:31;:::i;:::-;2246:5;-1:-1:-1;2303:2:232;2288:18;;2275:32;2316:33;2275:32;2316:33;:::i;:::-;1939:544;;2368:7;;-1:-1:-1;;;;2422:2:232;2407:18;;2394:32;;2473:2;2458:18;2445:32;;1939:544::o;3653:671::-;3739:6;3747;3755;3763;3816:3;3804:9;3795:7;3791:23;3787:33;3784:53;;;3833:1;3830;3823:12;3784:53;3872:9;3859:23;3891:31;3916:5;3891:31;:::i;:::-;3941:5;-1:-1:-1;3998:2:232;3983:18;;3970:32;4011:33;3970:32;4011:33;:::i;:::-;4063:7;-1:-1:-1;4122:2:232;4107:18;;4094:32;4135:33;4094:32;4135:33;:::i;:::-;4187:7;-1:-1:-1;4246:2:232;4231:18;;4218:32;4259:33;4218:32;4259:33;:::i;:::-;3653:671;;;;-1:-1:-1;3653:671:232;;-1:-1:-1;;3653:671:232:o;4329:184::-;4399:6;4452:2;4440:9;4431:7;4427:23;4423:32;4420:52;;;4468:1;4465;4458:12;4420:52;-1:-1:-1;4491:16:232;;4329:184;-1:-1:-1;4329:184:232:o;4518:127::-;4579:10;4574:3;4570:20;4567:1;4560:31;4610:4;4607:1;4600:15;4634:4;4631:1;4624:15;4650:168;4723:9;;;4754;;4771:15;;;4765:22;;4751:37;4741:71;;4792:18;;:::i;4823:217::-;4863:1;4889;4879:132;;4933:10;4928:3;4924:20;4921:1;4914:31;4968:4;4965:1;4958:15;4996:4;4993:1;4986:15;4879:132;-1:-1:-1;5025:9:232;;4823:217::o;5045:125::-;5110:9;;;5131:10;;;5128:36;;;5144:18;;:::i;5428:128::-;5495:9;;;5516:11;;;5513:37;;;5530:18;;:::i;6623:251::-;6693:6;6746:2;6734:9;6725:7;6721:23;6717:32;6714:52;;;6762:1;6759;6752:12;6714:52;6794:9;6788:16;6813:31;6838:5;6813:31;:::i;7158:277::-;7225:6;7278:2;7266:9;7257:7;7253:23;7249:32;7246:52;;;7294:1;7291;7284:12;7246:52;7326:9;7320:16;7379:5;7372:13;7365:21;7358:5;7355:32;7345:60;;7401:1;7398;7391:12;8062:422;8151:1;8194:5;8151:1;8208:270;8229:7;8219:8;8216:21;8208:270;;;8288:4;8284:1;8280:6;8276:17;8270:4;8267:27;8264:53;;;8297:18;;:::i;:::-;8347:7;8337:8;8333:22;8330:55;;;8367:16;;;;8330:55;8446:22;;;;8406:15;;;;8208:270;;;8212:3;8062:422;;;;;:::o;8489:806::-;8538:5;8568:8;8558:80;;-1:-1:-1;8609:1:232;8623:5;;8558:80;8657:4;8647:76;;-1:-1:-1;8694:1:232;8708:5;;8647:76;8739:4;8757:1;8752:59;;;;8825:1;8820:130;;;;8732:218;;8752:59;8782:1;8773:10;;8796:5;;;8820:130;8857:3;8847:8;8844:17;8841:43;;;8864:18;;:::i;:::-;-1:-1:-1;;8920:1:232;8906:16;;8935:5;;8732:218;;9034:2;9024:8;9021:16;9015:3;9009:4;9006:13;9002:36;8996:2;8986:8;8983:16;8978:2;8972:4;8969:12;8965:35;8962:77;8959:159;;;-1:-1:-1;9071:19:232;;;9103:5;;8959:159;9150:34;9175:8;9169:4;9150:34;:::i;:::-;9220:6;9216:1;9212:6;9208:19;9199:7;9196:32;9193:58;;;9231:18;;:::i;:::-;9269:20;;8489:806;-1:-1:-1;;;8489:806:232:o;9300:131::-;9360:5;9389:36;9416:8;9410:4;9389:36;:::i;11558:250::-;11643:1;11653:113;11667:6;11664:1;11661:13;11653:113;;;11743:11;;;11737:18;11724:11;;;11717:39;11689:2;11682:10;11653:113;;;-1:-1:-1;;11800:1:232;11782:16;;11775:27;11558:250::o;11813:812::-;12224:25;12219:3;12212:38;12194:3;12279:6;12273:13;12295:75;12363:6;12358:2;12353:3;12349:12;12342:4;12334:6;12330:17;12295:75;:::i;:::-;-1:-1:-1;;;12429:2:232;12389:16;;;12421:11;;;12414:40;12479:13;;12501:76;12479:13;12563:2;12555:11;;12548:4;12536:17;;12501:76;:::i;:::-;12597:17;12616:2;12593:26;;11813:812;-1:-1:-1;;;;11813:812:232:o;12630:396::-;12779:2;12768:9;12761:21;12742:4;12811:6;12805:13;12854:6;12849:2;12838:9;12834:18;12827:34;12870:79;12942:6;12937:2;12926:9;12922:18;12917:2;12909:6;12905:15;12870:79;:::i;:::-;13010:2;12989:15;-1:-1:-1;;12985:29:232;12970:45;;;;13017:2;12966:54;;12630:396;-1:-1:-1;;12630:396:232:o;13442:127::-;13503:10;13498:3;13494:20;13491:1;13484:31;13534:4;13531:1;13524:15;13558:4;13555:1;13548:15;13574:127;13635:10;13630:3;13626:20;13623:1;13616:31;13666:4;13663:1;13656:15;13690:4;13687:1;13680:15;13706:136;13745:3;13773:5;13763:39;;13782:18;;:::i;:::-;-1:-1:-1;;;13818:18:232;;13706:136::o;14615:287::-;14744:3;14782:6;14776:13;14798:66;14857:6;14852:3;14845:4;14837:6;14833:17;14798:66;:::i;:::-;14880:16;;;;;14615:287;-1:-1:-1;;14615:287:232:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "PRECISION()": "aaf5eb68",
    "apr()": "57ded9c9",
    "averageStakedAmounts(address)": "a3180217",
    "buy(address,address,uint256,uint256)": "a9d424e2",
    "buyLpFee(address)": "d53b26ee",
    "claimForAccount(address)": "afd6a5cc",
    "claimLPReward()": "e547bb91",
    "claimable(address)": "402914f5",
    "claimableReward(address)": "e9503425",
    "coreVault()": "674ce1b5",
    "cumulativeRewardPerToken()": "f5fc5076",
    "distributor()": "bfe10928",
    "feeRouter()": "f29ebf61",
    "getAPR()": "c89d5b8b",
    "getAUM()": "6dc7b0a1",
    "getLPPrice()": "b77905ae",
    "getLPReward()": "8f089d65",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getUSDBalance()": "c1201054",
    "grantControllerRoleByMarketManager(address)": "7fe4a698",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address,address,address)": "f8c8765e",
    "lpEarnedRewards(address)": "ae8bcdf8",
    "owner()": "8da5cb5b",
    "pendingRewards()": "eded3fda",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "previousCumulatedRewardPerToken(address)": "44a08411",
    "priceDecimals()": "05300b28",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardToken()": "f7c618c1",
    "sell(address,address,uint256,uint256)": "31de7d15",
    "sellLpFee(address)": "eb4fe818",
    "setAPR(uint256)": "854303cf",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokensPerInterval()": "a8d93627",
    "transferAdmin(address)": "75829def",
    "transferOwnership(address)": "f2fde38b",
    "updateRewards()": "3e158b0c",
    "updateRewardsByAccount(address)": "1ee2b0b2",
    "vaultRouter()": "d37c441c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cumulativeRewardPerToken\",\"type\":\"uint256\"}],\"name\":\"LogUpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"averageStakedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSharesOut\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"buyLpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"claimForAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimLPReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimableReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coreVault\",\"outputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeRewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRouter\",\"outputs\":[{\"internalType\":\"contract IFeeRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"grantControllerRoleByMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vaultRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpEarnedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"previousCumulatedRewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAssetsOut\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"sellLpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"}],\"name\":\"setAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"updateRewardsByAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRouter\",\"outputs\":[{\"internalType\":\"contract IVaultRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buy(address,address,uint256,uint256)\":{\"details\":\"This function is used to buy shares in a vault using an ERC20 asset as payment.\",\"params\":{\"amount\":\"The amount of ERC20 tokens to use for purchasing the shares.\",\"minSharesOut\":\"The minimum number of shares that the buyer expects to receive for their payment.\",\"to\":\"The address where the purchased shares will be sent.\",\"vault\":\"The address of the vault.\"},\"returns\":{\"sharesOut\":\"The actual number of shares purchased by the buyer.\"}},\"buyLpFee(address)\":{\"details\":\"This function is part of an interface and is used to retrieve the fee required to buy LP tokens in a market. The function takes in a `CoreVault` parameter representing the CoreVault contract of the market being queried. The function calls the `buyLpFee` function of the `vault` parameter, which returns the fee required to buy LP tokens in the market as a `uint256`.\",\"params\":{\"vault\":\"The `CoreVault` contract of the market being queried.\"},\"returns\":{\"_0\":\"The fee required to buy LP tokens in the market as a `uint256`.\"}},\"claimLPReward()\":{\"details\":\"This function allows an LP (liquidity provider) to claim their rewards in the current market. The function first checks that the LP has a non-zero balance in the CoreVault contract. If the LP has a non-zero balance, the function calls the `pendingRewards` function to calculate the amount of rewards the LP is entitled to. The LP's earned rewards are then stored in the `lpEarnedRewards` mapping. Finally, the `transferFromVault` function of the `vaultRouter` contract is called to transfer the rewards from the market's vault to the LP's account.\"},\"claimable(address)\":{\"details\":\"This function is used to retrieve the amount of rewards claimable by a user in a market. The function calculates the amount of claimable rewards by first retrieving the user's staked amount in the market from the `stakedAmounts` mapping. If the user has no stake, the function returns the previously claimed reward amount stored in the `claimableReward` mapping. Otherwise, the function retrieves the total supply of LP tokens in the market from the `coreVault` contract and the total pending rewards from the `IRewardDistributor` contract. The pending rewards are then multiplied by the `PRECISION` constant and added to the `cumulativeRewardPerToken` variable to calculate the next cumulative reward per token value. The difference between the new cumulative reward per token value and the previous one stored in the `previousCumulatedRewardPerToken` mapping for the user is multiplied by the user's staked amount and divided by the `PRECISION` constant to calculate the claimable reward amount. Finally, the function returns the sum of the user's previously claimed reward amount and the newly calculated claimable reward amount.\",\"params\":{\"_account\":\"The user's account address.\"},\"returns\":{\"_0\":\"The amount of rewards claimable by the user in the market as a `uint256`.\"}},\"getAUM()\":{\"details\":\"This function allows anyone to retrieve the current assets under management (AUM) of the market. The function calls the `getAUM` function of the `vaultRouter` contract, which returns the current AUM of the market as a `uint256`. The AUM represents the total value of assets held in the market, including both the LP tokens and any other tokens held by the market.\",\"returns\":{\"_0\":\"The current AUM of the market as a `uint256`.\"}},\"getLPPrice()\":{\"details\":\"This function allows anyone to retrieve the current price of LP tokens in the current market. The function calls the `getLPPrice` function of the `vaultRouter` contract, passing in the address of the `coreVault` contract. The `getLPPrice` function returns the current price of LP tokens in the market, which is then returned by this function as a `uint256`.\",\"returns\":{\"_0\":\"The current price of LP tokens in the market as a `uint256`.\"}},\"getLPReward()\":{\"details\":\"This function allows an LP (liquidity provider) to view the amount of rewards they have earned in the current market. The function uses the `msg.sender` parameter to look up the earned rewards for the calling account in the `lpEarnedRewards` mapping. The function returns the amount of rewards earned by the calling account as a `uint256`.\",\"returns\":{\"_0\":\"The amount of rewards earned by the calling account as a `uint256`.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUSDBalance()\":{\"details\":\"This function retrieves the USD balance of the contract calling the function, by calling the getUSDBalance function of the vaultRouter contract. It does not take any parameters.\",\"returns\":{\"_0\":\"balance The USD balance of the contract calling the function.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"priceDecimals()\":{\"details\":\"This function retrieves the number of decimal places used for price values by calling the priceDecimals function of the vaultRouter contract. It does not take any parameters.\",\"returns\":{\"_0\":\"decimals The number of decimal places used for price values.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"sell(address,address,uint256,uint256)\":{\"details\":\"This function sells a specified amount of shares in a given vault on behalf of the caller using the `vaultReward` contract. The `to` address receives the resulting assets of the sale.\",\"params\":{\"minAssetsOut\":\"The minimum amount of assets the caller expects to receive from the sale.\",\"shares\":\"The amount of shares to sell.\",\"to\":\"The address that receives the resulting shares of the sale.\",\"vault\":\"The address of the vault to sell assets from.\"},\"returns\":{\"assetOut\":\"The resulting number of shares received by the `to` address.\"}},\"sellLpFee(address)\":{\"details\":\"This function retrieves the sell LP fee of a CoreVault contract, by calling the sellLpFee function of the specified CoreVault contract passed as a parameter.\",\"params\":{\"vault\":\"The CoreVault contract from which the sell LP fee is retrieved.\"},\"returns\":{\"_0\":\"fee The sell LP fee of the specified CoreVault contract.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokensPerInterval()\":{\"details\":\"This function is used to retrieve the number of reward tokens distributed per interval in a market. The function calls the `tokensPerInterval` function of the `IRewardDistributor` contract, which returns the number of reward tokens distributed per interval as a `uint256`.\",\"returns\":{\"_0\":\"The number of reward tokens distributed per interval in the market as a `uint256`.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRewards()\":{\"details\":\"This function is used to update rewards.\"},\"updateRewardsByAccount(address)\":{\"details\":\"This function is used to update rewards.\",\"params\":{\"_account\":\"needs to update the account address for rewards. If it is 0, the rewards for all accounts will be updated.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateRewards()\":{\"notice\":\"function can only be called without reentry.\"},\"updateRewardsByAccount(address)\":{\"notice\":\"function can only be called without reentry.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/VaultReward.sol\":\"VaultReward\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-create2-deployer/=node_modules/solidity-create2-deployer/\"]},\"sources\":{\"contracts/ac/AcUpgradable.sol\":{\"keccak256\":\"0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c\",\"dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV\"]},\"contracts/fee/interfaces/IFeeRouter.sol\":{\"keccak256\":\"0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb\",\"dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA\"]},\"contracts/market/MarketDataTypes.sol\":{\"keccak256\":\"0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363\",\"dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf\"]},\"contracts/order/OrderLib.sol\":{\"keccak256\":\"0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9\",\"dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR\"]},\"contracts/order/OrderStruct.sol\":{\"keccak256\":\"0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2\",\"dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty\"]},\"contracts/position/PositionStruct.sol\":{\"keccak256\":\"0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415\",\"dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW\"]},\"contracts/position/interfaces/IPositionBook.sol\":{\"keccak256\":\"0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d\",\"dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ\"]},\"contracts/vault/VaultReward.sol\":{\"keccak256\":\"0x6fa48e5bc5f5bf35fc3589ec309b3d2a9a2ebb1d60ae98c59dbaaa61aba649e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3197c94e2031be040c7baa5601057709642ffc10e5733fda1a85c9430277cd0c\",\"dweb:/ipfs/QmQio8uk76w4k7FYqHib7CqAHY5cwrTtK77RjvPGNEMdPG\"]},\"contracts/vault/interfaces/ICoreVault.sol\":{\"keccak256\":\"0x152b38fe84e5fcdf6f9e2973894a6a44e54c702d348452d2b03a81c88e2967b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c3da45a08744f27d2cdfb0adfb4ec45a8ecf5fea46ae07d71efe96f35dbe771\",\"dweb:/ipfs/QmdQdu7LWLYKfxMgeDMPQV7P55DxJT4d4NG58k96ELg4RL\"]},\"contracts/vault/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0xc440fa14323434ff42c2cafe00a4c4ec64ed8751d4b63db4c2d2b53c5aa00ffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bc7a518d1ad29e7c3de5a41411e82315b65171001f26dbd8892cab72e6cf19d\",\"dweb:/ipfs/QmUnHmMR2JyrdcguWoVkq7Atg5AKmzFqcrzazB21eXZnGL\"]},\"contracts/vault/interfaces/IVaultRouter.sol\":{\"keccak256\":\"0xb6d28f99caf73a56558a174895a66049e8bd1db407e412a3bec1d530f84332eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a1ff56d4145e696dd3d904edc21d204061236a035e8fda806e5cc3509034589\",\"dweb:/ipfs/QmVrXmMEdvCrkESZRkoV9kNC87tA6W6hu29J7jpa5RoWir\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3\",\"dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xa0ebd2a1608780392e5bc8805079b1a1961ebd73128ee23ab7149e7f6904fa53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7767ecfd8f8c30fb97fe2dc3b63e96f4593e458551c44e901a3acd4ed930d32c\",\"dweb:/ipfs/QmPJDWJBrzeCee7PqrixFwuCYhsEnFXcQqV6Z6FFdJSNpd\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Harvest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "cumulativeRewardPerToken",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogUpdatePool",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "apr",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "averageStakedAmounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC4626",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minSharesOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sharesOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buyLpFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimForAccount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimLPReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimableReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "coreVault",
          "outputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeRewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distributor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRouter",
          "outputs": [
            {
              "internalType": "contract IFeeRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAPR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAUM",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLPPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLPReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUSDBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantControllerRoleByMarketManager"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_coreVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_vaultRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_feeRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_distributor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpEarnedRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previousCumulatedRewardPerToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceDecimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC4626",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAssetsOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sell",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assetOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sellLpFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_apr",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAPR"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokensPerInterval",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRewardsByAccount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRouter",
          "outputs": [
            {
              "internalType": "contract IVaultRouter",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buy(address,address,uint256,uint256)": {
            "details": "This function is used to buy shares in a vault using an ERC20 asset as payment.",
            "params": {
              "amount": "The amount of ERC20 tokens to use for purchasing the shares.",
              "minSharesOut": "The minimum number of shares that the buyer expects to receive for their payment.",
              "to": "The address where the purchased shares will be sent.",
              "vault": "The address of the vault."
            },
            "returns": {
              "sharesOut": "The actual number of shares purchased by the buyer."
            }
          },
          "buyLpFee(address)": {
            "details": "This function is part of an interface and is used to retrieve the fee required to buy LP tokens in a market. The function takes in a `CoreVault` parameter representing the CoreVault contract of the market being queried. The function calls the `buyLpFee` function of the `vault` parameter, which returns the fee required to buy LP tokens in the market as a `uint256`.",
            "params": {
              "vault": "The `CoreVault` contract of the market being queried."
            },
            "returns": {
              "_0": "The fee required to buy LP tokens in the market as a `uint256`."
            }
          },
          "claimLPReward()": {
            "details": "This function allows an LP (liquidity provider) to claim their rewards in the current market. The function first checks that the LP has a non-zero balance in the CoreVault contract. If the LP has a non-zero balance, the function calls the `pendingRewards` function to calculate the amount of rewards the LP is entitled to. The LP's earned rewards are then stored in the `lpEarnedRewards` mapping. Finally, the `transferFromVault` function of the `vaultRouter` contract is called to transfer the rewards from the market's vault to the LP's account."
          },
          "claimable(address)": {
            "details": "This function is used to retrieve the amount of rewards claimable by a user in a market. The function calculates the amount of claimable rewards by first retrieving the user's staked amount in the market from the `stakedAmounts` mapping. If the user has no stake, the function returns the previously claimed reward amount stored in the `claimableReward` mapping. Otherwise, the function retrieves the total supply of LP tokens in the market from the `coreVault` contract and the total pending rewards from the `IRewardDistributor` contract. The pending rewards are then multiplied by the `PRECISION` constant and added to the `cumulativeRewardPerToken` variable to calculate the next cumulative reward per token value. The difference between the new cumulative reward per token value and the previous one stored in the `previousCumulatedRewardPerToken` mapping for the user is multiplied by the user's staked amount and divided by the `PRECISION` constant to calculate the claimable reward amount. Finally, the function returns the sum of the user's previously claimed reward amount and the newly calculated claimable reward amount.",
            "params": {
              "_account": "The user's account address."
            },
            "returns": {
              "_0": "The amount of rewards claimable by the user in the market as a `uint256`."
            }
          },
          "getAUM()": {
            "details": "This function allows anyone to retrieve the current assets under management (AUM) of the market. The function calls the `getAUM` function of the `vaultRouter` contract, which returns the current AUM of the market as a `uint256`. The AUM represents the total value of assets held in the market, including both the LP tokens and any other tokens held by the market.",
            "returns": {
              "_0": "The current AUM of the market as a `uint256`."
            }
          },
          "getLPPrice()": {
            "details": "This function allows anyone to retrieve the current price of LP tokens in the current market. The function calls the `getLPPrice` function of the `vaultRouter` contract, passing in the address of the `coreVault` contract. The `getLPPrice` function returns the current price of LP tokens in the market, which is then returned by this function as a `uint256`.",
            "returns": {
              "_0": "The current price of LP tokens in the market as a `uint256`."
            }
          },
          "getLPReward()": {
            "details": "This function allows an LP (liquidity provider) to view the amount of rewards they have earned in the current market. The function uses the `msg.sender` parameter to look up the earned rewards for the calling account in the `lpEarnedRewards` mapping. The function returns the amount of rewards earned by the calling account as a `uint256`.",
            "returns": {
              "_0": "The amount of rewards earned by the calling account as a `uint256`."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getUSDBalance()": {
            "details": "This function retrieves the USD balance of the contract calling the function, by calling the getUSDBalance function of the vaultRouter contract. It does not take any parameters.",
            "returns": {
              "_0": "balance The USD balance of the contract calling the function."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "previewDeposit(uint256)": {
            "details": "See {IERC4626-previewDeposit}. "
          },
          "previewMint(uint256)": {
            "details": "See {IERC4626-previewMint}. "
          },
          "previewRedeem(uint256)": {
            "details": "See {IERC4626-previewRedeem}. "
          },
          "previewWithdraw(uint256)": {
            "details": "See {IERC4626-previewWithdraw}. "
          },
          "priceDecimals()": {
            "details": "This function retrieves the number of decimal places used for price values by calling the priceDecimals function of the vaultRouter contract. It does not take any parameters.",
            "returns": {
              "_0": "decimals The number of decimal places used for price values."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "sell(address,address,uint256,uint256)": {
            "details": "This function sells a specified amount of shares in a given vault on behalf of the caller using the `vaultReward` contract. The `to` address receives the resulting assets of the sale.",
            "params": {
              "minAssetsOut": "The minimum amount of assets the caller expects to receive from the sale.",
              "shares": "The amount of shares to sell.",
              "to": "The address that receives the resulting shares of the sale.",
              "vault": "The address of the vault to sell assets from."
            },
            "returns": {
              "assetOut": "The resulting number of shares received by the `to` address."
            }
          },
          "sellLpFee(address)": {
            "details": "This function retrieves the sell LP fee of a CoreVault contract, by calling the sellLpFee function of the specified CoreVault contract passed as a parameter.",
            "params": {
              "vault": "The CoreVault contract from which the sell LP fee is retrieved."
            },
            "returns": {
              "_0": "fee The sell LP fee of the specified CoreVault contract."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokensPerInterval()": {
            "details": "This function is used to retrieve the number of reward tokens distributed per interval in a market. The function calls the `tokensPerInterval` function of the `IRewardDistributor` contract, which returns the number of reward tokens distributed per interval as a `uint256`.",
            "returns": {
              "_0": "The number of reward tokens distributed per interval in the market as a `uint256`."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateRewards()": {
            "details": "This function is used to update rewards."
          },
          "updateRewardsByAccount(address)": {
            "details": "This function is used to update rewards.",
            "params": {
              "_account": "needs to update the account address for rewards. If it is 0, the rewards for all accounts will be updated."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "updateRewards()": {
            "notice": "function can only be called without reentry."
          },
          "updateRewardsByAccount(address)": {
            "notice": "function can only be called without reentry."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "solidity-create2-deployer/=node_modules/solidity-create2-deployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vault/VaultReward.sol": "VaultReward"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ac/AcUpgradable.sol": {
        "keccak256": "0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75",
        "urls": [
          "bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c",
          "dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/fee/interfaces/IFeeRouter.sol": {
        "keccak256": "0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2",
        "urls": [
          "bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb",
          "dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/MarketDataTypes.sol": {
        "keccak256": "0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098",
        "urls": [
          "bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363",
          "dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/OrderLib.sol": {
        "keccak256": "0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6",
        "urls": [
          "bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9",
          "dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/OrderStruct.sol": {
        "keccak256": "0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e",
        "urls": [
          "bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2",
          "dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/PositionStruct.sol": {
        "keccak256": "0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286",
        "urls": [
          "bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415",
          "dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/interfaces/IPositionBook.sol": {
        "keccak256": "0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75",
        "urls": [
          "bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d",
          "dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/vault/VaultReward.sol": {
        "keccak256": "0x6fa48e5bc5f5bf35fc3589ec309b3d2a9a2ebb1d60ae98c59dbaaa61aba649e9",
        "urls": [
          "bzz-raw://3197c94e2031be040c7baa5601057709642ffc10e5733fda1a85c9430277cd0c",
          "dweb:/ipfs/QmQio8uk76w4k7FYqHib7CqAHY5cwrTtK77RjvPGNEMdPG"
        ],
        "license": "MIT"
      },
      "contracts/vault/interfaces/ICoreVault.sol": {
        "keccak256": "0x152b38fe84e5fcdf6f9e2973894a6a44e54c702d348452d2b03a81c88e2967b8",
        "urls": [
          "bzz-raw://6c3da45a08744f27d2cdfb0adfb4ec45a8ecf5fea46ae07d71efe96f35dbe771",
          "dweb:/ipfs/QmdQdu7LWLYKfxMgeDMPQV7P55DxJT4d4NG58k96ELg4RL"
        ],
        "license": "MIT"
      },
      "contracts/vault/interfaces/IRewardDistributor.sol": {
        "keccak256": "0xc440fa14323434ff42c2cafe00a4c4ec64ed8751d4b63db4c2d2b53c5aa00ffd",
        "urls": [
          "bzz-raw://1bc7a518d1ad29e7c3de5a41411e82315b65171001f26dbd8892cab72e6cf19d",
          "dweb:/ipfs/QmUnHmMR2JyrdcguWoVkq7Atg5AKmzFqcrzazB21eXZnGL"
        ],
        "license": "MIT"
      },
      "contracts/vault/interfaces/IVaultRouter.sol": {
        "keccak256": "0xb6d28f99caf73a56558a174895a66049e8bd1db407e412a3bec1d530f84332eb",
        "urls": [
          "bzz-raw://9a1ff56d4145e696dd3d904edc21d204061236a035e8fda806e5cc3509034589",
          "dweb:/ipfs/QmVrXmMEdvCrkESZRkoV9kNC87tA6W6hu29J7jpa5RoWir"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c",
        "urls": [
          "bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3",
          "dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xa0ebd2a1608780392e5bc8805079b1a1961ebd73128ee23ab7149e7f6904fa53",
        "urls": [
          "bzz-raw://7767ecfd8f8c30fb97fe2dc3b63e96f4593e458551c44e901a3acd4ed930d32c",
          "dweb:/ipfs/QmPJDWJBrzeCee7PqrixFwuCYhsEnFXcQqV6Z6FFdJSNpd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vault/VaultReward.sol",
    "id": 39951,
    "exportedSymbols": {
      "AcUpgradable": [
        273
      ],
      "ICoreVault": [
        40666
      ],
      "IERC20": [
        107291
      ],
      "IERC4626": [
        105664
      ],
      "IFeeRouter": [
        2261
      ],
      "IRewardDistributor": [
        40696
      ],
      "IVaultRouter": [
        40960
      ],
      "ReentrancyGuard": [
        106626
      ],
      "SafeCast": [
        112729
      ],
      "SafeERC20": [
        108574
      ],
      "SafeMath": [
        113041
      ],
      "VaultReward": [
        39950
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:15695:120",
    "nodes": [
      {
        "id": 39105,
        "nodeType": "PragmaDirective",
        "src": "32:23:120",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 39107,
        "nodeType": "ImportDirective",
        "src": "57:70:120",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 107292,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39106,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 107291,
              "src": "65:6:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39109,
        "nodeType": "ImportDirective",
        "src": "128:82:120",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 108575,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39108,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 108574,
              "src": "136:9:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39111,
        "nodeType": "ImportDirective",
        "src": "211:59:120",
        "nodes": [],
        "absolutePath": "contracts/vault/interfaces/IVaultRouter.sol",
        "file": "./interfaces/IVaultRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 40961,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39110,
              "name": "IVaultRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40960,
              "src": "219:12:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39113,
        "nodeType": "ImportDirective",
        "src": "271:71:120",
        "nodes": [],
        "absolutePath": "contracts/vault/interfaces/IRewardDistributor.sol",
        "file": "./interfaces/IRewardDistributor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 40697,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39112,
              "name": "IRewardDistributor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40696,
              "src": "279:18:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39115,
        "nodeType": "ImportDirective",
        "src": "343:60:120",
        "nodes": [],
        "absolutePath": "contracts/fee/interfaces/IFeeRouter.sol",
        "file": "../fee/interfaces/IFeeRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 2262,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39114,
              "name": "IFeeRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2261,
              "src": "351:10:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39117,
        "nodeType": "ImportDirective",
        "src": "404:73:120",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 112730,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39116,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 112729,
              "src": "412:8:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39120,
        "nodeType": "ImportDirective",
        "src": "478:65:120",
        "nodes": [],
        "absolutePath": "contracts/vault/interfaces/ICoreVault.sol",
        "file": "./interfaces/ICoreVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 40667,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39118,
              "name": "ICoreVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40666,
              "src": "486:10:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 39119,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 105664,
              "src": "498:8:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39122,
        "nodeType": "ImportDirective",
        "src": "544:73:120",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 113042,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39121,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 113041,
              "src": "552:8:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39124,
        "nodeType": "ImportDirective",
        "src": "618:85:120",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 106627,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39123,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106626,
              "src": "626:15:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39126,
        "nodeType": "ImportDirective",
        "src": "704:52:120",
        "nodes": [],
        "absolutePath": "contracts/ac/AcUpgradable.sol",
        "file": "../ac/AcUpgradable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39951,
        "sourceUnit": 274,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39125,
              "name": "AcUpgradable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 273,
              "src": "712:12:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39950,
        "nodeType": "ContractDefinition",
        "src": "758:14968:120",
        "nodes": [
          {
            "id": 39133,
            "nodeType": "UsingForDirective",
            "src": "818:27:120",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 39131,
              "name": "SafeMath",
              "nameLocations": [
                "824:8:120"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 113041,
              "src": "824:8:120"
            },
            "typeName": {
              "id": 39132,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "837:7:120",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 39136,
            "nodeType": "UsingForDirective",
            "src": "850:26:120",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 39134,
              "name": "SafeCast",
              "nameLocations": [
                "856:8:120"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112729,
              "src": "856:8:120"
            },
            "typeName": {
              "id": 39135,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "869:6:120",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 39140,
            "nodeType": "UsingForDirective",
            "src": "881:27:120",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 39137,
              "name": "SafeERC20",
              "nameLocations": [
                "887:9:120"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 108574,
              "src": "887:9:120"
            },
            "typeName": {
              "id": 39139,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39138,
                "name": "IERC20",
                "nameLocations": [
                  "901:6:120"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 107291,
                "src": "901:6:120"
              },
              "referencedDeclaration": 107291,
              "src": "901:6:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$107291",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 39143,
            "nodeType": "VariableDeclaration",
            "src": "913:40:120",
            "nodes": [],
            "constant": true,
            "functionSelector": "aaf5eb68",
            "mutability": "constant",
            "name": "PRECISION",
            "nameLocation": "937:9:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39141,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "913:7:120",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653330",
              "id": 39142,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "949:4:120",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000000"
              },
              "value": "1e30"
            },
            "visibility": "public"
          },
          {
            "id": 39146,
            "nodeType": "VariableDeclaration",
            "src": "960:27:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "f29ebf61",
            "mutability": "mutable",
            "name": "feeRouter",
            "nameLocation": "978:9:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFeeRouter_$2261",
              "typeString": "contract IFeeRouter"
            },
            "typeName": {
              "id": 39145,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39144,
                "name": "IFeeRouter",
                "nameLocations": [
                  "960:10:120"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2261,
                "src": "960:10:120"
              },
              "referencedDeclaration": 2261,
              "src": "960:10:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                "typeString": "contract IFeeRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39149,
            "nodeType": "VariableDeclaration",
            "src": "993:27:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "674ce1b5",
            "mutability": "mutable",
            "name": "coreVault",
            "nameLocation": "1011:9:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICoreVault_$40666",
              "typeString": "contract ICoreVault"
            },
            "typeName": {
              "id": 39148,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39147,
                "name": "ICoreVault",
                "nameLocations": [
                  "993:10:120"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40666,
                "src": "993:10:120"
              },
              "referencedDeclaration": 40666,
              "src": "993:10:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICoreVault_$40666",
                "typeString": "contract ICoreVault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39152,
            "nodeType": "VariableDeclaration",
            "src": "1027:31:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "d37c441c",
            "mutability": "mutable",
            "name": "vaultRouter",
            "nameLocation": "1047:11:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVaultRouter_$40960",
              "typeString": "contract IVaultRouter"
            },
            "typeName": {
              "id": 39151,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39150,
                "name": "IVaultRouter",
                "nameLocations": [
                  "1027:12:120"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40960,
                "src": "1027:12:120"
              },
              "referencedDeclaration": 40960,
              "src": "1027:12:120",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVaultRouter_$40960",
                "typeString": "contract IVaultRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39154,
            "nodeType": "VariableDeclaration",
            "src": "1064:39:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "f5fc5076",
            "mutability": "mutable",
            "name": "cumulativeRewardPerToken",
            "nameLocation": "1079:24:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39153,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1064:7:120",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39156,
            "nodeType": "VariableDeclaration",
            "src": "1109:26:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "bfe10928",
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1124:11:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39155,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1109:7:120",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39158,
            "nodeType": "VariableDeclaration",
            "src": "1141:18:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "57ded9c9",
            "mutability": "mutable",
            "name": "apr",
            "nameLocation": "1156:3:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39157,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1141:7:120",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39162,
            "nodeType": "VariableDeclaration",
            "src": "1166:66:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "44a08411",
            "mutability": "mutable",
            "name": "previousCumulatedRewardPerToken",
            "nameLocation": "1201:31:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 39161,
              "keyType": {
                "id": 39159,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1174:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1166:27:120",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 39160,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1185:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 39166,
            "nodeType": "VariableDeclaration",
            "src": "1238:50:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "ae8bcdf8",
            "mutability": "mutable",
            "name": "lpEarnedRewards",
            "nameLocation": "1273:15:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 39165,
              "keyType": {
                "id": 39163,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1246:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1238:27:120",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 39164,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1257:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 39170,
            "nodeType": "VariableDeclaration",
            "src": "1294:50:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "e9503425",
            "mutability": "mutable",
            "name": "claimableReward",
            "nameLocation": "1329:15:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 39169,
              "keyType": {
                "id": 39167,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1302:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1294:27:120",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 39168,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1313:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 39174,
            "nodeType": "VariableDeclaration",
            "src": "1350:55:120",
            "nodes": [],
            "constant": false,
            "functionSelector": "a3180217",
            "mutability": "mutable",
            "name": "averageStakedAmounts",
            "nameLocation": "1385:20:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 39173,
              "keyType": {
                "id": 39171,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1358:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1350:27:120",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 39172,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1369:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 39253,
            "nodeType": "FunctionDefinition",
            "src": "1412:566:120",
            "nodes": [],
            "body": {
              "id": 39252,
              "nodeType": "Block",
              "src": "1575:403:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 39193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39188,
                          "name": "_coreVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39176,
                          "src": "1593:10:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 39191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1615:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 39190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1607:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 39189,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1607:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 39192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1607:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1593:24:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 39187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1585:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 39194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:33:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39195,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:33:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 39202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39197,
                          "name": "_vaultRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39178,
                          "src": "1636:12:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 39200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1660:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 39199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1652:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 39198,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1652:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 39201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1652:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1636:26:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 39196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1628:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 39203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:35:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39204,
                  "nodeType": "ExpressionStatement",
                  "src": "1628:35:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 39211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39206,
                          "name": "_feeRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39180,
                          "src": "1681:10:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 39209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1703:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 39208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1695:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 39207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1695:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 39210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1695:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1681:24:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 39205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1673:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 39212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:33:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39213,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:33:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 39220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39215,
                          "name": "_distributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39182,
                          "src": "1724:12:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 39218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1748:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 39217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1740:7:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 39216,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1740:7:120",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 39219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1740:10:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1724:26:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 39214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1716:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 39221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:35:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39222,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:35:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 39226,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1786:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1790:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1786:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 39223,
                        "name": "AcUpgradable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "1761:12:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AcUpgradable_$273_$",
                          "typeString": "type(contract AcUpgradable)"
                        }
                      },
                      "id": 39225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1774:11:120",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "1761:24:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:36:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39229,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:36:120"
                },
                {
                  "expression": {
                    "id": 39234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39230,
                      "name": "vaultRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39152,
                      "src": "1807:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultRouter_$40960",
                        "typeString": "contract IVaultRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 39232,
                          "name": "_vaultRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39178,
                          "src": "1834:12:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39231,
                        "name": "IVaultRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40960,
                        "src": "1821:12:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IVaultRouter_$40960_$",
                          "typeString": "type(contract IVaultRouter)"
                        }
                      },
                      "id": 39233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1821:26:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultRouter_$40960",
                        "typeString": "contract IVaultRouter"
                      }
                    },
                    "src": "1807:40:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultRouter_$40960",
                      "typeString": "contract IVaultRouter"
                    }
                  },
                  "id": 39235,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:40:120"
                },
                {
                  "expression": {
                    "id": 39240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39236,
                      "name": "coreVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39149,
                      "src": "1857:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 39238,
                          "name": "_coreVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39176,
                          "src": "1880:10:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39237,
                        "name": "ICoreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40666,
                        "src": "1869:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICoreVault_$40666_$",
                          "typeString": "type(contract ICoreVault)"
                        }
                      },
                      "id": 39239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1869:22:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      }
                    },
                    "src": "1857:34:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "id": 39241,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:34:120"
                },
                {
                  "expression": {
                    "id": 39246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39242,
                      "name": "feeRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39146,
                      "src": "1901:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                        "typeString": "contract IFeeRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 39244,
                          "name": "_feeRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39180,
                          "src": "1924:10:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39243,
                        "name": "IFeeRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "1913:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeRouter_$2261_$",
                          "typeString": "type(contract IFeeRouter)"
                        }
                      },
                      "id": 39245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1913:22:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                        "typeString": "contract IFeeRouter"
                      }
                    },
                    "src": "1901:34:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                      "typeString": "contract IFeeRouter"
                    }
                  },
                  "id": 39247,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:34:120"
                },
                {
                  "expression": {
                    "id": 39250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39248,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39156,
                      "src": "1945:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39249,
                      "name": "_distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39182,
                      "src": "1959:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1945:26:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 39251,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:26:120"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39184,
                  "name": "initializer",
                  "nameLocations": [
                    "1563:11:120"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 103185,
                  "src": "1563:11:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "1563:11:120"
              }
            ],
            "name": "initialize",
            "nameLocation": "1421:10:120",
            "parameters": {
              "id": 39183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39176,
                  "mutability": "mutable",
                  "name": "_coreVault",
                  "nameLocation": "1449:10:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39253,
                  "src": "1441:18:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39178,
                  "mutability": "mutable",
                  "name": "_vaultRouter",
                  "nameLocation": "1477:12:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39253,
                  "src": "1469:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39180,
                  "mutability": "mutable",
                  "name": "_feeRouter",
                  "nameLocation": "1507:10:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39253,
                  "src": "1499:18:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39182,
                  "mutability": "mutable",
                  "name": "_distributor",
                  "nameLocation": "1535:12:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39253,
                  "src": "1527:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1431:122:120"
            },
            "returnParameters": {
              "id": 39186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1575:0:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39323,
            "nodeType": "FunctionDefinition",
            "src": "2476:564:120",
            "nodes": [],
            "body": {
              "id": 39322,
              "nodeType": "Block",
              "src": "2641:399:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 39271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2674:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2678:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2674:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39270,
                      "name": "updateRewardsByAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39621,
                      "src": "2651:22:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2651:34:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39274,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:34:120"
                },
                {
                  "assignments": [
                    39276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39276,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "2703:6:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39322,
                      "src": "2695:14:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 39275,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2695:7:120",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39280,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39277,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39257,
                        "src": "2712:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$105664",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 39278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2718:5:120",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105533,
                      "src": "2712:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 39279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:13:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2695:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39285,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39276,
                            "src": "2783:6:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39284,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "2776:6:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 39286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2776:14:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 39287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2804:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2808:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2804:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 39291,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2836:4:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultReward_$39950",
                              "typeString": "contract VaultReward"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultReward_$39950",
                              "typeString": "contract VaultReward"
                            }
                          ],
                          "id": 39290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2828:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2828:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2828:13:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 39293,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39261,
                        "src": "2855:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39281,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108574,
                        "src": "2736:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$108574_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 39283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2746:16:120",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 108258,
                      "src": "2736:26:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$107291_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 39294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:135:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39295,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:135:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39302,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39257,
                            "src": "2912:5:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$105664",
                              "typeString": "contract IERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC4626_$105664",
                              "typeString": "contract IERC4626"
                            }
                          ],
                          "id": 39301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2904:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39300,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2904:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2904:14:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 39304,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39261,
                        "src": "2920:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 39297,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39276,
                            "src": "2888:6:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39296,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "2881:6:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 39298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2881:14:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 39299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2896:7:120",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107278,
                      "src": "2881:22:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 39305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:46:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39306,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:46:120"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "id": 39313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39307,
                            "name": "sharesOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39268,
                            "src": "2942:9:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 39310,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39261,
                                "src": "2968:6:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 39311,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39259,
                                "src": "2976:2:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 39308,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39257,
                                "src": "2954:5:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$105664",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 39309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2960:7:120",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 105581,
                              "src": "2954:13:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 39312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2954:25:120",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2942:37:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 39314,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2941:39:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 39315,
                      "name": "minSharesOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39263,
                      "src": "2983:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2941:54:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39321,
                  "nodeType": "IfStatement",
                  "src": "2937:96:120",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "4d696e5368617265734572726f72",
                          "id": 39318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3016:16:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8beaaa32cf1a4c4bdf1febaa20401bb9188de78434532d5a47cd2ac123905a0c",
                            "typeString": "literal_string \"MinSharesError\""
                          },
                          "value": "MinSharesError"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8beaaa32cf1a4c4bdf1febaa20401bb9188de78434532d5a47cd2ac123905a0c",
                            "typeString": "literal_string \"MinSharesError\""
                          }
                        ],
                        "id": 39317,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "3009:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 39319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3009:24:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 39320,
                    "nodeType": "ExpressionStatement",
                    "src": "3009:24:120"
                  }
                }
              ]
            },
            "documentation": {
              "id": 39254,
              "nodeType": "StructuredDocumentation",
              "src": "1984:487:120",
              "text": " @dev This function is used to buy shares in a vault using an ERC20 asset as payment.\n @param vault The address of the vault.\n @param to The address where the purchased shares will be sent.\n @param amount The amount of ERC20 tokens to use for purchasing the shares.\n @param minSharesOut The minimum number of shares that the buyer expects to receive for their payment.\n @return sharesOut The actual number of shares purchased by the buyer."
            },
            "functionSelector": "a9d424e2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39265,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2600:12:120"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106591,
                  "src": "2600:12:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "2600:12:120"
              }
            ],
            "name": "buy",
            "nameLocation": "2485:3:120",
            "parameters": {
              "id": 39264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39257,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2507:5:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39323,
                  "src": "2498:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$105664",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 39256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39255,
                      "name": "IERC4626",
                      "nameLocations": [
                        "2498:8:120"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 105664,
                      "src": "2498:8:120"
                    },
                    "referencedDeclaration": 105664,
                    "src": "2498:8:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$105664",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39259,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2530:2:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39323,
                  "src": "2522:10:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39261,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2550:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39323,
                  "src": "2542:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39263,
                  "mutability": "mutable",
                  "name": "minSharesOut",
                  "nameLocation": "2574:12:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39323,
                  "src": "2566:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2488:104:120"
            },
            "returnParameters": {
              "id": 39269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39268,
                  "mutability": "mutable",
                  "name": "sharesOut",
                  "nameLocation": "2630:9:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39323,
                  "src": "2622:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2621:19:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39362,
            "nodeType": "FunctionDefinition",
            "src": "3645:321:120",
            "nodes": [],
            "body": {
              "id": 39361,
              "nodeType": "Block",
              "src": "3810:156:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 39341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3843:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3847:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3843:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39340,
                      "name": "updateRewardsByAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39621,
                      "src": "3820:22:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3820:34:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39344,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:34:120"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "id": 39352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39345,
                            "name": "assetOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39338,
                            "src": "3869:8:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 39348,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39331,
                                "src": "3893:6:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 39349,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39329,
                                "src": "3901:2:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 39350,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39329,
                                "src": "3905:2:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 39346,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39327,
                                "src": "3880:5:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC4626_$105664",
                                  "typeString": "contract IERC4626"
                                }
                              },
                              "id": 39347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3886:6:120",
                              "memberName": "redeem",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 105663,
                              "src": "3880:12:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address) external returns (uint256)"
                              }
                            },
                            "id": 39351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3880:28:120",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3869:39:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 39353,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3868:41:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 39354,
                      "name": "minAssetsOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39333,
                      "src": "3912:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3868:56:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39360,
                  "nodeType": "IfStatement",
                  "src": "3864:95:120",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "4d696e4f75744572726f72",
                          "id": 39357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3945:13:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5a9b6a1c9a34e1ef1bbc4cab3935e0bf4ed572c44c95b22eb3de49148f8b62e7",
                            "typeString": "literal_string \"MinOutError\""
                          },
                          "value": "MinOutError"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_5a9b6a1c9a34e1ef1bbc4cab3935e0bf4ed572c44c95b22eb3de49148f8b62e7",
                            "typeString": "literal_string \"MinOutError\""
                          }
                        ],
                        "id": 39356,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "3938:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 39358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3938:21:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 39359,
                    "nodeType": "ExpressionStatement",
                    "src": "3938:21:120"
                  }
                }
              ]
            },
            "documentation": {
              "id": 39324,
              "nodeType": "StructuredDocumentation",
              "src": "3046:594:120",
              "text": " @dev This function sells a specified amount of shares in a given vault on behalf of the caller using the `vaultReward` contract.\n The `to` address receives the resulting assets of the sale.\n @param vault The address of the vault to sell assets from.\n @param to The address that receives the resulting shares of the sale.\n @param shares The amount of shares to sell.\n @param minAssetsOut The minimum amount of assets the caller expects to receive from the sale.\n @return assetOut The resulting number of shares received by the `to` address."
            },
            "functionSelector": "31de7d15",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39335,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3770:12:120"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106591,
                  "src": "3770:12:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "3770:12:120"
              }
            ],
            "name": "sell",
            "nameLocation": "3654:4:120",
            "parameters": {
              "id": 39334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39327,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "3677:5:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39362,
                  "src": "3668:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$105664",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 39326,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39325,
                      "name": "IERC4626",
                      "nameLocations": [
                        "3668:8:120"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 105664,
                      "src": "3668:8:120"
                    },
                    "referencedDeclaration": 105664,
                    "src": "3668:8:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$105664",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39329,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3700:2:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39362,
                  "src": "3692:10:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3692:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39331,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "3720:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39362,
                  "src": "3712:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3712:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39333,
                  "mutability": "mutable",
                  "name": "minAssetsOut",
                  "nameLocation": "3744:12:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39362,
                  "src": "3736:20:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3736:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3658:104:120"
            },
            "returnParameters": {
              "id": 39339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39338,
                  "mutability": "mutable",
                  "name": "assetOut",
                  "nameLocation": "3800:8:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39362,
                  "src": "3792:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3791:18:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39368,
            "nodeType": "EventDefinition",
            "src": "3972:47:120",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba",
            "name": "Harvest",
            "nameLocation": "3978:7:120",
            "parameters": {
              "id": 39367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39364,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3994:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39368,
                  "src": "3986:15:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3986:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39366,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4011:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39368,
                  "src": "4003:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3985:33:120"
            }
          },
          {
            "id": 39382,
            "nodeType": "FunctionDefinition",
            "src": "4636:127:120",
            "nodes": [],
            "body": {
              "id": 39381,
              "nodeType": "Block",
              "src": "4711:52:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 39377,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4745:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4749:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4745:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39376,
                      "name": "_claimForAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39443,
                      "src": "4728:16:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 39379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4728:28:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39375,
                  "id": 39380,
                  "nodeType": "Return",
                  "src": "4721:35:120"
                }
              ]
            },
            "documentation": {
              "id": 39369,
              "nodeType": "StructuredDocumentation",
              "src": "4025:606:120",
              "text": " @dev This function allows an LP (liquidity provider) to claim their rewards in the current market.\n The function first checks that the LP has a non-zero balance in the CoreVault contract.\n If the LP has a non-zero balance, the function calls the `pendingRewards` function to calculate the amount of\n rewards the LP is entitled to. The LP's earned rewards are then stored in the `lpEarnedRewards` mapping.\n Finally, the `transferFromVault` function of the `vaultRouter` contract is called to transfer the rewards\n from the market's vault to the LP's account."
            },
            "functionSelector": "e547bb91",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39372,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39371,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4668:12:120"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106591,
                  "src": "4668:12:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "4668:12:120"
              }
            ],
            "name": "claimLPReward",
            "nameLocation": "4645:13:120",
            "parameters": {
              "id": 39370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4658:2:120"
            },
            "returnParameters": {
              "id": 39375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39374,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "4698:11:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39382,
                  "src": "4690:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4689:21:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39396,
            "nodeType": "FunctionDefinition",
            "src": "4769:152:120",
            "nodes": [],
            "body": {
              "id": 39395,
              "nodeType": "Block",
              "src": "4879:42:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39392,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39384,
                        "src": "4906:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39391,
                      "name": "_claimForAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39443,
                      "src": "4889:16:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 39393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4889:25:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39394,
                  "nodeType": "ExpressionStatement",
                  "src": "4889:25:120"
                }
              ]
            },
            "functionSelector": "afd6a5cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39386,
                  "name": "onlyController",
                  "nameLocations": [
                    "4834:14:120"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "4834:14:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "4834:14:120"
              }
            ],
            "name": "claimForAccount",
            "nameLocation": "4778:15:120",
            "parameters": {
              "id": 39385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39384,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4811:7:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39396,
                  "src": "4803:15:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4803:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4793:31:120"
            },
            "returnParameters": {
              "id": 39390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39389,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "4866:11:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39396,
                  "src": "4858:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4858:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4857:21:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39443,
            "nodeType": "FunctionDefinition",
            "src": "4927:403:120",
            "nodes": [],
            "body": {
              "id": 39442,
              "nodeType": "Block",
              "src": "5023:307:120",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 39405,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39398,
                          "src": "5057:8:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 39403,
                          "name": "coreVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39149,
                          "src": "5037:9:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICoreVault_$40666",
                            "typeString": "contract ICoreVault"
                          }
                        },
                        "id": 39404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5047:9:120",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 107248,
                        "src": "5037:19:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 39406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5037:29:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 39407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5070:1:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5037:34:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39411,
                  "nodeType": "IfStatement",
                  "src": "5033:48:120",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 39409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5080:1:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 39402,
                    "id": 39410,
                    "nodeType": "Return",
                    "src": "5073:8:120"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39413,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39398,
                        "src": "5114:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39412,
                      "name": "updateRewardsByAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39621,
                      "src": "5091:22:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5091:32:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39415,
                  "nodeType": "ExpressionStatement",
                  "src": "5091:32:120"
                },
                {
                  "expression": {
                    "id": 39420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39416,
                      "name": "tokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39401,
                      "src": "5133:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 39417,
                        "name": "claimableReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39170,
                        "src": "5147:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 39419,
                      "indexExpression": {
                        "id": 39418,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39398,
                        "src": "5163:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5147:25:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5133:39:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39421,
                  "nodeType": "ExpressionStatement",
                  "src": "5133:39:120"
                },
                {
                  "expression": {
                    "id": 39426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 39422,
                        "name": "claimableReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39170,
                        "src": "5182:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 39424,
                      "indexExpression": {
                        "id": 39423,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39398,
                        "src": "5198:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5182:25:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 39425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5210:1:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5182:29:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39427,
                  "nodeType": "ExpressionStatement",
                  "src": "5182:29:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39433,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39398,
                        "src": "5256:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 39434,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39401,
                        "src": "5266:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 39429,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39852,
                              "src": "5228:11:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 39430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5228:13:120",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39428,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "5221:6:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 39431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5221:21:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 39432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5243:12:120",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 108231,
                      "src": "5221:34:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$107291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$107291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 39435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5221:57:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39436,
                  "nodeType": "ExpressionStatement",
                  "src": "5221:57:120"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 39438,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39398,
                        "src": "5301:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 39439,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39401,
                        "src": "5311:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39437,
                      "name": "Harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39368,
                      "src": "5293:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 39440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5293:30:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39441,
                  "nodeType": "EmitStatement",
                  "src": "5288:35:120"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claimForAccount",
            "nameLocation": "4936:16:120",
            "parameters": {
              "id": 39399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39398,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "4970:8:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39443,
                  "src": "4962:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4962:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4952:32:120"
            },
            "returnParameters": {
              "id": 39402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39401,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "5010:11:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39443,
                  "src": "5002:19:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5002:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5001:21:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 39457,
            "nodeType": "FunctionDefinition",
            "src": "5465:98:120",
            "nodes": [],
            "body": {
              "id": 39456,
              "nodeType": "Block",
              "src": "5512:51:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 39452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5553:1:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 39451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5545:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5545:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5545:10:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39449,
                      "name": "updateRewardsByAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39621,
                      "src": "5522:22:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5522:34:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39455,
                  "nodeType": "ExpressionStatement",
                  "src": "5522:34:120"
                }
              ]
            },
            "documentation": {
              "id": 39444,
              "nodeType": "StructuredDocumentation",
              "src": "5336:124:120",
              "text": " @dev This function is used to update rewards.\n @notice function can only be called without reentry."
            },
            "functionSelector": "3e158b0c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39447,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39446,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5499:12:120"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106591,
                  "src": "5499:12:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "5499:12:120"
              }
            ],
            "name": "updateRewards",
            "nameLocation": "5474:13:120",
            "parameters": {
              "id": 39445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5487:2:120"
            },
            "returnParameters": {
              "id": 39448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5512:0:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39463,
            "nodeType": "EventDefinition",
            "src": "5569:70:120",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "055418cabed8a0ec732dd9b1f84e69d3f33a8f9a70d721b7a6962a00c26a4572",
            "name": "LogUpdatePool",
            "nameLocation": "5575:13:120",
            "parameters": {
              "id": 39462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39459,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "5597:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39463,
                  "src": "5589:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5589:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39461,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cumulativeRewardPerToken",
                  "nameLocation": "5613:24:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39463,
                  "src": "5605:32:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5605:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5588:50:120"
            }
          },
          {
            "id": 39621,
            "nodeType": "FunctionDefinition",
            "src": "5904:1860:120",
            "nodes": [],
            "body": {
              "id": 39620,
              "nodeType": "Block",
              "src": "5961:1803:120",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39470,
                      "mutability": "mutable",
                      "name": "blockReward",
                      "nameLocation": "5979:11:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39620,
                      "src": "5971:19:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39469,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5971:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39476,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 39472,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39156,
                            "src": "6012:11:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39471,
                          "name": "IRewardDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40696,
                          "src": "5993:18:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRewardDistributor_$40696_$",
                            "typeString": "type(contract IRewardDistributor)"
                          }
                        },
                        "id": 39473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5993:31:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardDistributor_$40696",
                          "typeString": "contract IRewardDistributor"
                        }
                      },
                      "id": 39474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6025:10:120",
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40690,
                      "src": "5993:42:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 39475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5993:44:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5971:66:120"
                },
                {
                  "assignments": [
                    39478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39478,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "6055:6:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39620,
                      "src": "6047:14:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6047:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39482,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39479,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "6064:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6074:11:120",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107240,
                      "src": "6064:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6064:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6047:40:120"
                },
                {
                  "assignments": [
                    39484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39484,
                      "mutability": "mutable",
                      "name": "_cumulativeRewardPerToken",
                      "nameLocation": "6105:25:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39620,
                      "src": "6097:33:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6097:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39486,
                  "initialValue": {
                    "id": 39485,
                    "name": "cumulativeRewardPerToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39154,
                    "src": "6133:24:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6097:60:120"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 39493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 39489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 39487,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39478,
                        "src": "6172:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 39488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6181:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6172:10:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 39492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 39490,
                        "name": "blockReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39470,
                        "src": "6186:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 39491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6200:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6186:15:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6172:29:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39515,
                  "nodeType": "IfStatement",
                  "src": "6168:332:120",
                  "trueBody": {
                    "id": 39514,
                    "nodeType": "Block",
                    "src": "6203:297:120",
                    "statements": [
                      {
                        "expression": {
                          "id": 39503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39494,
                            "name": "_cumulativeRewardPerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39484,
                            "src": "6217:25:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 39502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 39495,
                              "name": "_cumulativeRewardPerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39484,
                              "src": "6261:25:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 39501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 39498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 39496,
                                      "name": "blockReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39470,
                                      "src": "6306:11:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 39497,
                                      "name": "PRECISION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39143,
                                      "src": "6320:9:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6306:23:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 39499,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6305:25:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 39500,
                                "name": "supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39478,
                                "src": "6349:6:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6305:50:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6261:94:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6217:138:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39504,
                        "nodeType": "ExpressionStatement",
                        "src": "6217:138:120"
                      },
                      {
                        "expression": {
                          "id": 39507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39505,
                            "name": "cumulativeRewardPerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39154,
                            "src": "6370:24:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 39506,
                            "name": "_cumulativeRewardPerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39484,
                            "src": "6397:25:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6370:52:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39508,
                        "nodeType": "ExpressionStatement",
                        "src": "6370:52:120"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 39510,
                              "name": "supply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39478,
                              "src": "6456:6:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 39511,
                              "name": "cumulativeRewardPerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39154,
                              "src": "6464:24:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 39509,
                            "name": "LogUpdatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39463,
                            "src": "6442:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 39512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6442:47:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39513,
                        "nodeType": "EmitStatement",
                        "src": "6437:52:120"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39516,
                      "name": "_cumulativeRewardPerToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39484,
                      "src": "6514:25:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 39517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6543:1:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6514:30:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39521,
                  "nodeType": "IfStatement",
                  "src": "6510:67:120",
                  "trueBody": {
                    "id": 39520,
                    "nodeType": "Block",
                    "src": "6546:31:120",
                    "statements": [
                      {
                        "functionReturnParameters": 39468,
                        "id": 39519,
                        "nodeType": "Return",
                        "src": "6560:7:120"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 39527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39522,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39466,
                      "src": "6591:8:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 39525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6611:1:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 39524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6603:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 39523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6603:7:120",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 39526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6603:10:120",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6591:22:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39619,
                  "nodeType": "IfStatement",
                  "src": "6587:1171:120",
                  "trueBody": {
                    "id": 39618,
                    "nodeType": "Block",
                    "src": "6615:1143:120",
                    "statements": [
                      {
                        "assignments": [
                          39529
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 39529,
                            "mutability": "mutable",
                            "name": "stakedAmount",
                            "nameLocation": "6637:12:120",
                            "nodeType": "VariableDeclaration",
                            "scope": 39618,
                            "src": "6629:20:120",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 39528,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6629:7:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 39533,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 39531,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39466,
                              "src": "6666:8:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 39530,
                            "name": "stakedAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39945,
                            "src": "6652:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 39532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6652:23:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6629:46:120"
                      },
                      {
                        "assignments": [
                          39535
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 39535,
                            "mutability": "mutable",
                            "name": "accountReward",
                            "nameLocation": "6697:13:120",
                            "nodeType": "VariableDeclaration",
                            "scope": 39618,
                            "src": "6689:21:120",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 39534,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6689:7:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 39547,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 39543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 39536,
                                  "name": "stakedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39529,
                                  "src": "6714:12:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 39541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 39537,
                                        "name": "_cumulativeRewardPerToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39484,
                                        "src": "6746:25:120",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "baseExpression": {
                                          "id": 39538,
                                          "name": "previousCumulatedRewardPerToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 39162,
                                          "src": "6794:31:120",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 39540,
                                        "indexExpression": {
                                          "id": 39539,
                                          "name": "_account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 39466,
                                          "src": "6826:8:120",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6794:41:120",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6746:89:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 39542,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6745:91:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6714:122:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 39544,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6713:124:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 39545,
                            "name": "PRECISION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39143,
                            "src": "6840:9:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6713:136:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6689:160:120"
                      },
                      {
                        "assignments": [
                          39549
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 39549,
                            "mutability": "mutable",
                            "name": "_claimableReward",
                            "nameLocation": "6872:16:120",
                            "nodeType": "VariableDeclaration",
                            "scope": 39618,
                            "src": "6864:24:120",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 39548,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6864:7:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 39555,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 39550,
                              "name": "claimableReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39170,
                              "src": "6891:15:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 39552,
                            "indexExpression": {
                              "id": 39551,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39466,
                              "src": "6907:8:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6891:25:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 39553,
                            "name": "accountReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39535,
                            "src": "6935:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6891:57:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6864:84:120"
                      },
                      {
                        "expression": {
                          "id": 39560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 39556,
                              "name": "claimableReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39170,
                              "src": "6963:15:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 39558,
                            "indexExpression": {
                              "id": 39557,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39466,
                              "src": "6979:8:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6963:25:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 39559,
                            "name": "_claimableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39549,
                            "src": "6991:16:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6963:44:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39561,
                        "nodeType": "ExpressionStatement",
                        "src": "6963:44:120"
                      },
                      {
                        "expression": {
                          "id": 39566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 39562,
                              "name": "previousCumulatedRewardPerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39162,
                              "src": "7021:31:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 39564,
                            "indexExpression": {
                              "id": 39563,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39466,
                              "src": "7070:8:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7021:71:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 39565,
                            "name": "_cumulativeRewardPerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39484,
                            "src": "7095:25:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7021:99:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39567,
                        "nodeType": "ExpressionStatement",
                        "src": "7021:99:120"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 39576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 39570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 39568,
                              "name": "_claimableReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39549,
                              "src": "7139:16:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 39569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7158:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7139:20:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 39575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 39572,
                                  "name": "_account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39466,
                                  "src": "7177:8:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 39571,
                                "name": "stakedAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39945,
                                "src": "7163:13:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 39573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7163:23:120",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 39574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7189:1:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7163:27:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7139:51:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 39617,
                        "nodeType": "IfStatement",
                        "src": "7135:613:120",
                        "trueBody": {
                          "id": 39616,
                          "nodeType": "Block",
                          "src": "7192:556:120",
                          "statements": [
                            {
                              "assignments": [
                                39578
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 39578,
                                  "mutability": "mutable",
                                  "name": "nextCumulativeReward",
                                  "nameLocation": "7218:20:120",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 39616,
                                  "src": "7210:28:120",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 39577,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7210:7:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 39584,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 39583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 39579,
                                    "name": "lpEarnedRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39166,
                                    "src": "7241:15:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 39581,
                                  "indexExpression": {
                                    "id": 39580,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39466,
                                    "src": "7257:8:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7241:25:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 39582,
                                  "name": "accountReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39535,
                                  "src": "7289:13:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7241:61:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7210:92:120"
                            },
                            {
                              "expression": {
                                "id": 39608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 39585,
                                    "name": "averageStakedAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39174,
                                    "src": "7321:20:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 39587,
                                  "indexExpression": {
                                    "id": 39586,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39466,
                                    "src": "7342:8:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7321:30:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 39605,
                                          "name": "nextCumulativeReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 39578,
                                          "src": "7599:20:120",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 39602,
                                              "name": "accountReward",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 39535,
                                              "src": "7551:13:120",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 39600,
                                              "name": "stakedAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 39529,
                                              "src": "7534:12:120",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 39601,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7547:3:120",
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 112935,
                                            "src": "7534:16:120",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 39603,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7534:31:120",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 39604,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7566:3:120",
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 112950,
                                        "src": "7534:35:120",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 39606,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7534:111:120",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 39597,
                                          "name": "nextCumulativeReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 39578,
                                          "src": "7462:20:120",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 39592,
                                                "name": "lpEarnedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 39166,
                                                "src": "7410:15:120",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 39594,
                                              "indexExpression": {
                                                "id": 39593,
                                                "name": "_account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 39466,
                                                "src": "7426:8:120",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "7410:25:120",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "baseExpression": {
                                                "id": 39588,
                                                "name": "averageStakedAmounts",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 39174,
                                                "src": "7354:20:120",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 39590,
                                              "indexExpression": {
                                                "id": 39589,
                                                "name": "_account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 39466,
                                                "src": "7375:8:120",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "7354:30:120",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 39591,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7406:3:120",
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 112935,
                                            "src": "7354:55:120",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 39595,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "7354:82:120",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 39596,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7458:3:120",
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 112950,
                                        "src": "7354:107:120",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 39598,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7354:129:120",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 39599,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7505:3:120",
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 112905,
                                    "src": "7354:154:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 39607,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7354:313:120",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7321:346:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 39609,
                              "nodeType": "ExpressionStatement",
                              "src": "7321:346:120"
                            },
                            {
                              "expression": {
                                "id": 39614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 39610,
                                    "name": "lpEarnedRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39166,
                                    "src": "7685:15:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 39612,
                                  "indexExpression": {
                                    "id": 39611,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39466,
                                    "src": "7701:8:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7685:25:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 39613,
                                  "name": "nextCumulativeReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39578,
                                  "src": "7713:20:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7685:48:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 39615,
                              "nodeType": "ExpressionStatement",
                              "src": "7685:48:120"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 39464,
              "nodeType": "StructuredDocumentation",
              "src": "5645:254:120",
              "text": " @dev This function is used to update rewards.\n @notice function can only be called without reentry.\n @param _account needs to update the account address for rewards. If it is 0, the rewards for all accounts will be updated."
            },
            "functionSelector": "1ee2b0b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateRewardsByAccount",
            "nameLocation": "5913:22:120",
            "parameters": {
              "id": 39467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39466,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5944:8:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39621,
                  "src": "5936:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5936:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5935:18:120"
            },
            "returnParameters": {
              "id": 39468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5961:0:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39647,
            "nodeType": "FunctionDefinition",
            "src": "8235:191:120",
            "nodes": [],
            "body": {
              "id": 39646,
              "nodeType": "Block",
              "src": "8288:138:120",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 39627,
                        "name": "lpEarnedRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39166,
                        "src": "8302:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 39630,
                      "indexExpression": {
                        "expression": {
                          "id": 39628,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8318:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8322:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8318:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8302:27:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 39631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8333:1:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8302:32:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39635,
                  "nodeType": "IfStatement",
                  "src": "8298:46:120",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 39633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8343:1:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 39626,
                    "id": 39634,
                    "nodeType": "Return",
                    "src": "8336:8:120"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 39636,
                        "name": "lpEarnedRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39166,
                        "src": "8362:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 39639,
                      "indexExpression": {
                        "expression": {
                          "id": 39637,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8378:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8382:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8378:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8362:27:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 39640,
                        "name": "claimableReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39170,
                        "src": "8392:15:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 39643,
                      "indexExpression": {
                        "expression": {
                          "id": 39641,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8408:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8412:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8408:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8392:27:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8362:57:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39626,
                  "id": 39645,
                  "nodeType": "Return",
                  "src": "8355:64:120"
                }
              ]
            },
            "documentation": {
              "id": 39622,
              "nodeType": "StructuredDocumentation",
              "src": "7770:460:120",
              "text": " @dev This function allows an LP (liquidity provider) to view the amount of rewards they have earned in the current market.\n The function uses the `msg.sender` parameter to look up the earned rewards for the calling account in the `lpEarnedRewards` mapping.\n The function returns the amount of rewards earned by the calling account as a `uint256`.\n @return The amount of rewards earned by the calling account as a `uint256`."
            },
            "functionSelector": "8f089d65",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLPReward",
            "nameLocation": "8244:11:120",
            "parameters": {
              "id": 39623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8255:2:120"
            },
            "returnParameters": {
              "id": 39626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39647,
                  "src": "8279:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8279:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8278:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39691,
            "nodeType": "FunctionDefinition",
            "src": "8908:291:120",
            "nodes": [],
            "body": {
              "id": 39690,
              "nodeType": "Block",
              "src": "8960:239:120",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39654,
                      "mutability": "mutable",
                      "name": "assets",
                      "nameLocation": "8978:6:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39690,
                      "src": "8970:14:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39653,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8970:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39658,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39655,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "8987:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8997:11:120",
                      "memberName": "totalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105539,
                      "src": "8987:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8987:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8970:40:120"
                },
                {
                  "assignments": [
                    39660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39660,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "9028:6:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39690,
                      "src": "9020:14:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39659,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9020:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39664,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39661,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "9037:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9047:11:120",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107240,
                      "src": "9037:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9037:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9020:40:120"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 39671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 39667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 39665,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39654,
                        "src": "9074:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 39666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9084:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9074:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 39670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 39668,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39660,
                        "src": "9089:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 39669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9099:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9089:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9074:26:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39679,
                  "nodeType": "IfStatement",
                  "src": "9070:64:120",
                  "trueBody": {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 39677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31",
                        "id": 39672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9109:1:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 39673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9113:2:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 39674,
                            "name": "priceDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39780,
                            "src": "9119:13:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 39675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9119:15:120",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9113:21:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9109:25:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 39652,
                    "id": 39678,
                    "nodeType": "Return",
                    "src": "9102:32:120"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 39680,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39654,
                            "src": "9152:6:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 39684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 39681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9161:2:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 39682,
                                "name": "priceDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39780,
                                "src": "9167:13:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 39683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9167:15:120",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9161:21:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9152:30:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 39686,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9151:32:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 39687,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39660,
                      "src": "9186:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9151:41:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39652,
                  "id": 39689,
                  "nodeType": "Return",
                  "src": "9144:48:120"
                }
              ]
            },
            "documentation": {
              "id": 39648,
              "nodeType": "StructuredDocumentation",
              "src": "8432:471:120",
              "text": " @dev This function allows anyone to retrieve the current price of LP tokens in the current market.\n The function calls the `getLPPrice` function of the `vaultRouter` contract, passing in the address of the `coreVault` contract.\n The `getLPPrice` function returns the current price of LP tokens in the market, which is then returned by this function as a `uint256`.\n @return The current price of LP tokens in the market as a `uint256`."
            },
            "functionSelector": "b77905ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLPPrice",
            "nameLocation": "8917:10:120",
            "parameters": {
              "id": 39649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8927:2:120"
            },
            "returnParameters": {
              "id": 39652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39691,
                  "src": "8951:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8951:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8950:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39705,
            "nodeType": "FunctionDefinition",
            "src": "9252:128:120",
            "nodes": [],
            "body": {
              "id": 39704,
              "nodeType": "Block",
              "src": "9324:56:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39701,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39694,
                        "src": "9366:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39699,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "9341:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9351:14:120",
                      "memberName": "previewDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105571,
                      "src": "9341:24:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 39702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9341:32:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39698,
                  "id": 39703,
                  "nodeType": "Return",
                  "src": "9334:39:120"
                }
              ]
            },
            "documentation": {
              "id": 39692,
              "nodeType": "StructuredDocumentation",
              "src": "9205:42:120",
              "text": "@dev See {IERC4626-previewDeposit}. "
            },
            "functionSelector": "ef8b30f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewDeposit",
            "nameLocation": "9261:14:120",
            "parameters": {
              "id": 39695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39694,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "9284:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39705,
                  "src": "9276:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9276:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9275:16:120"
            },
            "returnParameters": {
              "id": 39698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39697,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39705,
                  "src": "9315:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9315:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9314:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39719,
            "nodeType": "FunctionDefinition",
            "src": "9430:122:120",
            "nodes": [],
            "body": {
              "id": 39718,
              "nodeType": "Block",
              "src": "9499:53:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39715,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39708,
                        "src": "9538:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39713,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "9516:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9526:11:120",
                      "memberName": "previewMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105597,
                      "src": "9516:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 39716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9516:29:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39712,
                  "id": 39717,
                  "nodeType": "Return",
                  "src": "9509:36:120"
                }
              ]
            },
            "documentation": {
              "id": 39706,
              "nodeType": "StructuredDocumentation",
              "src": "9386:39:120",
              "text": "@dev See {IERC4626-previewMint}. "
            },
            "functionSelector": "b3d7f6b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewMint",
            "nameLocation": "9439:11:120",
            "parameters": {
              "id": 39709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39708,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "9459:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39719,
                  "src": "9451:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9451:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9450:16:120"
            },
            "returnParameters": {
              "id": 39712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39719,
                  "src": "9490:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9490:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9489:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39733,
            "nodeType": "FunctionDefinition",
            "src": "9606:130:120",
            "nodes": [],
            "body": {
              "id": 39732,
              "nodeType": "Block",
              "src": "9679:57:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39729,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39722,
                        "src": "9722:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39727,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "9696:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9706:15:120",
                      "memberName": "previewWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105623,
                      "src": "9696:25:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 39730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9696:33:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39726,
                  "id": 39731,
                  "nodeType": "Return",
                  "src": "9689:40:120"
                }
              ]
            },
            "documentation": {
              "id": 39720,
              "nodeType": "StructuredDocumentation",
              "src": "9558:43:120",
              "text": "@dev See {IERC4626-previewWithdraw}. "
            },
            "functionSelector": "0a28a477",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewWithdraw",
            "nameLocation": "9615:15:120",
            "parameters": {
              "id": 39723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39722,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "9639:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39733,
                  "src": "9631:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9631:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9630:16:120"
            },
            "returnParameters": {
              "id": 39726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39733,
                  "src": "9670:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9670:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9669:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39747,
            "nodeType": "FunctionDefinition",
            "src": "9788:126:120",
            "nodes": [],
            "body": {
              "id": 39746,
              "nodeType": "Block",
              "src": "9859:55:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39743,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39736,
                        "src": "9900:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39741,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "9876:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9886:13:120",
                      "memberName": "previewRedeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105651,
                      "src": "9876:23:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 39744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9876:31:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39740,
                  "id": 39745,
                  "nodeType": "Return",
                  "src": "9869:38:120"
                }
              ]
            },
            "documentation": {
              "id": 39734,
              "nodeType": "StructuredDocumentation",
              "src": "9742:41:120",
              "text": "@dev See {IERC4626-previewRedeem}. "
            },
            "functionSelector": "4cdad506",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewRedeem",
            "nameLocation": "9797:13:120",
            "parameters": {
              "id": 39737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39736,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "9819:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39747,
                  "src": "9811:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9810:16:120"
            },
            "returnParameters": {
              "id": 39740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39739,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39747,
                  "src": "9850:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9850:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9849:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39758,
            "nodeType": "FunctionDefinition",
            "src": "10210:106:120",
            "nodes": [],
            "body": {
              "id": 39757,
              "nodeType": "Block",
              "src": "10265:51:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39753,
                        "name": "vaultRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39152,
                        "src": "10282:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRouter_$40960",
                          "typeString": "contract IVaultRouter"
                        }
                      },
                      "id": 39754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10294:13:120",
                      "memberName": "getUSDBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40899,
                      "src": "10282:25:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10282:27:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39752,
                  "id": 39756,
                  "nodeType": "Return",
                  "src": "10275:34:120"
                }
              ]
            },
            "documentation": {
              "id": 39748,
              "nodeType": "StructuredDocumentation",
              "src": "9920:285:120",
              "text": " @dev This function retrieves the USD balance of the contract calling the function, by calling the getUSDBalance function of the vaultRouter contract.\n It does not take any parameters.\n @return balance The USD balance of the contract calling the function."
            },
            "functionSelector": "c1201054",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUSDBalance",
            "nameLocation": "10219:13:120",
            "parameters": {
              "id": 39749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10232:2:120"
            },
            "returnParameters": {
              "id": 39752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39758,
                  "src": "10256:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10256:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10255:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39769,
            "nodeType": "FunctionDefinition",
            "src": "10789:92:120",
            "nodes": [],
            "body": {
              "id": 39768,
              "nodeType": "Block",
              "src": "10837:44:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39764,
                        "name": "vaultRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39152,
                        "src": "10854:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRouter_$40960",
                          "typeString": "contract IVaultRouter"
                        }
                      },
                      "id": 39765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10866:6:120",
                      "memberName": "getAUM",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40882,
                      "src": "10854:18:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10854:20:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39763,
                  "id": 39767,
                  "nodeType": "Return",
                  "src": "10847:27:120"
                }
              ]
            },
            "documentation": {
              "id": 39759,
              "nodeType": "StructuredDocumentation",
              "src": "10322:462:120",
              "text": " @dev This function allows anyone to retrieve the current assets under management (AUM) of the market.\n The function calls the `getAUM` function of the `vaultRouter` contract, which returns the current AUM of the market as a `uint256`.\n The AUM represents the total value of assets held in the market, including both the LP tokens and any other tokens held by the market.\n @return The current AUM of the market as a `uint256`."
            },
            "functionSelector": "6dc7b0a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAUM",
            "nameLocation": "10798:6:120",
            "parameters": {
              "id": 39760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10804:2:120"
            },
            "returnParameters": {
              "id": 39763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39769,
                  "src": "10828:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10828:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10827:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39780,
            "nodeType": "FunctionDefinition",
            "src": "11173:106:120",
            "nodes": [],
            "body": {
              "id": 39779,
              "nodeType": "Block",
              "src": "11228:51:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39775,
                        "name": "vaultRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39152,
                        "src": "11245:11:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRouter_$40960",
                          "typeString": "contract IVaultRouter"
                        }
                      },
                      "id": 39776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11257:13:120",
                      "memberName": "priceDecimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40904,
                      "src": "11245:25:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11245:27:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39774,
                  "id": 39778,
                  "nodeType": "Return",
                  "src": "11238:34:120"
                }
              ]
            },
            "documentation": {
              "id": 39770,
              "nodeType": "StructuredDocumentation",
              "src": "10887:281:120",
              "text": " @dev This function retrieves the number of decimal places used for price values by calling the priceDecimals function of the vaultRouter contract.\n It does not take any parameters.\n @return decimals The number of decimal places used for price values."
            },
            "functionSelector": "05300b28",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "priceDecimals",
            "nameLocation": "11182:13:120",
            "parameters": {
              "id": 39771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11195:2:120"
            },
            "returnParameters": {
              "id": 39774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39780,
                  "src": "11219:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11219:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11218:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39794,
            "nodeType": "FunctionDefinition",
            "src": "11627:108:120",
            "nodes": [],
            "body": {
              "id": 39793,
              "nodeType": "Block",
              "src": "11694:41:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39789,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39784,
                        "src": "11711:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11717:9:120",
                      "memberName": "sellLpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40627,
                      "src": "11711:15:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11711:17:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39788,
                  "id": 39792,
                  "nodeType": "Return",
                  "src": "11704:24:120"
                }
              ]
            },
            "documentation": {
              "id": 39781,
              "nodeType": "StructuredDocumentation",
              "src": "11285:337:120",
              "text": " @dev This function retrieves the sell LP fee of a CoreVault contract, by calling the sellLpFee function of the specified CoreVault contract passed as a parameter.\n @param vault The CoreVault contract from which the sell LP fee is retrieved.\n @return fee The sell LP fee of the specified CoreVault contract."
            },
            "functionSelector": "eb4fe818",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellLpFee",
            "nameLocation": "11636:9:120",
            "parameters": {
              "id": 39785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39784,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "11657:5:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39794,
                  "src": "11646:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICoreVault_$40666",
                    "typeString": "contract ICoreVault"
                  },
                  "typeName": {
                    "id": 39783,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39782,
                      "name": "ICoreVault",
                      "nameLocations": [
                        "11646:10:120"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40666,
                      "src": "11646:10:120"
                    },
                    "referencedDeclaration": 40666,
                    "src": "11646:10:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11645:18:120"
            },
            "returnParameters": {
              "id": 39788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39787,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39794,
                  "src": "11685:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11685:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11684:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39808,
            "nodeType": "FunctionDefinition",
            "src": "12303:106:120",
            "nodes": [],
            "body": {
              "id": 39807,
              "nodeType": "Block",
              "src": "12369:40:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39803,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39798,
                        "src": "12386:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12392:8:120",
                      "memberName": "buyLpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40632,
                      "src": "12386:14:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12386:16:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39802,
                  "id": 39806,
                  "nodeType": "Return",
                  "src": "12379:23:120"
                }
              ]
            },
            "documentation": {
              "id": 39795,
              "nodeType": "StructuredDocumentation",
              "src": "11741:557:120",
              "text": " @dev This function is part of an interface and is used to retrieve the fee required to buy LP tokens in a market.\n The function takes in a `CoreVault` parameter representing the CoreVault contract of the market being queried.\n The function calls the `buyLpFee` function of the `vault` parameter, which returns the fee required to buy LP tokens in the market as a `uint256`.\n @param vault The `CoreVault` contract of the market being queried.\n @return The fee required to buy LP tokens in the market as a `uint256`."
            },
            "functionSelector": "d53b26ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyLpFee",
            "nameLocation": "12312:8:120",
            "parameters": {
              "id": 39799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39798,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "12332:5:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39808,
                  "src": "12321:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICoreVault_$40666",
                    "typeString": "contract ICoreVault"
                  },
                  "typeName": {
                    "id": 39797,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39796,
                      "name": "ICoreVault",
                      "nameLocations": [
                        "12321:10:120"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40666,
                      "src": "12321:10:120"
                    },
                    "referencedDeclaration": 40666,
                    "src": "12321:10:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12320:18:120"
            },
            "returnParameters": {
              "id": 39802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39801,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39808,
                  "src": "12360:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12360:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12359:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39821,
            "nodeType": "FunctionDefinition",
            "src": "12415:91:120",
            "nodes": [],
            "body": {
              "id": 39820,
              "nodeType": "Block",
              "src": "12479:27:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39816,
                      "name": "apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39158,
                      "src": "12489:3:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39817,
                      "name": "_apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39810,
                      "src": "12495:4:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12489:10:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39819,
                  "nodeType": "ExpressionStatement",
                  "src": "12489:10:120"
                }
              ]
            },
            "functionSelector": "854303cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 39813,
                    "name": "VAULT_MGR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "12463:14:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 39814,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39812,
                  "name": "onlyRole",
                  "nameLocations": [
                    "12454:8:120"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105009,
                  "src": "12454:8:120"
                },
                "nodeType": "ModifierInvocation",
                "src": "12454:24:120"
              }
            ],
            "name": "setAPR",
            "nameLocation": "12424:6:120",
            "parameters": {
              "id": 39811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39810,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "12439:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39821,
                  "src": "12431:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12431:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12430:14:120"
            },
            "returnParameters": {
              "id": 39815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12479:0:120"
            },
            "scope": 39950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39829,
            "nodeType": "FunctionDefinition",
            "src": "12512:77:120",
            "nodes": [],
            "body": {
              "id": 39828,
              "nodeType": "Block",
              "src": "12562:27:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39826,
                    "name": "apr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39158,
                    "src": "12579:3:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39825,
                  "id": 39827,
                  "nodeType": "Return",
                  "src": "12572:10:120"
                }
              ]
            },
            "functionSelector": "c89d5b8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAPR",
            "nameLocation": "12521:6:120",
            "parameters": {
              "id": 39822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12527:2:120"
            },
            "returnParameters": {
              "id": 39825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39829,
                  "src": "12553:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12553:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12552:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39842,
            "nodeType": "FunctionDefinition",
            "src": "13001:136:120",
            "nodes": [],
            "body": {
              "id": 39841,
              "nodeType": "Block",
              "src": "13062:75:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 39836,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39156,
                            "src": "13098:11:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 39835,
                          "name": "IRewardDistributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40696,
                          "src": "13079:18:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRewardDistributor_$40696_$",
                            "typeString": "type(contract IRewardDistributor)"
                          }
                        },
                        "id": 39837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13079:31:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardDistributor_$40696",
                          "typeString": "contract IRewardDistributor"
                        }
                      },
                      "id": 39838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13111:17:120",
                      "memberName": "tokensPerInterval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40695,
                      "src": "13079:49:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13079:51:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39834,
                  "id": 39840,
                  "nodeType": "Return",
                  "src": "13072:58:120"
                }
              ]
            },
            "documentation": {
              "id": 39830,
              "nodeType": "StructuredDocumentation",
              "src": "12595:401:120",
              "text": " @dev This function is used to retrieve the number of reward tokens distributed per interval in a market.\n The function calls the `tokensPerInterval` function of the `IRewardDistributor` contract, which returns the number of reward tokens distributed per interval as a `uint256`.\n @return The number of reward tokens distributed per interval in the market as a `uint256`."
            },
            "functionSelector": "a8d93627",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensPerInterval",
            "nameLocation": "13010:17:120",
            "parameters": {
              "id": 39831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13027:2:120"
            },
            "returnParameters": {
              "id": 39834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39842,
                  "src": "13053:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13053:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13052:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39852,
            "nodeType": "FunctionDefinition",
            "src": "13143:94:120",
            "nodes": [],
            "body": {
              "id": 39851,
              "nodeType": "Block",
              "src": "13196:41:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39847,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "13213:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13223:5:120",
                      "memberName": "asset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105533,
                      "src": "13213:15:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 39849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13213:17:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 39846,
                  "id": 39850,
                  "nodeType": "Return",
                  "src": "13206:24:120"
                }
              ]
            },
            "functionSelector": "f7c618c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardToken",
            "nameLocation": "13152:11:120",
            "parameters": {
              "id": 39843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13163:2:120"
            },
            "returnParameters": {
              "id": 39846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39852,
                  "src": "13187:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13187:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13186:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39863,
            "nodeType": "FunctionDefinition",
            "src": "13243:103:120",
            "nodes": [],
            "body": {
              "id": 39862,
              "nodeType": "Block",
              "src": "13301:45:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 39858,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13328:3:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 39859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13332:6:120",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13328:10:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39857,
                      "name": "claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39932,
                      "src": "13318:9:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 39860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13318:21:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39856,
                  "id": 39861,
                  "nodeType": "Return",
                  "src": "13311:28:120"
                }
              ]
            },
            "functionSelector": "eded3fda",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingRewards",
            "nameLocation": "13252:14:120",
            "parameters": {
              "id": 39853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13266:2:120"
            },
            "returnParameters": {
              "id": 39856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39863,
                  "src": "13292:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13292:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13291:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39932,
            "nodeType": "FunctionDefinition",
            "src": "14695:862:120",
            "nodes": [],
            "body": {
              "id": 39931,
              "nodeType": "Block",
              "src": "14762:795:120",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39872,
                      "mutability": "mutable",
                      "name": "stakedAmount",
                      "nameLocation": "14780:12:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39931,
                      "src": "14772:20:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14772:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39876,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 39874,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39866,
                        "src": "14809:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39873,
                      "name": "stakedAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39945,
                      "src": "14795:13:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 39875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14795:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14772:46:120"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39877,
                      "name": "stakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39872,
                      "src": "14832:12:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 39878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14848:1:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14832:17:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39885,
                  "nodeType": "IfStatement",
                  "src": "14828:80:120",
                  "trueBody": {
                    "id": 39884,
                    "nodeType": "Block",
                    "src": "14851:57:120",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 39880,
                            "name": "claimableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39170,
                            "src": "14872:15:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 39882,
                          "indexExpression": {
                            "id": 39881,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39866,
                            "src": "14888:8:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14872:25:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 39870,
                        "id": 39883,
                        "nodeType": "Return",
                        "src": "14865:32:120"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    39887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39887,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "14925:6:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39931,
                      "src": "14917:14:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39886,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14917:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39891,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39888,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "14934:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14944:11:120",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107240,
                      "src": "14934:21:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14934:23:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14917:40:120"
                },
                {
                  "assignments": [
                    39893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39893,
                      "mutability": "mutable",
                      "name": "_pendingRewards",
                      "nameLocation": "14975:15:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39931,
                      "src": "14967:23:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39892,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14967:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39902,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 39900,
                        "name": "PRECISION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39143,
                        "src": "15072:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 39895,
                                "name": "distributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39156,
                                "src": "15012:11:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 39894,
                              "name": "IRewardDistributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40696,
                              "src": "14993:18:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRewardDistributor_$40696_$",
                                "typeString": "type(contract IRewardDistributor)"
                              }
                            },
                            "id": 39896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14993:31:120",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewardDistributor_$40696",
                              "typeString": "contract IRewardDistributor"
                            }
                          },
                          "id": 39897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15038:14:120",
                          "memberName": "pendingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40680,
                          "src": "14993:59:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 39898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14993:61:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 39899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15068:3:120",
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 112935,
                      "src": "14993:78:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 39901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14993:89:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14967:115:120"
                },
                {
                  "assignments": [
                    39904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39904,
                      "mutability": "mutable",
                      "name": "nextCumulativeRewardPerToken",
                      "nameLocation": "15100:28:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 39931,
                      "src": "15092:36:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39903,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15092:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39912,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39909,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39887,
                            "src": "15193:6:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 39907,
                            "name": "_pendingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39893,
                            "src": "15173:15:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 39908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15189:3:120",
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 112950,
                          "src": "15173:19:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 39910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15173:27:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39905,
                        "name": "cumulativeRewardPerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39154,
                        "src": "15131:24:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 39906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15156:3:120",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 112905,
                      "src": "15131:28:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 39911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15131:79:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15092:118:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39927,
                            "name": "PRECISION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39143,
                            "src": "15526:9:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 39921,
                                      "name": "previousCumulatedRewardPerToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39162,
                                      "src": "15411:31:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 39923,
                                    "indexExpression": {
                                      "id": 39922,
                                      "name": "_account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39866,
                                      "src": "15443:8:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15411:41:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 39919,
                                    "name": "nextCumulativeRewardPerToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39904,
                                    "src": "15349:28:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 39920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15378:3:120",
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 112920,
                                  "src": "15349:32:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 39924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15349:129:120",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 39917,
                                "name": "stakedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39872,
                                "src": "15286:12:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 39918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15320:3:120",
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 112935,
                              "src": "15286:37:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 39925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15286:214:120",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 39926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15522:3:120",
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 112950,
                          "src": "15286:239:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 39928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15286:250:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 39913,
                          "name": "claimableReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39170,
                          "src": "15239:15:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 39915,
                        "indexExpression": {
                          "id": 39914,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39866,
                          "src": "15255:8:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15239:25:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 39916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15265:3:120",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 112905,
                      "src": "15239:29:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 39929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15239:311:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39870,
                  "id": 39930,
                  "nodeType": "Return",
                  "src": "15220:330:120"
                }
              ]
            },
            "documentation": {
              "id": 39864,
              "nodeType": "StructuredDocumentation",
              "src": "13352:1338:120",
              "text": " @dev This function is used to retrieve the amount of rewards claimable by a user in a market.\n The function calculates the amount of claimable rewards by first retrieving the user's staked amount in the market from the `stakedAmounts` mapping.\n If the user has no stake, the function returns the previously claimed reward amount stored in the `claimableReward` mapping.\n Otherwise, the function retrieves the total supply of LP tokens in the market from the `coreVault` contract and the total pending rewards from the `IRewardDistributor` contract.\n The pending rewards are then multiplied by the `PRECISION` constant and added to the `cumulativeRewardPerToken` variable to calculate the next cumulative reward per token value.\n The difference between the new cumulative reward per token value and the previous one stored in the `previousCumulatedRewardPerToken` mapping for the user is multiplied by the user's staked amount and divided by the `PRECISION` constant to calculate the claimable reward amount.\n Finally, the function returns the sum of the user's previously claimed reward amount and the newly calculated claimable reward amount.\n @param _account The user's account address.\n @return The amount of rewards claimable by the user in the market as a `uint256`."
            },
            "functionSelector": "402914f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimable",
            "nameLocation": "14704:9:120",
            "parameters": {
              "id": 39867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39866,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "14722:8:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39932,
                  "src": "14714:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14714:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14713:18:120"
            },
            "returnParameters": {
              "id": 39870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39932,
                  "src": "14753:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14753:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14752:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39945,
            "nodeType": "FunctionDefinition",
            "src": "15563:125:120",
            "nodes": [],
            "body": {
              "id": 39944,
              "nodeType": "Block",
              "src": "15635:53:120",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39941,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39934,
                        "src": "15672:8:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 39939,
                        "name": "coreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39149,
                        "src": "15652:9:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 39940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15662:9:120",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107248,
                      "src": "15652:19:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 39942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15652:29:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39938,
                  "id": 39943,
                  "nodeType": "Return",
                  "src": "15645:36:120"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakedAmounts",
            "nameLocation": "15572:13:120",
            "parameters": {
              "id": 39935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39934,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "15594:8:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 39945,
                  "src": "15586:16:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15586:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15585:18:120"
            },
            "returnParameters": {
              "id": 39938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39937,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39945,
                  "src": "15626:7:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15626:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15625:9:120"
            },
            "scope": 39950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 39949,
            "nodeType": "VariableDeclaration",
            "src": "15694:29:120",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "15714:9:120",
            "scope": 39950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 39946,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "15694:7:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 39948,
              "length": {
                "hexValue": "3530",
                "id": 39947,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "15702:2:120",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "15694:11:120",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39127,
              "name": "AcUpgradable",
              "nameLocations": [
                "782:12:120"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 273,
              "src": "782:12:120"
            },
            "id": 39128,
            "nodeType": "InheritanceSpecifier",
            "src": "782:12:120"
          },
          {
            "baseName": {
              "id": 39129,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "796:15:120"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106626,
              "src": "796:15:120"
            },
            "id": 39130,
            "nodeType": "InheritanceSpecifier",
            "src": "796:15:120"
          }
        ],
        "canonicalName": "VaultReward",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39950,
          106626,
          273,
          103283,
          105472,
          105286,
          110310,
          110322,
          105359,
          109087
        ],
        "name": "VaultReward",
        "nameLocation": "767:11:120",
        "scope": 39951,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 120
}
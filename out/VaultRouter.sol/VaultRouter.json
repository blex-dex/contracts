{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalFundsUsed",
          "type": "uint256"
        }
      ],
      "name": "FundsUsedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isFreeze",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "freezeType",
          "type": "uint256"
        }
      ],
      "name": "LogIsFreeze",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "MarketRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "MarketSetted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrowFromVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "buyLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "coreVault",
      "outputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRouter",
      "outputs": [
        {
          "internalType": "contract IFeeRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fundsUsed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalPnl",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "grantControllerRoleByMarketManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_coreVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeRouter",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFreezeAccouting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFreezeTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "marketVaults",
      "outputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        }
      ],
      "name": "removeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "repayToVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "sellLpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "f",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "freezeType",
          "type": "uint256"
        }
      ],
      "name": "setIsFreeze",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "setMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFundsUsed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFromVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferToVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICoreVault",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultMarkets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600a805460ff19908116909155600f8054909116905534801561002657600080fd5b506100303361003a565b600160035561008c565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611d5c8061009b6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806389a71faa1161011a578063c6aee618116100ad578063db9132361161007c578063db91323614610454578063e108262f14610467578063eb4fe8181461047a578063f29ebf611461048d578063f2fde38b146104a057600080fd5b8063c6aee61814610408578063d53b26ee1461041b578063d547741f1461042e578063da8ddc741461044157600080fd5b8063a217fddf116100e9578063a217fddf146103d8578063a59e73e8146103e0578063a7c1daa4146103ed578063c12010541461040057600080fd5b806389a71faa146103785780638da5cb5b1461038b57806391d148541461039c57806392106cbb146103af57600080fd5b806336568abe1161019d5780636dc7b0a11161016c5780636dc7b0a11461033a5780636f2a14c514610342578063715018a61461034a57806375829def146103525780637fe4a6981461036557600080fd5b806336568abe146102c5578063485cc955146102d357806361b314cb146102e6578063674ce1b51461032757600080fd5b8063290f5e49116101d9578063290f5e49146102705780632b8a0012146102855780632f2ff15d146102a55780633001a9a2146102b857600080fd5b806301ffc9a71461020b57806305300b281461023357806311a2ad4914610244578063248a9ca31461024d575b600080fd5b61021e61021936600461196b565b6104b3565b60405190151581526020015b60405180910390f35b60085b60405190815260200161022a565b610236600b5481565b61023661025b366004611995565b60009081526020819052604090206001015490565b61028361027e3660046119bc565b6104ea565b005b6102366102933660046119fd565b600c6020526000908152604090205481565b6102836102b3366004611a1a565b610633565b600f5461021e9060ff1681565b610283610206366004611a1a565b6102836102e1366004611a4a565b61065d565b61030f6102f43660046119fd565b600e602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161022a565b60055461030f906001600160a01b031681565b6102366107b8565b610236610809565b6102836108c5565b6102836103603660046119fd565b6108d9565b6102836103733660046119fd565b61094d565b610283610386366004611a78565b610977565b6001546001600160a01b031661030f565b61021e6103aa366004611a1a565b610a38565b61030f6103bd3660046119fd565b600d602052600090815260409020546001600160a01b031681565b610236600081565b600a5461021e9060ff1681565b6102836103fb366004611a4a565b610a61565b610236610b46565b610283610416366004611995565b610c6e565b6102366104293660046119fd565b610ced565b61028361043c366004611a1a565b610d5a565b61028361044f366004611a78565b610d7f565b6102836104623660046119fd565b610e34565b610283610475366004611995565b610f2e565b6102366104883660046119fd565b610faa565b60045461030f906001600160a01b031681565b6102836104ae3660046119fd565b610fda565b60006001600160e01b03198216637965db0b60e01b14806104e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6105137f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363611050565b600381106105565760405162461bcd60e51b815260206004820152600b60248201526a21667265657a655479706560a81b60448201526064015b60405180910390fd5b806000036105c25760055460405163c4cc8bbb60e01b815283151560048201526001600160a01b039091169063c4cc8bbb90602401600060405180830381600087803b1580156105a557600080fd5b505af11580156105b9573d6000803e3d6000fd5b505050506105f4565b806001036105dd57600a805460ff19168315151790556105f4565b806002036105f457600f805460ff19168315151790555b604080518315158152602081018390527f32a2e913e263febe3421a6e85924137ecf50c1aaec4f37b3deec772651f21fcd910160405180910390a15050565b60008281526020819052604090206001015461064e81611050565b610658838361105a565b505050565b600154600160a81b900460ff1615808015610683575060018054600160a01b900460ff16105b806106a35750303b1580156106a3575060018054600160a01b900460ff16145b6107065760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161054d565b6001805460ff60a01b1916600160a01b1790558015610733576001805460ff60a81b1916600160a81b1790555b61073c336110de565b600580546001600160a01b038086166001600160a01b03199283161790925560048054928516929091169190911790558015610658576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a1505050565b6000806107c3610809565b905060006107cf610b46565b90506000808313156107ec576107e58383611aac565b9050610802565b6107f583611abf565b6107ff9083611adb565b90505b9392505050565b6000806108166006611101565b90506000805b82518110156108be5782818151811061083757610837611aee565b60200260200101516001600160a01b03166393a98e6c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a09190611b04565b6108aa9083611b1d565b9150806108b681611b45565b91505061081c565b5092915050565b6108cd61110e565b6108d76000611168565b565b60006108e481611050565b6001600160a01b03821661092a5760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b604482015260640161054d565b6109356000836111ba565b61093e82611168565b6109496000336111c4565b5050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b761020681611050565b61098e600080516020611d07833981519152611050565b600a5460ff16156109b15760405162461bcd60e51b815260040161054d90611b5e565b336000908152600d60209081526040918290205482516338d52e0f60e01b815292516001600160a01b03909116926106589284926338d52e0f9260048082019392918290030181865afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190611b8a565b848385611229565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7fde57aa0116fb656e0ab30962f03bb7a49dccfb8fac7bf6a5cf94d0d56d0e7337610a8b81611050565b610a96600684611289565b610a9f57600080fd5b6001600160a01b038084166000818152600d6020908152604080832080549588166001600160a01b031996871681179091558352600e90915290208054909216179055610aed600883611289565b50610b06600080516020611d078339815191528461105a565b604080516001600160a01b038086168252841660208201527f4dd2648b8febf05ec183e673f430b81feb098c55a6622cae1d6ab6a495b38c7591016107ab565b600080610b536008611101565b90506000805b82518110156108be576000838281518110610b7657610b76611aee565b60200260200101519050806001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611b8a565b6040516370a0823160e01b81526001600160a01b03838116600483015291909116906370a0823190602401602060405180830381865afa158015610c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4e9190611b04565b610c589084611adb565b9250508080610c6690611b45565b915050610b59565b610c7960063361129e565b610cbb5760405162461bcd60e51b815260206004820152601360248201527215985d5b1d149bdd5d195c8e885b585c9ad95d606a1b604482015260640161054d565b600f5460ff1615610cde5760405162461bcd60e51b815260040161054d90611b5e565b610cea338260016112c0565b50565b604051632e7e841560e01b8152600160048201526000906001600160a01b03831690632e7e8415906024015b602060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190611b04565b600082815260208190526040902060010154610d7581611050565b61065883836111c4565b610d96600080516020611d07833981519152611050565b600a5460ff1615610db95760405162461bcd60e51b815260040161054d90611b5e565b336000908152600d60205260409081902054905163061d86f960e11b81526001600160a01b03848116600483015260248201849052909116908190630c3b0df290604401600060405180830381600087803b158015610e1757600080fd5b505af1158015610e2b573d6000803e3d6000fd5b50505050505050565b7fcb6bc1c12dd43bca8d7dd46d975f913325437d0dcd5978e99d515e4ad39b9772610e5e81611050565b610e696006836113b7565b506001600160a01b038083166000908152600d602052604090205416610e906008826113b7565b506001600160a01b038084166000818152600d6020818152604080842080549096168452600e8252832080546001600160a01b03199081169091559390925290528154169055610eee600080516020611d07833981519152846111c4565b604080516001600160a01b038086168252831660208201527fe53458cf1e128fd9dd751ec85180c9b93f69b6b6add116d5238cb46f90268d6791016107ab565b610f3960063361129e565b610f7b5760405162461bcd60e51b815260206004820152601360248201527215985d5b1d149bdd5d195c8e885b585c9ad95d606a1b604482015260640161054d565b600f5460ff1615610f9e5760405162461bcd60e51b815260040161054d90611b5e565b610cea338260006112c0565b604051632e7e841560e01b8152600060048201819052906001600160a01b03831690632e7e841590602401610d19565b610fe261110e565b6001600160a01b0381166110475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054d565b610cea81611168565b610cea81336113cc565b6110648282610a38565b610949576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561109a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b426002556110eb33611168565b6110f66000336111ba565b610cea6000826111ba565b6060600061080283611425565b6001546001600160a01b031633146108d75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610949828261105a565b6111ce8282610a38565b15610949576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611283908590611481565b50505050565b6000610802836001600160a01b038416611556565b6001600160a01b03811660009081526001830160205260408120541515610802565b801561131057600082600b546112d69190611adb565b6001600160a01b0385166000908152600c6020526040812080549293508592909190611303908490611adb565b9091555050600b55611357565b6001600160a01b0383166000908152600c602052604081208054849290611338908490611aac565b9250508190555081600b60008282546113519190611aac565b90915550505b6001600160a01b0383166000818152600c60205260409081902054600b5491517f128f29b8f021c76a97203bea2d9fa18e1a05034b92c6232990dd75a7e447f649926113aa928252602082015260400190565b60405180910390a2505050565b6000610802836001600160a01b0384166115a5565b6113d68282610a38565b610949576113e381611698565b6113ee8360206116aa565b6040516020016113ff929190611bcb565b60408051601f198184030181529082905262461bcd60e51b825261054d91600401611c40565b60608160000180548060200260200160405190810160405280929190818152602001828054801561147557602002820191906000526020600020905b815481526020019060010190808311611461575b50505050509050919050565b60006114d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118469092919063ffffffff16565b90508051600014806114f75750808060200190518101906114f79190611c73565b6106585760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161054d565b600081815260018301602052604081205461159d575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104e4565b5060006104e4565b6000818152600183016020526040812054801561168e5760006115c9600183611aac565b85549091506000906115dd90600190611aac565b90508181146116425760008660000182815481106115fd576115fd611aee565b906000526020600020015490508087600001848154811061162057611620611aee565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061165357611653611c90565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104e4565b60009150506104e4565b60606104e46001600160a01b03831660145b606060006116b9836002611ca6565b6116c4906002611adb565b67ffffffffffffffff8111156116dc576116dc611cbd565b6040519080825280601f01601f191660200182016040528015611706576020820181803683370190505b509050600360fc1b8160008151811061172157611721611aee565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061175057611750611aee565b60200101906001600160f81b031916908160001a9053506000611774846002611ca6565b61177f906001611adb565b90505b60018111156117f7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117b3576117b3611aee565b1a60f81b8282815181106117c9576117c9611aee565b60200101906001600160f81b031916908160001a90535060049490941c936117f081611cd3565b9050611782565b5083156108025760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161054d565b60606107ff848460008585600080866001600160a01b0316858760405161186d9190611cea565b60006040518083038185875af1925050503d80600081146118aa576040519150601f19603f3d011682016040523d82523d6000602084013e6118af565b606091505b50915091506118c0878383876118cd565b925050505b949350505050565b6060831561193c578251600003611935576001600160a01b0385163b6119355760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161054d565b50816118c5565b6118c583838151156119515781518083602001fd5b8060405162461bcd60e51b815260040161054d9190611c40565b60006020828403121561197d57600080fd5b81356001600160e01b03198116811461080257600080fd5b6000602082840312156119a757600080fd5b5035919050565b8015158114610cea57600080fd5b600080604083850312156119cf57600080fd5b82356119da816119ae565b946020939093013593505050565b6001600160a01b0381168114610cea57600080fd5b600060208284031215611a0f57600080fd5b8135610802816119e8565b60008060408385031215611a2d57600080fd5b823591506020830135611a3f816119e8565b809150509250929050565b60008060408385031215611a5d57600080fd5b8235611a68816119e8565b91506020830135611a3f816119e8565b60008060408385031215611a8b57600080fd5b82356119da816119e8565b634e487b7160e01b600052601160045260246000fd5b818103818111156104e4576104e4611a96565b6000600160ff1b8201611ad457611ad4611a96565b5060000390565b808201808211156104e4576104e4611a96565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b1657600080fd5b5051919050565b8082018281126000831280158216821582161715611b3d57611b3d611a96565b505092915050565b600060018201611b5757611b57611a96565b5060010190565b6020808252601290820152715661756c74526f757465723a667265657a6560701b604082015260600190565b600060208284031215611b9c57600080fd5b8151610802816119e8565b60005b83811015611bc2578181015183820152602001611baa565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611c03816017850160208801611ba7565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611c34816028840160208801611ba7565b01602801949350505050565b6020815260008251806020840152611c5f816040850160208701611ba7565b601f01601f19169190910160400192915050565b600060208284031215611c8557600080fd5b8151610802816119ae565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176104e4576104e4611a96565b634e487b7160e01b600052604160045260246000fd5b600081611ce257611ce2611a96565b506000190190565b60008251611cfc818460208701611ba7565b919091019291505056fecb58d6d985142a614029cdf01861b4fe094d5919a47e69b8310dc4093d9d6ad0a2646970667358221220a1b228d342b23cf895dd4d12ee135359730447315bf574aec0568fd2584be18164736f6c63430008110033",
    "sourceMap": "750:9348:121:-:0;;;1055:36;;;-1:-1:-1;;1055:36:121;;;;;;1295:37;;;;;;;;750:9348;;;;;;;;;-1:-1:-1;936:32:175;719:10:201;936:18:175;:32::i;:::-;1716:1:187;1821:7;:22;750:9348:121;;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;750:9348:121:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c806389a71faa1161011a578063c6aee618116100ad578063db9132361161007c578063db91323614610454578063e108262f14610467578063eb4fe8181461047a578063f29ebf611461048d578063f2fde38b146104a057600080fd5b8063c6aee61814610408578063d53b26ee1461041b578063d547741f1461042e578063da8ddc741461044157600080fd5b8063a217fddf116100e9578063a217fddf146103d8578063a59e73e8146103e0578063a7c1daa4146103ed578063c12010541461040057600080fd5b806389a71faa146103785780638da5cb5b1461038b57806391d148541461039c57806392106cbb146103af57600080fd5b806336568abe1161019d5780636dc7b0a11161016c5780636dc7b0a11461033a5780636f2a14c514610342578063715018a61461034a57806375829def146103525780637fe4a6981461036557600080fd5b806336568abe146102c5578063485cc955146102d357806361b314cb146102e6578063674ce1b51461032757600080fd5b8063290f5e49116101d9578063290f5e49146102705780632b8a0012146102855780632f2ff15d146102a55780633001a9a2146102b857600080fd5b806301ffc9a71461020b57806305300b281461023357806311a2ad4914610244578063248a9ca31461024d575b600080fd5b61021e61021936600461196b565b6104b3565b60405190151581526020015b60405180910390f35b60085b60405190815260200161022a565b610236600b5481565b61023661025b366004611995565b60009081526020819052604090206001015490565b61028361027e3660046119bc565b6104ea565b005b6102366102933660046119fd565b600c6020526000908152604090205481565b6102836102b3366004611a1a565b610633565b600f5461021e9060ff1681565b610283610206366004611a1a565b6102836102e1366004611a4a565b61065d565b61030f6102f43660046119fd565b600e602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161022a565b60055461030f906001600160a01b031681565b6102366107b8565b610236610809565b6102836108c5565b6102836103603660046119fd565b6108d9565b6102836103733660046119fd565b61094d565b610283610386366004611a78565b610977565b6001546001600160a01b031661030f565b61021e6103aa366004611a1a565b610a38565b61030f6103bd3660046119fd565b600d602052600090815260409020546001600160a01b031681565b610236600081565b600a5461021e9060ff1681565b6102836103fb366004611a4a565b610a61565b610236610b46565b610283610416366004611995565b610c6e565b6102366104293660046119fd565b610ced565b61028361043c366004611a1a565b610d5a565b61028361044f366004611a78565b610d7f565b6102836104623660046119fd565b610e34565b610283610475366004611995565b610f2e565b6102366104883660046119fd565b610faa565b60045461030f906001600160a01b031681565b6102836104ae3660046119fd565b610fda565b60006001600160e01b03198216637965db0b60e01b14806104e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6105137f92de27771f92d6942691d73358b3a4673e4880de8356f8f2cf452be87e02d363611050565b600381106105565760405162461bcd60e51b815260206004820152600b60248201526a21667265657a655479706560a81b60448201526064015b60405180910390fd5b806000036105c25760055460405163c4cc8bbb60e01b815283151560048201526001600160a01b039091169063c4cc8bbb90602401600060405180830381600087803b1580156105a557600080fd5b505af11580156105b9573d6000803e3d6000fd5b505050506105f4565b806001036105dd57600a805460ff19168315151790556105f4565b806002036105f457600f805460ff19168315151790555b604080518315158152602081018390527f32a2e913e263febe3421a6e85924137ecf50c1aaec4f37b3deec772651f21fcd910160405180910390a15050565b60008281526020819052604090206001015461064e81611050565b610658838361105a565b505050565b600154600160a81b900460ff1615808015610683575060018054600160a01b900460ff16105b806106a35750303b1580156106a3575060018054600160a01b900460ff16145b6107065760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161054d565b6001805460ff60a01b1916600160a01b1790558015610733576001805460ff60a81b1916600160a81b1790555b61073c336110de565b600580546001600160a01b038086166001600160a01b03199283161790925560048054928516929091169190911790558015610658576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a1505050565b6000806107c3610809565b905060006107cf610b46565b90506000808313156107ec576107e58383611aac565b9050610802565b6107f583611abf565b6107ff9083611adb565b90505b9392505050565b6000806108166006611101565b90506000805b82518110156108be5782818151811061083757610837611aee565b60200260200101516001600160a01b03166393a98e6c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a09190611b04565b6108aa9083611b1d565b9150806108b681611b45565b91505061081c565b5092915050565b6108cd61110e565b6108d76000611168565b565b60006108e481611050565b6001600160a01b03821661092a5760405162461bcd60e51b815260206004820152600d60248201526c217a65726f206164647265737360981b604482015260640161054d565b6109356000836111ba565b61093e82611168565b6109496000336111c4565b5050565b7f8d1089725c0dc266707fa6207730fb801dcd03108bfed7a21099bd303651d2b761020681611050565b61098e600080516020611d07833981519152611050565b600a5460ff16156109b15760405162461bcd60e51b815260040161054d90611b5e565b336000908152600d60209081526040918290205482516338d52e0f60e01b815292516001600160a01b03909116926106589284926338d52e0f9260048082019392918290030181865afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190611b8a565b848385611229565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7fde57aa0116fb656e0ab30962f03bb7a49dccfb8fac7bf6a5cf94d0d56d0e7337610a8b81611050565b610a96600684611289565b610a9f57600080fd5b6001600160a01b038084166000818152600d6020908152604080832080549588166001600160a01b031996871681179091558352600e90915290208054909216179055610aed600883611289565b50610b06600080516020611d078339815191528461105a565b604080516001600160a01b038086168252841660208201527f4dd2648b8febf05ec183e673f430b81feb098c55a6622cae1d6ab6a495b38c7591016107ab565b600080610b536008611101565b90506000805b82518110156108be576000838281518110610b7657610b76611aee565b60200260200101519050806001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611b8a565b6040516370a0823160e01b81526001600160a01b03838116600483015291909116906370a0823190602401602060405180830381865afa158015610c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4e9190611b04565b610c589084611adb565b9250508080610c6690611b45565b915050610b59565b610c7960063361129e565b610cbb5760405162461bcd60e51b815260206004820152601360248201527215985d5b1d149bdd5d195c8e885b585c9ad95d606a1b604482015260640161054d565b600f5460ff1615610cde5760405162461bcd60e51b815260040161054d90611b5e565b610cea338260016112c0565b50565b604051632e7e841560e01b8152600160048201526000906001600160a01b03831690632e7e8415906024015b602060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190611b04565b600082815260208190526040902060010154610d7581611050565b61065883836111c4565b610d96600080516020611d07833981519152611050565b600a5460ff1615610db95760405162461bcd60e51b815260040161054d90611b5e565b336000908152600d60205260409081902054905163061d86f960e11b81526001600160a01b03848116600483015260248201849052909116908190630c3b0df290604401600060405180830381600087803b158015610e1757600080fd5b505af1158015610e2b573d6000803e3d6000fd5b50505050505050565b7fcb6bc1c12dd43bca8d7dd46d975f913325437d0dcd5978e99d515e4ad39b9772610e5e81611050565b610e696006836113b7565b506001600160a01b038083166000908152600d602052604090205416610e906008826113b7565b506001600160a01b038084166000818152600d6020818152604080842080549096168452600e8252832080546001600160a01b03199081169091559390925290528154169055610eee600080516020611d07833981519152846111c4565b604080516001600160a01b038086168252831660208201527fe53458cf1e128fd9dd751ec85180c9b93f69b6b6add116d5238cb46f90268d6791016107ab565b610f3960063361129e565b610f7b5760405162461bcd60e51b815260206004820152601360248201527215985d5b1d149bdd5d195c8e885b585c9ad95d606a1b604482015260640161054d565b600f5460ff1615610f9e5760405162461bcd60e51b815260040161054d90611b5e565b610cea338260006112c0565b604051632e7e841560e01b8152600060048201819052906001600160a01b03831690632e7e841590602401610d19565b610fe261110e565b6001600160a01b0381166110475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054d565b610cea81611168565b610cea81336113cc565b6110648282610a38565b610949576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561109a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b426002556110eb33611168565b6110f66000336111ba565b610cea6000826111ba565b6060600061080283611425565b6001546001600160a01b031633146108d75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161054d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610949828261105a565b6111ce8282610a38565b15610949576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611283908590611481565b50505050565b6000610802836001600160a01b038416611556565b6001600160a01b03811660009081526001830160205260408120541515610802565b801561131057600082600b546112d69190611adb565b6001600160a01b0385166000908152600c6020526040812080549293508592909190611303908490611adb565b9091555050600b55611357565b6001600160a01b0383166000908152600c602052604081208054849290611338908490611aac565b9250508190555081600b60008282546113519190611aac565b90915550505b6001600160a01b0383166000818152600c60205260409081902054600b5491517f128f29b8f021c76a97203bea2d9fa18e1a05034b92c6232990dd75a7e447f649926113aa928252602082015260400190565b60405180910390a2505050565b6000610802836001600160a01b0384166115a5565b6113d68282610a38565b610949576113e381611698565b6113ee8360206116aa565b6040516020016113ff929190611bcb565b60408051601f198184030181529082905262461bcd60e51b825261054d91600401611c40565b60608160000180548060200260200160405190810160405280929190818152602001828054801561147557602002820191906000526020600020905b815481526020019060010190808311611461575b50505050509050919050565b60006114d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118469092919063ffffffff16565b90508051600014806114f75750808060200190518101906114f79190611c73565b6106585760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161054d565b600081815260018301602052604081205461159d575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104e4565b5060006104e4565b6000818152600183016020526040812054801561168e5760006115c9600183611aac565b85549091506000906115dd90600190611aac565b90508181146116425760008660000182815481106115fd576115fd611aee565b906000526020600020015490508087600001848154811061162057611620611aee565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061165357611653611c90565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104e4565b60009150506104e4565b60606104e46001600160a01b03831660145b606060006116b9836002611ca6565b6116c4906002611adb565b67ffffffffffffffff8111156116dc576116dc611cbd565b6040519080825280601f01601f191660200182016040528015611706576020820181803683370190505b509050600360fc1b8160008151811061172157611721611aee565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061175057611750611aee565b60200101906001600160f81b031916908160001a9053506000611774846002611ca6565b61177f906001611adb565b90505b60018111156117f7576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117b3576117b3611aee565b1a60f81b8282815181106117c9576117c9611aee565b60200101906001600160f81b031916908160001a90535060049490941c936117f081611cd3565b9050611782565b5083156108025760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161054d565b60606107ff848460008585600080866001600160a01b0316858760405161186d9190611cea565b60006040518083038185875af1925050503d80600081146118aa576040519150601f19603f3d011682016040523d82523d6000602084013e6118af565b606091505b50915091506118c0878383876118cd565b925050505b949350505050565b6060831561193c578251600003611935576001600160a01b0385163b6119355760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161054d565b50816118c5565b6118c583838151156119515781518083602001fd5b8060405162461bcd60e51b815260040161054d9190611c40565b60006020828403121561197d57600080fd5b81356001600160e01b03198116811461080257600080fd5b6000602082840312156119a757600080fd5b5035919050565b8015158114610cea57600080fd5b600080604083850312156119cf57600080fd5b82356119da816119ae565b946020939093013593505050565b6001600160a01b0381168114610cea57600080fd5b600060208284031215611a0f57600080fd5b8135610802816119e8565b60008060408385031215611a2d57600080fd5b823591506020830135611a3f816119e8565b809150509250929050565b60008060408385031215611a5d57600080fd5b8235611a68816119e8565b91506020830135611a3f816119e8565b60008060408385031215611a8b57600080fd5b82356119da816119e8565b634e487b7160e01b600052601160045260246000fd5b818103818111156104e4576104e4611a96565b6000600160ff1b8201611ad457611ad4611a96565b5060000390565b808201808211156104e4576104e4611a96565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b1657600080fd5b5051919050565b8082018281126000831280158216821582161715611b3d57611b3d611a96565b505092915050565b600060018201611b5757611b57611a96565b5060010190565b6020808252601290820152715661756c74526f757465723a667265657a6560701b604082015260600190565b600060208284031215611b9c57600080fd5b8151610802816119e8565b60005b83811015611bc2578181015183820152602001611baa565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611c03816017850160208801611ba7565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611c34816028840160208801611ba7565b01602801949350505050565b6020815260008251806020840152611c5f816040850160208701611ba7565b601f01601f19169190910160400192915050565b600060208284031215611c8557600080fd5b8151610802816119ae565b634e487b7160e01b600052603160045260246000fd5b80820281158282048414176104e4576104e4611a96565b634e487b7160e01b600052604160045260246000fd5b600081611ce257611ce2611a96565b506000190190565b60008251611cfc818460208701611ba7565b919091019291505056fecb58d6d985142a614029cdf01861b4fe094d5919a47e69b8310dc4093d9d6ad0a2646970667358221220a1b228d342b23cf895dd4d12ee135359730447315bf574aec0568fd2584be18164736f6c63430008110033",
    "sourceMap": "750:9348:121:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:173;;;;;;:::i;:::-;;:::i;:::-;;;470:14:232;;463:22;445:41;;433:2;418:18;2732:202:173;;;;;;;;8952:80:121;9024:1;8952:80;;;643:25:232;;;631:2;616:18;8952:80:121;497:177:232;1098:29:121;;;;;;4504:129:173;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;1514:335:121;;;;;;:::i;:::-;;:::i;:::-;;1133:44;;;;;;:::i;:::-;;;;;;;;;;;;;;4929:145:173;;;;;;:::i;:::-;;:::i;1295:37:121:-;;;;;;;;;3631:136:1;;;;;;:::i;1855:242:121:-;;;;;;:::i;:::-;;:::i;1239:50::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1239:50:121;;;;;;-1:-1:-1;;;;;3020:32:232;;;3002:51;;2990:2;2975:18;1239:50:121;2856:203:232;930:27:121;;;;;-1:-1:-1;;;;;930:27:121;;;8373:360;;;:::i;7897:279::-;;;:::i;1824:101:175:-;;;:::i;2494:262:1:-;;;;;;:::i;:::-;;:::i;3188:281::-;;;;;;:::i;:::-;;:::i;3432:380:121:-;;;;;;:::i;:::-;;:::i;1201:85:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;1201:85;;3021:145:173;;;;;;:::i;:::-;;:::i;1183:50:121:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1183:50:121;;;2153:49:173;;2198:4;2153:49;;1055:36:121;;;;;;;;;2176:384;;;;;;:::i;:::-;;:::i;7360:365::-;;;:::i;4847:187::-;;;;;;:::i;:::-;;:::i;9948:112::-;;;;;;:::i;:::-;;:::i;5354:147:173:-;;;;;;:::i;:::-;;:::i;4107:272:121:-;;;;;;:::i;:::-;;:::i;2623:371::-;;;;;;:::i;:::-;;:::i;5663:184::-;;;;;;:::i;:::-;;:::i;9316:114::-;;;;;;:::i;:::-;;:::i;897:27::-;;;;;-1:-1:-1;;;;;897:27:121;;;2074:198:175;;;;;;:::i;:::-;;:::i;2732:202:173:-;2817:4;-1:-1:-1;;;;;;2840:47:173;;-1:-1:-1;;;2840:47:173;;:87;;-1:-1:-1;;;;;;;;;;937:40:208;;;2891:36:173;2833:94;2732:202;-1:-1:-1;;2732:202:173:o;1514:335:121:-;2876:24:1;1494:25;2876:10;:24::i;:::-;1615:1:121::1;1602:10;:14;1594:38;;;::::0;-1:-1:-1;;;1594:38:121;;4406:2:232;1594:38:121::1;::::0;::::1;4388:21:232::0;4445:2;4425:18;;;4418:30;-1:-1:-1;;;4464:18:232;;;4457:41;4515:18;;1594:38:121::1;;;;;;;;;1647:10;1661:1;1647:15:::0;1643:158:::1;;1664:9;::::0;:24:::1;::::0;-1:-1:-1;;;1664:24:121;;470:14:232;;463:22;1664:24:121::1;::::0;::::1;445:41:232::0;-1:-1:-1;;;;;1664:9:121;;::::1;::::0;:21:::1;::::0;418:18:232;;1664:24:121::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1643:158;;;1707:10;1721:1;1707:15:::0;1703:98:::1;;1724:16;:20:::0;;-1:-1:-1;;1724:20:121::1;::::0;::::1;;;::::0;;1703:98:::1;;;1763:10;1777:1;1763:15:::0;1759:42:::1;;1780:17;:21:::0;;-1:-1:-1;;1780:21:121::1;::::0;::::1;;;::::0;;1759:42:::1;1816:26;::::0;;4737:14:232;;4730:22;4712:41;;4784:2;4769:18;;4762:34;;;1816:26:121::1;::::0;4685:18:232;1816:26:121::1;;;;;;;1514:335:::0;;:::o;4929:145:173:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;1855:242:121:-;3302:13:163;;-1:-1:-1;;;3302:13:163;;;;3301:14;;3347:34;;;;-1:-1:-1;3380:1:163;3365:12;;-1:-1:-1;;;3365:12:163;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:163;1713:19:166;:23;;;3387:66:163;;-1:-1:-1;3436:12:163;;;-1:-1:-1;;;3436:12:163;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:163;;5009:2:232;3325:201:163;;;4991:21:232;5048:2;5028:18;;;5021:30;5087:34;5067:18;;;5060:62;-1:-1:-1;;;5138:18:232;;;5131:44;5192:19;;3325:201:163;4807:410:232;3325:201:163;3551:1;3536:16;;-1:-1:-1;;;;3536:16:163;-1:-1:-1;;;3536:16:163;;;3562:65;;;;3612:4;3596:20;;-1:-1:-1;;;;3596:20:163;-1:-1:-1;;;3596:20:163;;;3562:65;1966:36:121::1;1991:10;1966:24;:36::i;:::-;2012:9;:34:::0;;-1:-1:-1;;;;;2012:34:121;;::::1;-1:-1:-1::0;;;;;;2012:34:121;;::::1;;::::0;;;2056:9:::1;:34:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3647:99:163;;;;3681:13;:21;;-1:-1:-1;;;;3681:21:163;;;3721:14;;5374:36:232;;;3721:14:163;;5362:2:232;5347:18;3721:14:163;;;;;;;;3269:483;1855:242:121;;:::o;8373:360::-;8412:7;8431:20;8454:14;:12;:14::i;:::-;8431:37;;8478:18;8499:15;:13;:15::i;:::-;8478:36;;8524:11;8565:1;8549:13;:17;8545:162;;;8588:35;8609:13;8588:10;:35;:::i;:::-;8582:41;;8545:162;;;8681:14;8682:13;8681:14;:::i;:::-;8660:36;;:10;:36;:::i;:::-;8654:42;;8545:162;8723:3;8373:360;-1:-1:-1;;;8373:360:121:o;7897:279::-;7942:6;7960:25;7988:16;:7;:14;:16::i;:::-;7960:44;;8014:10;8043:9;8038:112;8062:8;:15;8058:1;:19;8038:112;;;8118:8;8127:1;8118:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8110:27:121;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8104:35;;:3;:35;:::i;:::-;8098:41;-1:-1:-1;8079:3:121;;;;:::i;:::-;;;;8038:112;;;-1:-1:-1;8166:3:121;7897:279;-1:-1:-1;;7897:279:121:o;1824:101:175:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2494:262:1:-;2198:4:173;2631:16;2198:4;2631:10;:16::i;:::-;-1:-1:-1;;;;;2585:16:1;::::1;2577:42;;;::::0;-1:-1:-1;;;2577:42:1;;6840:2:232;2577:42:1::1;::::0;::::1;6822:21:232::0;6879:2;6859:18;;;6852:30;-1:-1:-1;;;6898:18:232;;;6891:43;6951:18;;2577:42:1::1;6638:337:232::0;2577:42:1::1;2630:34;2198:4:173;2661:2:1::0;2630:10:::1;:34::i;:::-;2674:22;2693:2;2674:18;:22::i;:::-;2706:43;2198:4:173;2738:10:1;2706:11;:43::i;:::-;2494:262:::0;;:::o;3188:281::-;1116:28;2631:16:173;2642:4;2631:10;:16::i;3432:380:121:-;3051:27:1;-1:-1:-1;;;;;;;;;;;3051:10:1;:27::i;:::-;3563:16:121::1;::::0;::::1;;3554:25;3546:56;;;;-1:-1:-1::0;;;3546:56:121::1;;;;;;;:::i;:::-;3644:10;3612:16;3631:24:::0;;;:12:::1;:24;::::0;;;;;;;;;3712:13;;-1:-1:-1;;;3712:13:121;;;;-1:-1:-1;;;;;3631:24:121;;::::1;::::0;3665:140:::1;::::0;3631:24;;3712:11:::1;::::0;:13:::1;::::0;;::::1;::::0;3631:24;3712:13;;;;;;3631:24;3712:13:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3740:7;3769:5;3789:6;3665:26;:140::i;3021:145:173:-:0;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:173;;;;;;;;;;;;;;;3021:145::o;2176:384:121:-;1809:28:1;2631:16:173;2642:4;2631:10;:16::i;:::-;2301:19:121::1;:7;2313:6:::0;2301:11:::1;:19::i;:::-;2293:28;;;::::0;::::1;;-1:-1:-1::0;;;;;2331:20:121;;::::1;;::::0;;;:12:::1;:20;::::0;;;;;;;:40;;;;::::1;-1:-1:-1::0;;;;;;2331:40:121;;::::1;::::0;::::1;::::0;;;2381:31;;:12:::1;:31:::0;;;;;:40;;;;::::1;;::::0;;2431:26:::1;:6;2365:5:::0;2431:10:::1;:26::i;:::-;;2467:35;-1:-1:-1::0;;;;;;;;;;;2495:6:121::1;2467:10;:35::i;:::-;2517:36;::::0;;-1:-1:-1;;;;;7813:15:232;;;7795:34;;7865:15;;7860:2;7845:18;;7838:43;2517:36:121::1;::::0;7730:18:232;2517:36:121::1;7583:304:232::0;7360:365:121;7406:7;7425:27;7455:15;:6;:13;:15::i;:::-;7425:45;-1:-1:-1;7480:19:121;;7509:181;7533:10;:17;7529:1;:21;7509:181;;;7571:13;7587:10;7598:1;7587:13;;;;;;;;:::i;:::-;;;;;;;7571:29;;7647:5;-1:-1:-1;;;;;7636:23:121;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7629:50;;-1:-1:-1;;;7629:50:121;;-1:-1:-1;;;;;3020:32:232;;;7629:50:121;;;3002:51:232;7629:43:121;;;;;;;2975:18:232;;7629:50:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7614:65;;;;:::i;:::-;;;7557:133;7552:3;;;;;:::i;:::-;;;;7509:181;;4847:187;1438:28;:7;1455:10;1438:16;:28::i;:::-;1430:60;;;;-1:-1:-1;;;1430:60:121;;8283:2:232;1430:60:121;;;8265:21:232;8322:2;8302:18;;;8295:30;-1:-1:-1;;;8341:18:232;;;8334:49;8400:18;;1430:60:121;8081:343:232;1430:60:121;4935:17:::1;::::0;::::1;;4926:26;4918:57;;;;-1:-1:-1::0;;;4918:57:121::1;;;;;;;:::i;:::-;4986:41;5002:10;5014:6;5022:4;4986:15;:41::i;:::-;4847:187:::0;:::o;9948:112::-;10033:20;;-1:-1:-1;;;10033:20:121;;10048:4;10033:20;;;445:41:232;10007:7:121;;-1:-1:-1;;;;;10033:14:121;;;;;418:18:232;;10033:20:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5354:147:173:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;4107:272:121:-:0;3051:27:1;-1:-1:-1;;;;;;;;;;;3051:10:1;:27::i;:::-;4235:16:121::1;::::0;::::1;;4226:25;4218:56;;;;-1:-1:-1::0;;;4218:56:121::1;;;;;;;:::i;:::-;4316:10;4284:16;4303:24:::0;;;:12:::1;:24;::::0;;;;;;;4337:35;;-1:-1:-1;;;4337:35:121;;-1:-1:-1;;;;;8621:32:232;;;4337:35:121::1;::::0;::::1;8603:51:232::0;8670:18;;;8663:34;;;4303:24:121;;::::1;::::0;;;4337:23:::1;::::0;8576:18:232;;4337:35:121::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4208:171;4107:272:::0;;:::o;2623:371::-;1420:27:1;2631:16:173;2642:4;2631:10;:16::i;:::-;2705:22:121::1;:7;2720:6:::0;2705:14:::1;:22::i;:::-;-1:-1:-1::0;;;;;;2759:20:121;;::::1;2737:11;2759:20:::0;;;:12:::1;:20;::::0;;;;;::::1;2790:18;:6;2759:20:::0;2790:13:::1;:18::i;:::-;-1:-1:-1::0;;;;;;2839:20:121;;::::1;2826:34;2839:20:::0;;;:12:::1;:20;::::0;;;;;;;;;;;::::1;2826:34:::0;;:12:::1;:34:::0;;;;2818:43;;-1:-1:-1;;;;;;2818:43:121;;::::1;::::0;;;2879:20;;;;;;2871:29;;::::1;::::0;;2910:36:::1;-1:-1:-1::0;;;;;;;;;;;2852:6:121;2910:11:::1;:36::i;:::-;2961:26;::::0;;-1:-1:-1;;;;;7813:15:232;;;7795:34;;7865:15;;7860:2;7845:18;;7838:43;2961:26:121::1;::::0;7730:18:232;2961:26:121::1;7583:304:232::0;5663:184:121;1438:28;:7;1455:10;1438:16;:28::i;:::-;1430:60;;;;-1:-1:-1;;;1430:60:121;;8283:2:232;1430:60:121;;;8265:21:232;8322:2;8302:18;;;8295:30;-1:-1:-1;;;8341:18:232;;;8334:49;8400:18;;1430:60:121;8081:343:232;1430:60:121;5748:17:::1;::::0;::::1;;5739:26;5731:57;;;;-1:-1:-1::0;;;5731:57:121::1;;;;;;;:::i;:::-;5798:42;5814:10;5826:6;5834:5;5798:15;:42::i;9316:114::-:0;9402:21;;-1:-1:-1;;;9402:21:121;;9376:7;9402:21;;;445:41:232;;;9376:7:121;-1:-1:-1;;;;;9402:14:121;;;;;418:18:232;;9402:21:121;305:187:232;2074:198:175;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:175;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:175;;8910:2:232;2154:73:175::1;::::0;::::1;8892:21:232::0;8949:2;8929:18;;;8922:30;8988:34;8968:18;;;8961:62;-1:-1:-1;;;9039:18:232;;;9032:36;9085:19;;2154:73:175::1;8708:402:232::0;2154:73:175::1;2237:28;2256:8;2237:18;:28::i;3460:103:173:-:0;3526:30;3537:4;719:10:201;3526::173;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:173;;;;;;;;;:36;;-1:-1:-1;;7708:36:173;7740:4;7708:36;;;7790:12;719:10:201;;640:96;7790:12:173;-1:-1:-1;;;;;7763:40:173;7781:7;-1:-1:-1;;;;;7763:40:173;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;2263:225:1:-;2327:15;2315:9;:27;2352:32;719:10:201;2352:18:1;:32::i;:::-;2395:42;2198:4:173;2426:10:1;2395;:42::i;:::-;2447:34;2198:4:173;2478:2:1;2447:10;:34::i;10259:300:215:-;10322:16;10350:22;10375:19;10383:3;10375:7;:19::i;1359:130:175:-;1273:6;;-1:-1:-1;;;;;1273:6:175;719:10:201;1422:23:175;1414:68;;;;-1:-1:-1;;;1414:68:175;;9317:2:232;1414:68:175;;;9299:21:232;;;9336:18;;;9329:30;9395:34;9375:18;;;9368:62;9447:18;;1414:68:175;9115:356:232;2426:187:175;2518:6;;;-1:-1:-1;;;;;2534:17:175;;;-1:-1:-1;;;;;;2534:17:175;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;6937:110:173:-;7015:25;7026:4;7032:7;7015:10;:25::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:173;;;;;;;;;;:37;;-1:-1:-1;;8112:37:173;;;8168:40;719:10:201;;8112:12:173;;8168:40;;8144:5;8168:40;7991:234;;:::o;1355:203:196:-;1482:68;;;-1:-1:-1;;;;;9734:15:232;;;1482:68:196;;;9716:34:232;9786:15;;9766:18;;;9759:43;9818:18;;;;9811:34;;;1482:68:196;;;;;;;;;;9651:18:232;;;;1482:68:196;;;;;;;;-1:-1:-1;;;;;1482:68:196;-1:-1:-1;;;1482:68:196;;;1455:96;;1475:5;;1455:19;:96::i;:::-;1355:203;;;;:::o;8305:150:215:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:215;;8398:4;:50::i;8860:165::-;-1:-1:-1;;;;;8993:23:215;;8940:4;4351:19;;;:12;;;:19;;;;;;:24;;8963:55;4255:127;6220:473:121;6344:8;6340:273;;;6368:24;6412:6;6395:14;;:23;;;;:::i;:::-;-1:-1:-1;;;;;6432:17:121;;;;;;:9;:17;;;;;:27;;6368:50;;-1:-1:-1;6453:6:121;;6432:17;;;:27;;6453:6;;6432:27;:::i;:::-;;;;-1:-1:-1;;6473:14:121;:33;6340:273;;;-1:-1:-1;;;;;6537:17:121;;;;;;:9;:17;;;;;:27;;6558:6;;6537:17;:27;;6558:6;;6537:27;:::i;:::-;;;;;;;;6596:6;6578:14;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;6340:273:121;-1:-1:-1;;;;;6627:59:121;;6652:17;;;;:9;:17;;;;;;;;6671:14;;6627:59;;;;;;10030:25:232;;10086:2;10071:18;;10064:34;10018:2;10003:18;;9856:248;6627:59:121;;;;;;;;6220:473;;;:::o;8623:156:215:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:215;;8719:7;:53::i;3844:479:173:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:173;;;;;;;;;;-1:-1:-1;;;3970:336:173;;;;;;;:::i;5570:109:215:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;5196:642:196:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:196;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:196;;12034:2:232;5720:111:196;;;12016:21:232;12073:2;12053:18;;;12046:30;12112:34;12092:18;;;12085:62;-1:-1:-1;;;12163:18:232;;;12156:40;12213:19;;5720:111:196;11832:406:232;2214:404:215;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:215;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:215;2589:12;;2786:1388;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:215;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;2407:149:205;2465:13;2497:52;-1:-1:-1;;;;;2509:22:205;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:205;;1918:47;;-1:-1:-1;;;1975:6:205;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:205;;;;;;;;;-1:-1:-1;;;2000:6:205;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:205;;;;;;;;-1:-1:-1;2030:9:205;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:205;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:205;;;;;;;;-1:-1:-1;2141:1:205;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:205;;2162:55;;;;-1:-1:-1;;;2162:55:205;;13023:2:232;2162:55:205;;;13005:21:232;;;13042:18;;;13035:30;13101:34;13081:18;;;13074:62;13153:18;;2162:55:205;12821:356:232;4108:223:200;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:200;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:166;;;8113:60:200;;;;-1:-1:-1;;;8113:60:200;;14083:2:232;8113:60:200;;;14065:21:232;14122:2;14102:18;;;14095:30;14161:31;14141:18;;;14134:59;14210:18;;8113:60:200;13881:353:232;8113:60:200;-1:-1:-1;8208:10:200;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:200;;;;;;;;:::i;14:286:232:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:232;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:232;;679:180;-1:-1:-1;679:180:232:o;1046:118::-;1132:5;1125:13;1118:21;1111:5;1108:32;1098:60;;1154:1;1151;1144:12;1169:309;1234:6;1242;1295:2;1283:9;1274:7;1270:23;1266:32;1263:52;;;1311:1;1308;1301:12;1263:52;1350:9;1337:23;1369:28;1391:5;1369:28;:::i;:::-;1416:5;1468:2;1453:18;;;;1440:32;;-1:-1:-1;;;1169:309:232:o;1483:131::-;-1:-1:-1;;;;;1558:31:232;;1548:42;;1538:70;;1604:1;1601;1594:12;1619:247;1678:6;1731:2;1719:9;1710:7;1706:23;1702:32;1699:52;;;1747:1;1744;1737:12;1699:52;1786:9;1773:23;1805:31;1830:5;1805:31;:::i;1871:315::-;1939:6;1947;2000:2;1988:9;1979:7;1975:23;1971:32;1968:52;;;2016:1;2013;2006:12;1968:52;2052:9;2039:23;2029:33;;2112:2;2101:9;2097:18;2084:32;2125:31;2150:5;2125:31;:::i;:::-;2175:5;2165:15;;;1871:315;;;;;:::o;2191:388::-;2259:6;2267;2320:2;2308:9;2299:7;2295:23;2291:32;2288:52;;;2336:1;2333;2326:12;2288:52;2375:9;2362:23;2394:31;2419:5;2394:31;:::i;:::-;2444:5;-1:-1:-1;2501:2:232;2486:18;;2473:32;2514:33;2473:32;2514:33;:::i;3472:315::-;3540:6;3548;3601:2;3589:9;3580:7;3576:23;3572:32;3569:52;;;3617:1;3614;3607:12;3569:52;3656:9;3643:23;3675:31;3700:5;3675:31;:::i;5421:127::-;5482:10;5477:3;5473:20;5470:1;5463:31;5513:4;5510:1;5503:15;5537:4;5534:1;5527:15;5553:128;5620:9;;;5641:11;;;5638:37;;;5655:18;;:::i;5686:136::-;5721:3;-1:-1:-1;;;5742:22:232;;5739:48;;5767:18;;:::i;:::-;-1:-1:-1;5807:1:232;5803:13;;5686:136::o;5827:125::-;5892:9;;;5913:10;;;5910:36;;;5926:18;;:::i;5957:127::-;6018:10;6013:3;6009:20;6006:1;5999:31;6049:4;6046:1;6039:15;6073:4;6070:1;6063:15;6089:183;6158:6;6211:2;6199:9;6190:7;6186:23;6182:32;6179:52;;;6227:1;6224;6217:12;6179:52;-1:-1:-1;6250:16:232;;6089:183;-1:-1:-1;6089:183:232:o;6277:216::-;6341:9;;;6369:11;;;6316:3;6399:9;;6427:10;;6423:19;;6452:10;;6444:19;;6420:44;6417:70;;;6467:18;;:::i;:::-;6417:70;;6277:216;;;;:::o;6498:135::-;6537:3;6558:17;;;6555:43;;6578:18;;:::i;:::-;-1:-1:-1;6625:1:232;6614:13;;6498:135::o;6980:342::-;7182:2;7164:21;;;7221:2;7201:18;;;7194:30;-1:-1:-1;;;7255:2:232;7240:18;;7233:48;7313:2;7298:18;;6980:342::o;7327:251::-;7397:6;7450:2;7438:9;7429:7;7425:23;7421:32;7418:52;;;7466:1;7463;7456:12;7418:52;7498:9;7492:16;7517:31;7542:5;7517:31;:::i;10109:250::-;10194:1;10204:113;10218:6;10215:1;10212:13;10204:113;;;10294:11;;;10288:18;10275:11;;;10268:39;10240:2;10233:10;10204:113;;;-1:-1:-1;;10351:1:232;10333:16;;10326:27;10109:250::o;10364:812::-;10775:25;10770:3;10763:38;10745:3;10830:6;10824:13;10846:75;10914:6;10909:2;10904:3;10900:12;10893:4;10885:6;10881:17;10846:75;:::i;:::-;-1:-1:-1;;;10980:2:232;10940:16;;;10972:11;;;10965:40;11030:13;;11052:76;11030:13;11114:2;11106:11;;11099:4;11087:17;;11052:76;:::i;:::-;11148:17;11167:2;11144:26;;10364:812;-1:-1:-1;;;;10364:812:232:o;11181:396::-;11330:2;11319:9;11312:21;11293:4;11362:6;11356:13;11405:6;11400:2;11389:9;11385:18;11378:34;11421:79;11493:6;11488:2;11477:9;11473:18;11468:2;11460:6;11456:15;11421:79;:::i;:::-;11561:2;11540:15;-1:-1:-1;;11536:29:232;11521:45;;;;11568:2;11517:54;;11181:396;-1:-1:-1;;11181:396:232:o;11582:245::-;11649:6;11702:2;11690:9;11681:7;11677:23;11673:32;11670:52;;;11718:1;11715;11708:12;11670:52;11750:9;11744:16;11769:28;11791:5;11769:28;:::i;12243:127::-;12304:10;12299:3;12295:20;12292:1;12285:31;12335:4;12332:1;12325:15;12359:4;12356:1;12349:15;12375:168;12448:9;;;12479;;12496:15;;;12490:22;;12476:37;12466:71;;12517:18;;:::i;12548:127::-;12609:10;12604:3;12600:20;12597:1;12590:31;12640:4;12637:1;12630:15;12664:4;12661:1;12654:15;12680:136;12719:3;12747:5;12737:39;;12756:18;;:::i;:::-;-1:-1:-1;;;12792:18:232;;12680:136::o;13589:287::-;13718:3;13756:6;13750:13;13772:66;13831:6;13826:3;13819:4;13811:6;13807:17;13772:66;:::i;:::-;13854:16;;;;;13589:287;-1:-1:-1;;13589:287:232:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "borrowFromVault(uint256)": "c6aee618",
    "buyLpFee(address)": "d53b26ee",
    "coreVault()": "674ce1b5",
    "feeRouter()": "f29ebf61",
    "fundsUsed(address)": "2b8a0012",
    "getAUM()": "6dc7b0a1",
    "getGlobalPnl()": "6f2a14c5",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getUSDBalance()": "c1201054",
    "grantControllerRoleByMarketManager(address)": "7fe4a698",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address)": "485cc955",
    "isFreezeAccouting()": "3001a9a2",
    "isFreezeTransfer()": "a59e73e8",
    "marketVaults(address)": "92106cbb",
    "owner()": "8da5cb5b",
    "priceDecimals()": "05300b28",
    "removeMarket(address)": "db913236",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "repayToVault(uint256)": "e108262f",
    "revokeRole(bytes32,address)": "d547741f",
    "sellLpFee(address)": "eb4fe818",
    "setIsFreeze(bool,uint256)": "290f5e49",
    "setMarket(address,address)": "a7c1daa4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "totalFundsUsed()": "11a2ad49",
    "transferAdmin(address)": "75829def",
    "transferFromVault(address,uint256)": "da8ddc74",
    "transferOwnership(address)": "f2fde38b",
    "transferToVault(address,uint256)": "89a71faa",
    "vaultMarkets(address)": "61b314cb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFundsUsed\",\"type\":\"uint256\"}],\"name\":\"FundsUsedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isFreeze\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"freezeType\",\"type\":\"uint256\"}],\"name\":\"LogIsFreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"MarketRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"MarketSetted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowFromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"buyLpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coreVault\",\"outputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRouter\",\"outputs\":[{\"internalType\":\"contract IFeeRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundsUsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalPnl\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"grantControllerRoleByMarketManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRouter\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFreezeAccouting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFreezeTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketVaults\",\"outputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"removeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayToVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"sellLpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"f\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"freezeType\",\"type\":\"uint256\"}],\"name\":\"setIsFreeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"setMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFundsUsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICoreVault\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultMarkets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"borrowFromVault(uint256)\":{\"details\":\"Function to borrow tokens from the Vault of a market.\",\"params\":{\"amount\":\"The amount of tokens to borrow.\"}},\"buyLpFee(address)\":{\"details\":\"This function is used to get the buy Liquidity Provider (LP) fee percentage of a specified Vault.\",\"params\":{\"vault\":\"The address of the Vault for which the buy LP fee is to be retrieved.\"},\"returns\":{\"_0\":\"The buy LP fee percentage of the specified Vault. The function calls the \\\"getLPFee\\\" function of the specified Vault with the boolean argument \\\"true\\\" to retrieve the buy LP fee percentage. The retrieved buy LP fee percentage is returned as the output of the function.\"}},\"getAUM()\":{\"details\":\"Called by `CoreVault` and `VaultReward`.This function calculates the assets under management (AUM) of the contract.\",\"returns\":{\"_0\":\"aum The AUM value as a uint256.\"}},\"getGlobalPnl()\":{\"details\":\"This function calculates the global profit and loss (PNL) across all markets.\",\"returns\":{\"_0\":\"pnl The total global PNL as an int256 value.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUSDBalance()\":{\"details\":\"This function is used to calculate the total USD balance of all the Vaults in the system.\",\"returns\":{\"_0\":\"totalAssets The total USD balance of all the Vaults in the system. The function retrieves the addresses of all the Vaults in the system and calculates the total USD balance of all the Vaults. This is done by iterating over all the Vault addresses and calling the \\\"balanceOf\\\" function of the asset token associated with each Vault to retrieve the USD balance. The retrieved balances are then summed up to give the \\\"totalAssets\\\" of all the Vaults in the system. This value is returned as the output of the function.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"priceDecimals()\":{\"details\":\"Returns the number of decimal places for the price of the underlying asset in the CoreVault contract.\",\"returns\":{\"_0\":\"The number of decimal places for the price of the underlying asset.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"repayToVault(uint256)\":{\"details\":\"This function is used to repay a specified amount of borrowed funds to the Vault contract by the market contract that calls it.\",\"params\":{\"amount\":\"The amount of borrowed funds to be repaid. The function checks if the market contract calling the function is a valid market. If the market is valid, it calls the \\\"updateFundsUsed\\\" function to update the amount of funds used by the market. The \\\"amount\\\" parameter is used to specify the amount of funds being repaid. Once the update is completed, the borrowed funds are returned to the Vault contract, and the function completes execution.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"sellLpFee(address)\":{\"details\":\"This function returns the LP fee charged by the specified vault when selling LP tokens.\",\"params\":{\"vault\":\"The address of the vault for which to retrieve the LP fee.\"},\"returns\":{\"_0\":\"lpFee The LP fee charged by the specified vault as a uint256 value.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferFromVault(address,uint256)\":{\"details\":\"Transfers a specified amount of assets from the vault of the calling market to a specified address. Only a market role can call this function.\",\"params\":{\"amount\":\"The amount of assets to transfer.\",\"to\":\"The address to transfer the assets to.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferToVault(address,uint256)\":{\"details\":\"Transfers a specified amount of an ERC20 asset from `account` to the corresponding `ICoreVault` associated with the calling `msg.sender` market contract.\",\"params\":{\"account\":\"The address of the account from which the tokens will be transferred.\",\"amount\":\"The amount of tokens to be transferred to the vault.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrowFromVault(uint256)\":{\"notice\":\"This function can only be called by a market contract that has been added to the 'markets' set.         The function updates the funds used in the market by the borrowed amount, using the 'updateFundsUsed' internal function.         The borrowed tokens will be transferred to the caller's address.\"},\"transferToVault(address,uint256)\":{\"notice\":\"This function can only be called by a contract with the MARKET_ROLE.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/VaultRouter.sol\":\"VaultRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-create2-deployer/=node_modules/solidity-create2-deployer/\"]},\"sources\":{\"contracts/ac/AcUpgradable.sol\":{\"keccak256\":\"0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c\",\"dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV\"]},\"contracts/fee/interfaces/IFeeRouter.sol\":{\"keccak256\":\"0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb\",\"dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA\"]},\"contracts/market/MarketDataTypes.sol\":{\"keccak256\":\"0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363\",\"dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf\"]},\"contracts/market/interfaces/IMarket.sol\":{\"keccak256\":\"0x9d29f4e4bcfb647951205148d506d9f5b78560e038042507733da30753d89b94\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9337a8c992795dc782579509b10a836014903b65b60ad705af26b3209718f4ca\",\"dweb:/ipfs/QmWvNXJFkcKsyszNQJzzKxqphF5RnHzjByvCjSoLTiGCPM\"]},\"contracts/order/OrderLib.sol\":{\"keccak256\":\"0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9\",\"dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR\"]},\"contracts/order/OrderStruct.sol\":{\"keccak256\":\"0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2\",\"dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty\"]},\"contracts/order/interface/IOrderBook.sol\":{\"keccak256\":\"0x05370d58da47d4635d661b43190f154df05beecee2e5ad857bd76e51678fb1c5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aa31eb9f56af348d732364999b6ca1ae623ca4749ebc8b231bed8fbffacd5020\",\"dweb:/ipfs/QmRkRtAUs2ephDWWUYHRP5F96QbQ826tR9hTWoZxvxVMpJ\"]},\"contracts/order/interface/IOrderStore.sol\":{\"keccak256\":\"0x8965799f42d257651b0295608e6bda48bceeea7ddb58404d02bef5c06bdd0126\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ab217568cc492e76c3e1f4373e30d136b923e2013a0a8e07527cb4a99aacdfc5\",\"dweb:/ipfs/QmYwsiymHVS9JWQsw2E6Eb4B4VHWUhMdAJsJUXdGFkfznm\"]},\"contracts/position/PositionStruct.sol\":{\"keccak256\":\"0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415\",\"dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW\"]},\"contracts/position/interfaces/IPositionBook.sol\":{\"keccak256\":\"0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d\",\"dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ\"]},\"contracts/utils/TransferHelper.sol\":{\"keccak256\":\"0xe8d49564701b77c67f321439d289a2cb83cfc7825cb047aa38cdc448ae121001\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aae873145ea2dd1b792797118a18c5bdf3fbaebb0d6eab141fe97f91bc0f77e3\",\"dweb:/ipfs/QmbDNeAJLewUtnuz1tfTEgNFexMpYAdWMmhwqckbZ64pgp\"]},\"contracts/vault/VaultRouter.sol\":{\"keccak256\":\"0xaf9457e8bacf77ebf194ef197a4de866628b41e0d57c7351f4636eb73846fc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0c3f012b14e342f93c1bbe63978fc977d0dd0d973c51c8d1b73b809c23b2109\",\"dweb:/ipfs/Qmcqwt17wf56XxXP3PiwAfmz1T3735LbL8frCiVNBKikqt\"]},\"contracts/vault/interfaces/ICoreVault.sol\":{\"keccak256\":\"0x152b38fe84e5fcdf6f9e2973894a6a44e54c702d348452d2b03a81c88e2967b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c3da45a08744f27d2cdfb0adfb4ec45a8ecf5fea46ae07d71efe96f35dbe771\",\"dweb:/ipfs/QmdQdu7LWLYKfxMgeDMPQV7P55DxJT4d4NG58k96ELg4RL\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3\",\"dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xa0ebd2a1608780392e5bc8805079b1a1961ebd73128ee23ab7149e7f6904fa53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7767ecfd8f8c30fb97fe2dc3b63e96f4593e458551c44e901a3acd4ed930d32c\",\"dweb:/ipfs/QmPJDWJBrzeCee7PqrixFwuCYhsEnFXcQqV6Z6FFdJSNpd\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalFundsUsed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FundsUsedUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isFreeze",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "freezeType",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIsFreeze",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketSetted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrowFromVault"
        },
        {
          "inputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buyLpFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "coreVault",
          "outputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRouter",
          "outputs": [
            {
              "internalType": "contract IFeeRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "fundsUsed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAUM",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGlobalPnl",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUSDBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantControllerRoleByMarketManager"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_coreVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_feeRouter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isFreezeAccouting",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isFreezeTransfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketVaults",
          "outputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "priceDecimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMarket"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayToVault"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sellLpFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "f",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "freezeType",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setIsFreeze"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMarket"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalFundsUsed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferToVault"
        },
        {
          "inputs": [
            {
              "internalType": "contract ICoreVault",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultMarkets",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrowFromVault(uint256)": {
            "details": "Function to borrow tokens from the Vault of a market.",
            "params": {
              "amount": "The amount of tokens to borrow."
            }
          },
          "buyLpFee(address)": {
            "details": "This function is used to get the buy Liquidity Provider (LP) fee percentage of a specified Vault.",
            "params": {
              "vault": "The address of the Vault for which the buy LP fee is to be retrieved."
            },
            "returns": {
              "_0": "The buy LP fee percentage of the specified Vault. The function calls the \"getLPFee\" function of the specified Vault with the boolean argument \"true\" to retrieve the buy LP fee percentage. The retrieved buy LP fee percentage is returned as the output of the function."
            }
          },
          "getAUM()": {
            "details": "Called by `CoreVault` and `VaultReward`.This function calculates the assets under management (AUM) of the contract.",
            "returns": {
              "_0": "aum The AUM value as a uint256."
            }
          },
          "getGlobalPnl()": {
            "details": "This function calculates the global profit and loss (PNL) across all markets.",
            "returns": {
              "_0": "pnl The total global PNL as an int256 value."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getUSDBalance()": {
            "details": "This function is used to calculate the total USD balance of all the Vaults in the system.",
            "returns": {
              "_0": "totalAssets The total USD balance of all the Vaults in the system. The function retrieves the addresses of all the Vaults in the system and calculates the total USD balance of all the Vaults. This is done by iterating over all the Vault addresses and calling the \"balanceOf\" function of the asset token associated with each Vault to retrieve the USD balance. The retrieved balances are then summed up to give the \"totalAssets\" of all the Vaults in the system. This value is returned as the output of the function."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "priceDecimals()": {
            "details": "Returns the number of decimal places for the price of the underlying asset in the CoreVault contract.",
            "returns": {
              "_0": "The number of decimal places for the price of the underlying asset."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "repayToVault(uint256)": {
            "details": "This function is used to repay a specified amount of borrowed funds to the Vault contract by the market contract that calls it.",
            "params": {
              "amount": "The amount of borrowed funds to be repaid. The function checks if the market contract calling the function is a valid market. If the market is valid, it calls the \"updateFundsUsed\" function to update the amount of funds used by the market. The \"amount\" parameter is used to specify the amount of funds being repaid. Once the update is completed, the borrowed funds are returned to the Vault contract, and the function completes execution."
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "sellLpFee(address)": {
            "details": "This function returns the LP fee charged by the specified vault when selling LP tokens.",
            "params": {
              "vault": "The address of the vault for which to retrieve the LP fee."
            },
            "returns": {
              "_0": "lpFee The LP fee charged by the specified vault as a uint256 value."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferFromVault(address,uint256)": {
            "details": "Transfers a specified amount of assets from the vault of the calling market to a specified address. Only a market role can call this function.",
            "params": {
              "amount": "The amount of assets to transfer.",
              "to": "The address to transfer the assets to."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "transferToVault(address,uint256)": {
            "details": "Transfers a specified amount of an ERC20 asset from `account` to the corresponding `ICoreVault` associated with the calling `msg.sender` market contract.",
            "params": {
              "account": "The address of the account from which the tokens will be transferred.",
              "amount": "The amount of tokens to be transferred to the vault."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrowFromVault(uint256)": {
            "notice": "This function can only be called by a market contract that has been added to the 'markets' set.         The function updates the funds used in the market by the borrowed amount, using the 'updateFundsUsed' internal function.         The borrowed tokens will be transferred to the caller's address."
          },
          "transferToVault(address,uint256)": {
            "notice": "This function can only be called by a contract with the MARKET_ROLE."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-solidity-create2-deployer/=node_modules/hardhat-solidity-create2-deployer/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "solidity-create2-deployer/=node_modules/solidity-create2-deployer/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vault/VaultRouter.sol": "VaultRouter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ac/AcUpgradable.sol": {
        "keccak256": "0xdb62e2f84753366d65ba5ad7053cc1560ae653670ed694f7c116870a072e4b75",
        "urls": [
          "bzz-raw://972c97536cefb199ce27dfe39bca735cf749537112b0270cc53a7e0b4929c02c",
          "dweb:/ipfs/QmcMgaLeqws9oSuhtF2Q2YGMthKoptaXTf3VDq1ASvWcsV"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/fee/interfaces/IFeeRouter.sol": {
        "keccak256": "0x40a37f18ab9eeb6f578f3586dcec6b5dd238865f078e1eae65174ab22b961da2",
        "urls": [
          "bzz-raw://ba232bc1a43a98a2c22147fa133a86f4733fb83b5029c0c3fc9b3aec1199cfcb",
          "dweb:/ipfs/QmYYSZ35oEgDB6R28WxzZu8moe5PybjnRzm2b3y9nc4AwA"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/MarketDataTypes.sol": {
        "keccak256": "0x63fcbb3198fb40245cb0a116eb3d7853b18d180ad3c63a09df3a1dc6484a5098",
        "urls": [
          "bzz-raw://52ae993112c7a9ef1647c03dd26ec08c461ef1441865ed2e967296e12222a363",
          "dweb:/ipfs/QmVn8SDWtL7M2ER7GpQxAvfazqtQhHEPGsJQ7NBGnhDUEf"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/market/interfaces/IMarket.sol": {
        "keccak256": "0x9d29f4e4bcfb647951205148d506d9f5b78560e038042507733da30753d89b94",
        "urls": [
          "bzz-raw://9337a8c992795dc782579509b10a836014903b65b60ad705af26b3209718f4ca",
          "dweb:/ipfs/QmWvNXJFkcKsyszNQJzzKxqphF5RnHzjByvCjSoLTiGCPM"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/OrderLib.sol": {
        "keccak256": "0xee945b3014458a3d5502f54ca9ef2e1d80158c2c2e6d66ebe6ccde5624ef03a6",
        "urls": [
          "bzz-raw://bf1dc56bb4730c9b17100b00eabe725a57fd6a9d04afe23550212a640b355bf9",
          "dweb:/ipfs/QmUWjkbStRZUbDBTyBb5owVJckzJ7UL42fMfVfedBBfEFR"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/OrderStruct.sol": {
        "keccak256": "0x11d0acbcbdb2e0d9850c593ec15210ee8c9e4c0577b729aae77419f635c0516e",
        "urls": [
          "bzz-raw://f6f037f4f5a357fd70e61875f3229f50c2c876a2d0060ee5beb2d9729c3715e2",
          "dweb:/ipfs/QmetWbQMkkGrLTpe3iUH4dx6SQf1GYzjiirQGA1gs8ABty"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/interface/IOrderBook.sol": {
        "keccak256": "0x05370d58da47d4635d661b43190f154df05beecee2e5ad857bd76e51678fb1c5",
        "urls": [
          "bzz-raw://aa31eb9f56af348d732364999b6ca1ae623ca4749ebc8b231bed8fbffacd5020",
          "dweb:/ipfs/QmRkRtAUs2ephDWWUYHRP5F96QbQ826tR9hTWoZxvxVMpJ"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/order/interface/IOrderStore.sol": {
        "keccak256": "0x8965799f42d257651b0295608e6bda48bceeea7ddb58404d02bef5c06bdd0126",
        "urls": [
          "bzz-raw://ab217568cc492e76c3e1f4373e30d136b923e2013a0a8e07527cb4a99aacdfc5",
          "dweb:/ipfs/QmYwsiymHVS9JWQsw2E6Eb4B4VHWUhMdAJsJUXdGFkfznm"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/PositionStruct.sol": {
        "keccak256": "0xa036f419bc12d25736302f1f5d89ac354ae52571251025a6f9670c98c1d81286",
        "urls": [
          "bzz-raw://20a8f5d52308f950d7e90882c8622f178beb989821401edebbc1336a6776e415",
          "dweb:/ipfs/QmdMmqGWE6b7G5mBAL4DnQwfRFjjdnCo32Yc1L3sHPm1nW"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/position/interfaces/IPositionBook.sol": {
        "keccak256": "0xee3cb7021b70d4cc33baa83411a0c10833fae3fe959f4fb3b7cecb48fe97ed75",
        "urls": [
          "bzz-raw://c4092cc744a57406570ff49ec7a04c0d77f56dd0be68a0545de7ea741416722d",
          "dweb:/ipfs/QmTAL9mtEe4W837Axdx1bLPyoRvBZXAzCzE3uDuuxzJ3cJ"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/utils/TransferHelper.sol": {
        "keccak256": "0xe8d49564701b77c67f321439d289a2cb83cfc7825cb047aa38cdc448ae121001",
        "urls": [
          "bzz-raw://aae873145ea2dd1b792797118a18c5bdf3fbaebb0d6eab141fe97f91bc0f77e3",
          "dweb:/ipfs/QmbDNeAJLewUtnuz1tfTEgNFexMpYAdWMmhwqckbZ64pgp"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/vault/VaultRouter.sol": {
        "keccak256": "0xaf9457e8bacf77ebf194ef197a4de866628b41e0d57c7351f4636eb73846fc06",
        "urls": [
          "bzz-raw://d0c3f012b14e342f93c1bbe63978fc977d0dd0d973c51c8d1b73b809c23b2109",
          "dweb:/ipfs/Qmcqwt17wf56XxXP3PiwAfmz1T3735LbL8frCiVNBKikqt"
        ],
        "license": "MIT"
      },
      "contracts/vault/interfaces/ICoreVault.sol": {
        "keccak256": "0x152b38fe84e5fcdf6f9e2973894a6a44e54c702d348452d2b03a81c88e2967b8",
        "urls": [
          "bzz-raw://6c3da45a08744f27d2cdfb0adfb4ec45a8ecf5fea46ae07d71efe96f35dbe771",
          "dweb:/ipfs/QmdQdu7LWLYKfxMgeDMPQV7P55DxJT4d4NG58k96ELg4RL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c",
        "urls": [
          "bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3",
          "dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0xa0ebd2a1608780392e5bc8805079b1a1961ebd73128ee23ab7149e7f6904fa53",
        "urls": [
          "bzz-raw://7767ecfd8f8c30fb97fe2dc3b63e96f4593e458551c44e901a3acd4ed930d32c",
          "dweb:/ipfs/QmPJDWJBrzeCee7PqrixFwuCYhsEnFXcQqV6Z6FFdJSNpd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vault/VaultRouter.sol",
    "id": 40605,
    "exportedSymbols": {
      "AcUpgradable": [
        273
      ],
      "EnumerableSet": [
        113823
      ],
      "ICoreVault": [
        40666
      ],
      "IERC20": [
        107291
      ],
      "IERC20Metadata": [
        108159
      ],
      "IFeeRouter": [
        2261
      ],
      "IMarket": [
        13438
      ],
      "ReentrancyGuard": [
        106626
      ],
      "SafeERC20": [
        108574
      ],
      "TransferHelper": [
        36763
      ],
      "VaultRouter": [
        40604
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:10068:121",
    "nodes": [
      {
        "id": 39952,
        "nodeType": "PragmaDirective",
        "src": "31:24:121",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 39954,
        "nodeType": "ImportDirective",
        "src": "57:70:121",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 107292,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39953,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 107291,
              "src": "65:6:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39955,
        "nodeType": "ImportDirective",
        "src": "128:75:121",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 108160,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39957,
        "nodeType": "ImportDirective",
        "src": "204:82:121",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 108575,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39956,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 108574,
              "src": "212:9:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39959,
        "nodeType": "ImportDirective",
        "src": "287:86:121",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 113824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39958,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 113823,
              "src": "295:13:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39961,
        "nodeType": "ImportDirective",
        "src": "375:57:121",
        "nodes": [],
        "absolutePath": "contracts/market/interfaces/IMarket.sol",
        "file": "../market/interfaces/IMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 13476,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39960,
              "name": "IMarket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13438,
              "src": "383:7:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39963,
        "nodeType": "ImportDirective",
        "src": "433:55:121",
        "nodes": [],
        "absolutePath": "contracts/vault/interfaces/ICoreVault.sol",
        "file": "./interfaces/ICoreVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 40667,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39962,
              "name": "ICoreVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40666,
              "src": "441:10:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39965,
        "nodeType": "ImportDirective",
        "src": "489:60:121",
        "nodes": [],
        "absolutePath": "contracts/fee/interfaces/IFeeRouter.sol",
        "file": "../fee/interfaces/IFeeRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 2262,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39964,
              "name": "IFeeRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2261,
              "src": "497:10:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39967,
        "nodeType": "ImportDirective",
        "src": "550:52:121",
        "nodes": [],
        "absolutePath": "contracts/ac/AcUpgradable.sol",
        "file": "../ac/AcUpgradable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 274,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39966,
              "name": "AcUpgradable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 273,
              "src": "558:12:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39969,
        "nodeType": "ImportDirective",
        "src": "603:59:121",
        "nodes": [],
        "absolutePath": "contracts/utils/TransferHelper.sol",
        "file": "../utils/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 36764,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39968,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36763,
              "src": "611:14:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39971,
        "nodeType": "ImportDirective",
        "src": "663:85:121",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40605,
        "sourceUnit": 106627,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39970,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106626,
              "src": "671:15:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40604,
        "nodeType": "ContractDefinition",
        "src": "750:9348:121",
        "nodes": [
          {
            "id": 39979,
            "nodeType": "UsingForDirective",
            "src": "810:27:121",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 39976,
              "name": "SafeERC20",
              "nameLocations": [
                "816:9:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 108574,
              "src": "816:9:121"
            },
            "typeName": {
              "id": 39978,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39977,
                "name": "IERC20",
                "nameLocations": [
                  "830:6:121"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 107291,
                "src": "830:6:121"
              },
              "referencedDeclaration": 107291,
              "src": "830:6:121",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$107291",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 39983,
            "nodeType": "UsingForDirective",
            "src": "842:49:121",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 39980,
              "name": "EnumerableSet",
              "nameLocations": [
                "848:13:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 113823,
              "src": "848:13:121"
            },
            "typeName": {
              "id": 39982,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39981,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "866:13:121",
                  "880:10:121"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 113536,
                "src": "866:24:121"
              },
              "referencedDeclaration": 113536,
              "src": "866:24:121",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$113536_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 39986,
            "nodeType": "VariableDeclaration",
            "src": "897:27:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "f29ebf61",
            "mutability": "mutable",
            "name": "feeRouter",
            "nameLocation": "915:9:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFeeRouter_$2261",
              "typeString": "contract IFeeRouter"
            },
            "typeName": {
              "id": 39985,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39984,
                "name": "IFeeRouter",
                "nameLocations": [
                  "897:10:121"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2261,
                "src": "897:10:121"
              },
              "referencedDeclaration": 2261,
              "src": "897:10:121",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                "typeString": "contract IFeeRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39989,
            "nodeType": "VariableDeclaration",
            "src": "930:27:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "674ce1b5",
            "mutability": "mutable",
            "name": "coreVault",
            "nameLocation": "948:9:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICoreVault_$40666",
              "typeString": "contract ICoreVault"
            },
            "typeName": {
              "id": 39988,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39987,
                "name": "ICoreVault",
                "nameLocations": [
                  "930:10:121"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40666,
                "src": "930:10:121"
              },
              "referencedDeclaration": 40666,
              "src": "930:10:121",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICoreVault_$40666",
                "typeString": "contract ICoreVault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39992,
            "nodeType": "VariableDeclaration",
            "src": "964:40:121",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "markets",
            "nameLocation": "997:7:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 39991,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39990,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "964:13:121",
                  "978:10:121"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 113536,
                "src": "964:24:121"
              },
              "referencedDeclaration": 113536,
              "src": "964:24:121",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$113536_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 39995,
            "nodeType": "VariableDeclaration",
            "src": "1010:39:121",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "1043:6:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 39994,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39993,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "1010:13:121",
                  "1024:10:121"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 113536,
                "src": "1010:24:121"
              },
              "referencedDeclaration": 113536,
              "src": "1010:24:121",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$113536_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 39998,
            "nodeType": "VariableDeclaration",
            "src": "1055:36:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "a59e73e8",
            "mutability": "mutable",
            "name": "isFreezeTransfer",
            "nameLocation": "1067:16:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 39996,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1055:4:121",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 39997,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1086:5:121",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "id": 40000,
            "nodeType": "VariableDeclaration",
            "src": "1098:29:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "11a2ad49",
            "mutability": "mutable",
            "name": "totalFundsUsed",
            "nameLocation": "1113:14:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39999,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1098:7:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40004,
            "nodeType": "VariableDeclaration",
            "src": "1133:44:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "2b8a0012",
            "mutability": "mutable",
            "name": "fundsUsed",
            "nameLocation": "1168:9:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 40003,
              "keyType": {
                "id": 40001,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1141:7:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1133:27:121",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 40002,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1152:7:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 40009,
            "nodeType": "VariableDeclaration",
            "src": "1183:50:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "92106cbb",
            "mutability": "mutable",
            "name": "marketVaults",
            "nameLocation": "1221:12:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
              "typeString": "mapping(address => contract ICoreVault)"
            },
            "typeName": {
              "id": 40008,
              "keyType": {
                "id": 40005,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1191:7:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1183:30:121",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
                "typeString": "mapping(address => contract ICoreVault)"
              },
              "valueType": {
                "id": 40007,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40006,
                  "name": "ICoreVault",
                  "nameLocations": [
                    "1202:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40666,
                  "src": "1202:10:121"
                },
                "referencedDeclaration": 40666,
                "src": "1202:10:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICoreVault_$40666",
                  "typeString": "contract ICoreVault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 40014,
            "nodeType": "VariableDeclaration",
            "src": "1239:50:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "61b314cb",
            "mutability": "mutable",
            "name": "vaultMarkets",
            "nameLocation": "1277:12:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ICoreVault_$40666_$_t_address_$",
              "typeString": "mapping(contract ICoreVault => address)"
            },
            "typeName": {
              "id": 40013,
              "keyType": {
                "id": 40011,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40010,
                  "name": "ICoreVault",
                  "nameLocations": [
                    "1247:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40666,
                  "src": "1247:10:121"
                },
                "referencedDeclaration": 40666,
                "src": "1247:10:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICoreVault_$40666",
                  "typeString": "contract ICoreVault"
                }
              },
              "nodeType": "Mapping",
              "src": "1239:30:121",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ICoreVault_$40666_$_t_address_$",
                "typeString": "mapping(contract ICoreVault => address)"
              },
              "valueType": {
                "id": 40012,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1261:7:121",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 40017,
            "nodeType": "VariableDeclaration",
            "src": "1295:37:121",
            "nodes": [],
            "constant": false,
            "functionSelector": "3001a9a2",
            "mutability": "mutable",
            "name": "isFreezeAccouting",
            "nameLocation": "1307:17:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 40015,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1295:4:121",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 40016,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1327:5:121",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "id": 40023,
            "nodeType": "EventDefinition",
            "src": "1339:53:121",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "32a2e913e263febe3421a6e85924137ecf50c1aaec4f37b3deec772651f21fcd",
            "name": "LogIsFreeze",
            "nameLocation": "1345:11:121",
            "parameters": {
              "id": 40022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40019,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isFreeze",
                  "nameLocation": "1362:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40023,
                  "src": "1357:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40018,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40021,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "freezeType",
                  "nameLocation": "1380:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40023,
                  "src": "1372:18:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:35:121"
            }
          },
          {
            "id": 40036,
            "nodeType": "ModifierDefinition",
            "src": "1398:110:121",
            "nodes": [],
            "body": {
              "id": 40035,
              "nodeType": "Block",
              "src": "1420:88:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 40028,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1455:3:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 40029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1459:6:121",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1455:10:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40026,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39992,
                            "src": "1438:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 40027,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1446:8:121",
                          "memberName": "contains",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 113617,
                          "src": "1438:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$113536_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$113536_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 40030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1438:28:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74526f757465723a216d61726b6574",
                        "id": 40031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1468:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_013332ffa97ea1cad2dc0e0f6da7f64dd07ec483a8118310bd9a1482ca24fcb6",
                          "typeString": "literal_string \"VaultRouter:!market\""
                        },
                        "value": "VaultRouter:!market"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_013332ffa97ea1cad2dc0e0f6da7f64dd07ec483a8118310bd9a1482ca24fcb6",
                          "typeString": "literal_string \"VaultRouter:!market\""
                        }
                      ],
                      "id": 40025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1430:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1430:60:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40033,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:60:121"
                },
                {
                  "id": 40034,
                  "nodeType": "PlaceholderStatement",
                  "src": "1500:1:121"
                }
              ]
            },
            "name": "onlyMarket",
            "nameLocation": "1407:10:121",
            "parameters": {
              "id": 40024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1417:2:121"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40084,
            "nodeType": "FunctionDefinition",
            "src": "1514:335:121",
            "nodes": [],
            "body": {
              "id": 40083,
              "nodeType": "Block",
              "src": "1584:265:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40046,
                          "name": "freezeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40040,
                          "src": "1602:10:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 40047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1615:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "1602:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21667265657a6554797065",
                        "id": 40049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1618:13:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb0b33bd6def42cb1d1f33315155f9d2f1ad6c05fd24771af33229fc3cd49821",
                          "typeString": "literal_string \"!freezeType\""
                        },
                        "value": "!freezeType"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb0b33bd6def42cb1d1f33315155f9d2f1ad6c05fd24771af33229fc3cd49821",
                          "typeString": "literal_string \"!freezeType\""
                        }
                      ],
                      "id": 40045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1594:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1594:38:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40051,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:38:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40052,
                      "name": "freezeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40040,
                      "src": "1647:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 40053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1661:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1647:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 40063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 40061,
                        "name": "freezeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40040,
                        "src": "1707:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 40062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1721:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1707:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40068,
                          "name": "freezeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40040,
                          "src": "1763:10:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 40069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1777:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1763:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 40075,
                      "nodeType": "IfStatement",
                      "src": "1759:42:121",
                      "trueBody": {
                        "expression": {
                          "id": 40073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40071,
                            "name": "isFreezeAccouting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40017,
                            "src": "1780:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 40072,
                            "name": "f",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40038,
                            "src": "1800:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1780:21:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 40074,
                        "nodeType": "ExpressionStatement",
                        "src": "1780:21:121"
                      }
                    },
                    "id": 40076,
                    "nodeType": "IfStatement",
                    "src": "1703:98:121",
                    "trueBody": {
                      "expression": {
                        "id": 40066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 40064,
                          "name": "isFreezeTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39998,
                          "src": "1724:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 40065,
                          "name": "f",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40038,
                          "src": "1743:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1724:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 40067,
                      "nodeType": "ExpressionStatement",
                      "src": "1724:20:121"
                    }
                  },
                  "id": 40077,
                  "nodeType": "IfStatement",
                  "src": "1643:158:121",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 40058,
                          "name": "f",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40038,
                          "src": "1686:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 40055,
                          "name": "coreVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39989,
                          "src": "1664:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICoreVault_$40666",
                            "typeString": "contract ICoreVault"
                          }
                        },
                        "id": 40057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1674:11:121",
                        "memberName": "setIsFreeze",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40665,
                        "src": "1664:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                          "typeString": "function (bool) external"
                        }
                      },
                      "id": 40059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1664:24:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 40060,
                    "nodeType": "ExpressionStatement",
                    "src": "1664:24:121"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 40079,
                        "name": "f",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40038,
                        "src": "1828:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 40080,
                        "name": "freezeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40040,
                        "src": "1831:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40078,
                      "name": "LogIsFreeze",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40023,
                      "src": "1816:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256)"
                      }
                    },
                    "id": 40081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1816:26:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40082,
                  "nodeType": "EmitStatement",
                  "src": "1811:31:121"
                }
              ]
            },
            "functionSelector": "290f5e49",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40042,
                  "name": "onlyFreezer",
                  "nameLocations": [
                    "1572:11:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 199,
                  "src": "1572:11:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "1572:11:121"
              }
            ],
            "name": "setIsFreeze",
            "nameLocation": "1523:11:121",
            "parameters": {
              "id": 40041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40038,
                  "mutability": "mutable",
                  "name": "f",
                  "nameLocation": "1540:1:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40084,
                  "src": "1535:6:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40037,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40040,
                  "mutability": "mutable",
                  "name": "freezeType",
                  "nameLocation": "1551:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40084,
                  "src": "1543:18:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1534:28:121"
            },
            "returnParameters": {
              "id": 40044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1584:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40113,
            "nodeType": "FunctionDefinition",
            "src": "1855:242:121",
            "nodes": [],
            "body": {
              "id": 40112,
              "nodeType": "Block",
              "src": "1956:141:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40096,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1991:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1995:6:121",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1991:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40093,
                        "name": "AcUpgradable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "1966:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AcUpgradable_$273_$",
                          "typeString": "type(contract AcUpgradable)"
                        }
                      },
                      "id": 40095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1979:11:121",
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "1966:24:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1966:36:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40099,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:36:121"
                },
                {
                  "expression": {
                    "id": 40104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40100,
                      "name": "coreVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39989,
                      "src": "2012:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40102,
                          "name": "_coreVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40086,
                          "src": "2035:10:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40101,
                        "name": "ICoreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40666,
                        "src": "2024:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICoreVault_$40666_$",
                          "typeString": "type(contract ICoreVault)"
                        }
                      },
                      "id": 40103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2024:22:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      }
                    },
                    "src": "2012:34:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "id": 40105,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:34:121"
                },
                {
                  "expression": {
                    "id": 40110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40106,
                      "name": "feeRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39986,
                      "src": "2056:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                        "typeString": "contract IFeeRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40108,
                          "name": "_feeRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40088,
                          "src": "2079:10:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40107,
                        "name": "IFeeRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "2068:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeRouter_$2261_$",
                          "typeString": "type(contract IFeeRouter)"
                        }
                      },
                      "id": 40109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2068:22:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                        "typeString": "contract IFeeRouter"
                      }
                    },
                    "src": "2056:34:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeRouter_$2261",
                      "typeString": "contract IFeeRouter"
                    }
                  },
                  "id": 40111,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:34:121"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40091,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40090,
                  "name": "initializer",
                  "nameLocations": [
                    "1944:11:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 103185,
                  "src": "1944:11:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "1944:11:121"
              }
            ],
            "name": "initialize",
            "nameLocation": "1864:10:121",
            "parameters": {
              "id": 40089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40086,
                  "mutability": "mutable",
                  "name": "_coreVault",
                  "nameLocation": "1892:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40113,
                  "src": "1884:18:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40088,
                  "mutability": "mutable",
                  "name": "_feeRouter",
                  "nameLocation": "1920:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40113,
                  "src": "1912:18:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1874:62:121"
            },
            "returnParameters": {
              "id": 40092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40119,
            "nodeType": "EventDefinition",
            "src": "2103:50:121",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4dd2648b8febf05ec183e673f430b81feb098c55a6622cae1d6ab6a495b38c75",
            "name": "MarketSetted",
            "nameLocation": "2109:12:121",
            "parameters": {
              "id": 40118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "2130:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40119,
                  "src": "2122:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2146:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40119,
                  "src": "2138:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2121:31:121"
            }
          },
          {
            "id": 40175,
            "nodeType": "FunctionDefinition",
            "src": "2176:384:121",
            "nodes": [],
            "body": {
              "id": 40174,
              "nodeType": "Block",
              "src": "2283:277:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40132,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40121,
                            "src": "2313:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40130,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39992,
                            "src": "2301:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 40131,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2309:3:121",
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 113563,
                          "src": "2301:11:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$113536_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$113536_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                          }
                        },
                        "id": 40133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2301:19:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 40129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2293:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 40134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:28:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40135,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:28:121"
                },
                {
                  "expression": {
                    "id": 40142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40136,
                        "name": "marketVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40009,
                        "src": "2331:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
                          "typeString": "mapping(address => contract ICoreVault)"
                        }
                      },
                      "id": 40138,
                      "indexExpression": {
                        "id": 40137,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40121,
                        "src": "2344:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2331:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40140,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40123,
                          "src": "2365:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40139,
                        "name": "ICoreVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40666,
                        "src": "2354:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICoreVault_$40666_$",
                          "typeString": "type(contract ICoreVault)"
                        }
                      },
                      "id": 40141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2354:17:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      }
                    },
                    "src": "2331:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "id": 40143,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:40:121"
                },
                {
                  "expression": {
                    "id": 40150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40144,
                        "name": "vaultMarkets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40014,
                        "src": "2381:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ICoreVault_$40666_$_t_address_$",
                          "typeString": "mapping(contract ICoreVault => address)"
                        }
                      },
                      "id": 40148,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 40146,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40123,
                            "src": "2405:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40145,
                          "name": "ICoreVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40666,
                          "src": "2394:10:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICoreVault_$40666_$",
                            "typeString": "type(contract ICoreVault)"
                          }
                        },
                        "id": 40147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2394:17:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2381:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40149,
                      "name": "market",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40121,
                      "src": "2415:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2381:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40151,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:40:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40157,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40123,
                            "src": "2450:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2442:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2442:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2442:14:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40152,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39995,
                        "src": "2431:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 40154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2438:3:121",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113563,
                      "src": "2431:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$113536_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$113536_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 40159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2431:26:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40160,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:26:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40162,
                        "name": "ROLE_CONTROLLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2478:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 40163,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40121,
                        "src": "2495:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40161,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105254,
                      "src": "2467:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 40164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:35:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40165,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:35:121"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 40167,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40121,
                        "src": "2530:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40170,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40123,
                            "src": "2546:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2538:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2538:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2538:14:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40166,
                      "name": "MarketSetted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40119,
                      "src": "2517:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 40172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:36:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40173,
                  "nodeType": "EmitStatement",
                  "src": "2512:41:121"
                }
              ]
            },
            "functionSelector": "a7c1daa4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40126,
                    "name": "MULTI_SIGN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85,
                    "src": "2266:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 40127,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40125,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2257:8:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105009,
                  "src": "2257:8:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "2257:25:121"
              }
            ],
            "name": "setMarket",
            "nameLocation": "2185:9:121",
            "parameters": {
              "id": 40124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40121,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "2212:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40175,
                  "src": "2204:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40123,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2236:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40175,
                  "src": "2228:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:53:121"
            },
            "returnParameters": {
              "id": 40128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2283:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40181,
            "nodeType": "EventDefinition",
            "src": "2566:51:121",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e53458cf1e128fd9dd751ec85180c9b93f69b6b6add116d5238cb46f90268d67",
            "name": "MarketRemoved",
            "nameLocation": "2572:13:121",
            "parameters": {
              "id": 40180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "2594:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40181,
                  "src": "2586:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2610:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40181,
                  "src": "2602:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2602:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:31:121"
            }
          },
          {
            "id": 40235,
            "nodeType": "FunctionDefinition",
            "src": "2623:371:121",
            "nodes": [],
            "body": {
              "id": 40234,
              "nodeType": "Block",
              "src": "2695:299:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40192,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40183,
                        "src": "2720:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40189,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39992,
                        "src": "2705:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 40191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2713:6:121",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113590,
                      "src": "2705:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$113536_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$113536_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 40193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2705:22:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40194,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:22:121"
                },
                {
                  "assignments": [
                    40196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40196,
                      "mutability": "mutable",
                      "name": "vlt",
                      "nameLocation": "2745:3:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40234,
                      "src": "2737:11:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40195,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2737:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40203,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 40199,
                          "name": "marketVaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40009,
                          "src": "2759:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
                            "typeString": "mapping(address => contract ICoreVault)"
                          }
                        },
                        "id": 40201,
                        "indexExpression": {
                          "id": 40200,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40183,
                          "src": "2772:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2759:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      ],
                      "id": 40198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2751:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 40197,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2751:7:121",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 40202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2737:43:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40207,
                        "name": "vlt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "2804:3:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40204,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39995,
                        "src": "2790:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 40206,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2797:6:121",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113590,
                      "src": "2790:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$113536_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$113536_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 40208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2790:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40209,
                  "nodeType": "ExpressionStatement",
                  "src": "2790:18:121"
                },
                {
                  "expression": {
                    "id": 40216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2818:43:121",
                    "subExpression": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 40210,
                            "name": "vaultMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40014,
                            "src": "2826:12:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_ICoreVault_$40666_$_t_address_$",
                              "typeString": "mapping(contract ICoreVault => address)"
                            }
                          },
                          "id": 40214,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 40211,
                              "name": "marketVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40009,
                              "src": "2839:12:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
                                "typeString": "mapping(address => contract ICoreVault)"
                              }
                            },
                            "id": 40213,
                            "indexExpression": {
                              "id": 40212,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40183,
                              "src": "2852:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2839:20:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICoreVault_$40666",
                              "typeString": "contract ICoreVault"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2826:34:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 40215,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2825:36:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40217,
                  "nodeType": "ExpressionStatement",
                  "src": "2818:43:121"
                },
                {
                  "expression": {
                    "id": 40222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2871:29:121",
                    "subExpression": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 40218,
                            "name": "marketVaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40009,
                            "src": "2879:12:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
                              "typeString": "mapping(address => contract ICoreVault)"
                            }
                          },
                          "id": 40220,
                          "indexExpression": {
                            "id": 40219,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40183,
                            "src": "2892:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2879:20:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICoreVault_$40666",
                            "typeString": "contract ICoreVault"
                          }
                        }
                      ],
                      "id": 40221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2878:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40223,
                  "nodeType": "ExpressionStatement",
                  "src": "2871:29:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40225,
                        "name": "ROLE_CONTROLLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2922:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 40226,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40183,
                        "src": "2939:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40224,
                      "name": "_revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105285,
                      "src": "2910:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 40227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2910:36:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40228,
                  "nodeType": "ExpressionStatement",
                  "src": "2910:36:121"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 40230,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40183,
                        "src": "2975:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40231,
                        "name": "vlt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "2983:3:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40229,
                      "name": "MarketRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40181,
                      "src": "2961:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 40232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2961:26:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40233,
                  "nodeType": "EmitStatement",
                  "src": "2956:31:121"
                }
              ]
            },
            "functionSelector": "db913236",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40186,
                    "name": "VAULT_MGR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "2679:14:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 40187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40185,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2670:8:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 105009,
                  "src": "2670:8:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "2670:24:121"
              }
            ],
            "name": "removeMarket",
            "nameLocation": "2632:12:121",
            "parameters": {
              "id": 40184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40183,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "2653:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40235,
                  "src": "2645:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2644:16:121"
            },
            "returnParameters": {
              "id": 40188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40277,
            "nodeType": "FunctionDefinition",
            "src": "3432:380:121",
            "nodes": [],
            "body": {
              "id": 40276,
              "nodeType": "Block",
              "src": "3536:276:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "66616c7365",
                          "id": 40246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3554:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 40247,
                          "name": "isFreezeTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39998,
                          "src": "3563:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3554:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74526f757465723a667265657a65",
                        "id": 40249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3581:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        },
                        "value": "VaultRouter:freeze"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        }
                      ],
                      "id": 40245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3546:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3546:56:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40251,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:56:121"
                },
                {
                  "assignments": [
                    40254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40254,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "3623:5:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40276,
                      "src": "3612:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      },
                      "typeName": {
                        "id": 40253,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40252,
                          "name": "ICoreVault",
                          "nameLocations": [
                            "3612:10:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40666,
                          "src": "3612:10:121"
                        },
                        "referencedDeclaration": 40666,
                        "src": "3612:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40259,
                  "initialValue": {
                    "baseExpression": {
                      "id": 40255,
                      "name": "marketVaults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40009,
                      "src": "3631:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
                        "typeString": "mapping(address => contract ICoreVault)"
                      }
                    },
                    "id": 40258,
                    "indexExpression": {
                      "expression": {
                        "id": 40256,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3644:3:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3648:6:121",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3644:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3631:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3612:43:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 40264,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40254,
                                "src": "3712:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICoreVault_$40666",
                                  "typeString": "contract ICoreVault"
                                }
                              },
                              "id": 40265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3718:5:121",
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 105533,
                              "src": "3712:11:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 40266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3712:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40263,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107291,
                          "src": "3705:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 40267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3705:21:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 40268,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40238,
                        "src": "3740:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40271,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40254,
                            "src": "3769:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICoreVault_$40666",
                              "typeString": "contract ICoreVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ICoreVault_$40666",
                              "typeString": "contract ICoreVault"
                            }
                          ],
                          "id": 40270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3761:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3761:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3761:14:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40273,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40240,
                        "src": "3789:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$107291",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40260,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108574,
                        "src": "3665:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$108574_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 40262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3675:16:121",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 108258,
                      "src": "3665:26:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$107291_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 40274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:140:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40275,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:140:121"
                }
              ]
            },
            "documentation": {
              "id": 40236,
              "nodeType": "StructuredDocumentation",
              "src": "3000:427:121",
              "text": " @dev Transfers a specified amount of an ERC20 asset from `account` to the corresponding `ICoreVault` associated with the calling `msg.sender` market contract.\n @param account The address of the account from which the tokens will be transferred.\n @param amount The amount of tokens to be transferred to the vault.\n @notice This function can only be called by a contract with the MARKET_ROLE."
            },
            "functionSelector": "89a71faa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40242,
                  "name": "onlyController",
                  "nameLocations": [
                    "3521:14:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "3521:14:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "3521:14:121"
              }
            ],
            "name": "transferToVault",
            "nameLocation": "3441:15:121",
            "parameters": {
              "id": 40241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40238,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3474:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40277,
                  "src": "3466:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40240,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3499:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40277,
                  "src": "3491:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3456:55:121"
            },
            "returnParameters": {
              "id": 40244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3536:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40310,
            "nodeType": "FunctionDefinition",
            "src": "4107:272:121",
            "nodes": [],
            "body": {
              "id": 40309,
              "nodeType": "Block",
              "src": "4208:171:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "66616c7365",
                          "id": 40288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4226:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 40289,
                          "name": "isFreezeTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39998,
                          "src": "4235:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4226:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74526f757465723a667265657a65",
                        "id": 40291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4253:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        },
                        "value": "VaultRouter:freeze"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        }
                      ],
                      "id": 40287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4218:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4218:56:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40293,
                  "nodeType": "ExpressionStatement",
                  "src": "4218:56:121"
                },
                {
                  "assignments": [
                    40296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40296,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "4295:5:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40309,
                      "src": "4284:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICoreVault_$40666",
                        "typeString": "contract ICoreVault"
                      },
                      "typeName": {
                        "id": 40295,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40294,
                          "name": "ICoreVault",
                          "nameLocations": [
                            "4284:10:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40666,
                          "src": "4284:10:121"
                        },
                        "referencedDeclaration": 40666,
                        "src": "4284:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40301,
                  "initialValue": {
                    "baseExpression": {
                      "id": 40297,
                      "name": "marketVaults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40009,
                      "src": "4303:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_ICoreVault_$40666_$",
                        "typeString": "mapping(address => contract ICoreVault)"
                      }
                    },
                    "id": 40300,
                    "indexExpression": {
                      "expression": {
                        "id": 40298,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4316:3:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4320:6:121",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4316:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4303:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4284:43:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40305,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40280,
                        "src": "4361:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40306,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40282,
                        "src": "4365:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40302,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40296,
                        "src": "4337:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 40304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4343:17:121",
                      "memberName": "transferOutAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40653,
                      "src": "4337:23:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4337:35:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40308,
                  "nodeType": "ExpressionStatement",
                  "src": "4337:35:121"
                }
              ]
            },
            "documentation": {
              "id": 40278,
              "nodeType": "StructuredDocumentation",
              "src": "3818:284:121",
              "text": " @dev Transfers a specified amount of assets from the vault of the calling market to a specified address.\n Only a market role can call this function.\n @param to The address to transfer the assets to.\n @param amount The amount of assets to transfer."
            },
            "functionSelector": "da8ddc74",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40285,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40284,
                  "name": "onlyController",
                  "nameLocations": [
                    "4193:14:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 215,
                  "src": "4193:14:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "4193:14:121"
              }
            ],
            "name": "transferFromVault",
            "nameLocation": "4116:17:121",
            "parameters": {
              "id": 40283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40280,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4151:2:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40310,
                  "src": "4143:10:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4143:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40282,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4171:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40310,
                  "src": "4163:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4163:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4133:50:121"
            },
            "returnParameters": {
              "id": 40286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4208:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40333,
            "nodeType": "FunctionDefinition",
            "src": "4847:187:121",
            "nodes": [],
            "body": {
              "id": 40332,
              "nodeType": "Block",
              "src": "4908:126:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "66616c7365",
                          "id": 40319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4926:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 40320,
                          "name": "isFreezeAccouting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40017,
                          "src": "4935:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4926:26:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74526f757465723a667265657a65",
                        "id": 40322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4954:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        },
                        "value": "VaultRouter:freeze"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        }
                      ],
                      "id": 40318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4918:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:57:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40324,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:57:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5002:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5006:6:121",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5002:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40328,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40313,
                        "src": "5014:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5022:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 40325,
                      "name": "updateFundsUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40413,
                      "src": "4986:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 40330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4986:41:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40331,
                  "nodeType": "ExpressionStatement",
                  "src": "4986:41:121"
                }
              ]
            },
            "documentation": {
              "id": 40311,
              "nodeType": "StructuredDocumentation",
              "src": "4385:457:121",
              "text": " @dev Function to borrow tokens from the Vault of a market.\n @param amount The amount of tokens to borrow.\n @notice This function can only be called by a market contract that has been added to the 'markets' set.\n         The function updates the funds used in the market by the borrowed amount, using the 'updateFundsUsed' internal function.\n         The borrowed tokens will be transferred to the caller's address."
            },
            "functionSelector": "c6aee618",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40316,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40315,
                  "name": "onlyMarket",
                  "nameLocations": [
                    "4897:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40036,
                  "src": "4897:10:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "4897:10:121"
              }
            ],
            "name": "borrowFromVault",
            "nameLocation": "4856:15:121",
            "parameters": {
              "id": 40314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40313,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4880:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40333,
                  "src": "4872:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4872:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4871:16:121"
            },
            "returnParameters": {
              "id": 40317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40356,
            "nodeType": "FunctionDefinition",
            "src": "5663:184:121",
            "nodes": [],
            "body": {
              "id": 40355,
              "nodeType": "Block",
              "src": "5721:126:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "66616c7365",
                          "id": 40342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5739:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 40343,
                          "name": "isFreezeAccouting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40017,
                          "src": "5748:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5739:26:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74526f757465723a667265657a65",
                        "id": 40345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5767:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        },
                        "value": "VaultRouter:freeze"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_287d7996836089ddeef717406567f0c7ed5e797271fc77c412174924981969eb",
                          "typeString": "literal_string \"VaultRouter:freeze\""
                        }
                      ],
                      "id": 40341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5731:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:57:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40347,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:57:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5814:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5818:6:121",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5814:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40351,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40336,
                        "src": "5826:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 40352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5834:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 40348,
                      "name": "updateFundsUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40413,
                      "src": "5798:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool)"
                      }
                    },
                    "id": 40353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5798:42:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40354,
                  "nodeType": "ExpressionStatement",
                  "src": "5798:42:121"
                }
              ]
            },
            "documentation": {
              "id": 40334,
              "nodeType": "StructuredDocumentation",
              "src": "5040:618:121",
              "text": " @dev This function is used to repay a specified amount of borrowed funds to the Vault contract by the market contract that calls it.\n @param amount The amount of borrowed funds to be repaid.\n The function checks if the market contract calling the function is a valid market. If the market is valid, it calls the \"updateFundsUsed\" function to update the amount of funds used by the market. The \"amount\" parameter is used to specify the amount of funds being repaid. Once the update is completed, the borrowed funds are returned to the Vault contract, and the function completes execution."
            },
            "functionSelector": "e108262f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40338,
                  "name": "onlyMarket",
                  "nameLocations": [
                    "5710:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40036,
                  "src": "5710:10:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "5710:10:121"
              }
            ],
            "name": "repayToVault",
            "nameLocation": "5672:12:121",
            "parameters": {
              "id": 40337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40336,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5693:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40356,
                  "src": "5685:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5685:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5684:16:121"
            },
            "returnParameters": {
              "id": 40340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5721:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40364,
            "nodeType": "EventDefinition",
            "src": "5853:117:121",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "128f29b8f021c76a97203bea2d9fa18e1a05034b92c6232990dd75a7e447f649",
            "name": "FundsUsedUpdated",
            "nameLocation": "5859:16:121",
            "parameters": {
              "id": 40363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40358,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "5901:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40364,
                  "src": "5885:22:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5885:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40360,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5925:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40364,
                  "src": "5917:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5917:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40362,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalFundsUsed",
                  "nameLocation": "5949:14:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40364,
                  "src": "5941:22:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5941:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5875:94:121"
            }
          },
          {
            "id": 40413,
            "nodeType": "FunctionDefinition",
            "src": "6220:473:121",
            "nodes": [],
            "body": {
              "id": 40412,
              "nodeType": "Block",
              "src": "6330:363:121",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 40374,
                    "name": "isBorrow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40371,
                    "src": "6344:8:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 40402,
                    "nodeType": "Block",
                    "src": "6523:90:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 40396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 40392,
                              "name": "fundsUsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40004,
                              "src": "6537:9:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 40394,
                            "indexExpression": {
                              "id": 40393,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40367,
                              "src": "6547:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6537:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 40395,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40369,
                            "src": "6558:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6537:27:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40397,
                        "nodeType": "ExpressionStatement",
                        "src": "6537:27:121"
                      },
                      {
                        "expression": {
                          "id": 40400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40398,
                            "name": "totalFundsUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40000,
                            "src": "6578:14:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 40399,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40369,
                            "src": "6596:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6578:24:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40401,
                        "nodeType": "ExpressionStatement",
                        "src": "6578:24:121"
                      }
                    ]
                  },
                  "id": 40403,
                  "nodeType": "IfStatement",
                  "src": "6340:273:121",
                  "trueBody": {
                    "id": 40391,
                    "nodeType": "Block",
                    "src": "6354:163:121",
                    "statements": [
                      {
                        "assignments": [
                          40376
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40376,
                            "mutability": "mutable",
                            "name": "pendingFundsUsed",
                            "nameLocation": "6376:16:121",
                            "nodeType": "VariableDeclaration",
                            "scope": 40391,
                            "src": "6368:24:121",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40375,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6368:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40380,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 40379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 40377,
                            "name": "totalFundsUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40000,
                            "src": "6395:14:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 40378,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40369,
                            "src": "6412:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6395:23:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6368:50:121"
                      },
                      {
                        "expression": {
                          "id": 40385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 40381,
                              "name": "fundsUsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40004,
                              "src": "6432:9:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 40383,
                            "indexExpression": {
                              "id": 40382,
                              "name": "market",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40367,
                              "src": "6442:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6432:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 40384,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40369,
                            "src": "6453:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6432:27:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40386,
                        "nodeType": "ExpressionStatement",
                        "src": "6432:27:121"
                      },
                      {
                        "expression": {
                          "id": 40389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40387,
                            "name": "totalFundsUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40000,
                            "src": "6473:14:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 40388,
                            "name": "pendingFundsUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40376,
                            "src": "6490:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6473:33:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40390,
                        "nodeType": "ExpressionStatement",
                        "src": "6473:33:121"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 40405,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40367,
                        "src": "6644:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 40406,
                          "name": "fundsUsed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40004,
                          "src": "6652:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 40408,
                        "indexExpression": {
                          "id": 40407,
                          "name": "market",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40367,
                          "src": "6662:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6652:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 40409,
                        "name": "totalFundsUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40000,
                        "src": "6671:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40404,
                      "name": "FundsUsedUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40364,
                      "src": "6627:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 40410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6627:59:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40411,
                  "nodeType": "EmitStatement",
                  "src": "6622:64:121"
                }
              ]
            },
            "documentation": {
              "id": 40365,
              "nodeType": "StructuredDocumentation",
              "src": "5976:239:121",
              "text": " @dev Updates the funds used for a specific market.\n @param market The address of the market.\n @param amount The amount of funds used.\n @param isBorrow Boolean indicating whether it's a borrow operation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateFundsUsed",
            "nameLocation": "6229:15:121",
            "parameters": {
              "id": 40372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40367,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "6262:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40413,
                  "src": "6254:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6254:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40369,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6286:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40413,
                  "src": "6278:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40371,
                  "mutability": "mutable",
                  "name": "isBorrow",
                  "nameLocation": "6307:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40413,
                  "src": "6302:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6302:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6244:77:121"
            },
            "returnParameters": {
              "id": 40373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6330:0:121"
            },
            "scope": 40604,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 40466,
            "nodeType": "FunctionDefinition",
            "src": "7360:365:121",
            "nodes": [],
            "body": {
              "id": 40465,
              "nodeType": "Block",
              "src": "7415:310:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40423,
                      "mutability": "mutable",
                      "name": "vaultAddrs",
                      "nameLocation": "7442:10:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40465,
                      "src": "7425:27:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40421,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7425:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40422,
                        "nodeType": "ArrayTypeName",
                        "src": "7425:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40427,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40424,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39995,
                        "src": "7455:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 40425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7462:6:121",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113689,
                      "src": "7455:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$113536_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$113536_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 40426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7455:15:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7425:45:121"
                },
                {
                  "assignments": [
                    40429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40429,
                      "mutability": "mutable",
                      "name": "totalAssets",
                      "nameLocation": "7488:11:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40465,
                      "src": "7480:19:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7480:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40430,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7480:19:121"
                },
                {
                  "body": {
                    "id": 40461,
                    "nodeType": "Block",
                    "src": "7557:133:121",
                    "statements": [
                      {
                        "assignments": [
                          40443
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40443,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "7579:5:121",
                            "nodeType": "VariableDeclaration",
                            "scope": 40461,
                            "src": "7571:13:121",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 40442,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7571:7:121",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40447,
                        "initialValue": {
                          "baseExpression": {
                            "id": 40444,
                            "name": "vaultAddrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40423,
                            "src": "7587:10:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 40446,
                          "indexExpression": {
                            "id": 40445,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40432,
                            "src": "7598:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7587:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7571:29:121"
                      },
                      {
                        "expression": {
                          "id": 40459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40448,
                            "name": "totalAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40429,
                            "src": "7614:11:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 40457,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40443,
                                "src": "7673:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 40451,
                                            "name": "vault",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 40443,
                                            "src": "7647:5:121",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 40450,
                                          "name": "ICoreVault",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40666,
                                          "src": "7636:10:121",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ICoreVault_$40666_$",
                                            "typeString": "type(contract ICoreVault)"
                                          }
                                        },
                                        "id": 40452,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7636:17:121",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                                          "typeString": "contract ICoreVault"
                                        }
                                      },
                                      "id": 40453,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7654:5:121",
                                      "memberName": "asset",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 105533,
                                      "src": "7636:23:121",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 40454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7636:25:121",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 40449,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107291,
                                  "src": "7629:6:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$107291_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 40455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7629:33:121",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$107291",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 40456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7663:9:121",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 107248,
                              "src": "7629:43:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 40458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7629:50:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7614:65:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40460,
                        "nodeType": "ExpressionStatement",
                        "src": "7614:65:121"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40435,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40432,
                      "src": "7529:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 40436,
                        "name": "vaultAddrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40423,
                        "src": "7533:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 40437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7544:6:121",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7533:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7529:21:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40462,
                  "initializationExpression": {
                    "assignments": [
                      40432
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40432,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7522:1:121",
                        "nodeType": "VariableDeclaration",
                        "scope": 40462,
                        "src": "7514:9:121",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40431,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7514:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40434,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7526:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7514:13:121"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7552:3:121",
                      "subExpression": {
                        "id": 40439,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40432,
                        "src": "7552:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40441,
                    "nodeType": "ExpressionStatement",
                    "src": "7552:3:121"
                  },
                  "nodeType": "ForStatement",
                  "src": "7509:181:121"
                },
                {
                  "expression": {
                    "id": 40463,
                    "name": "totalAssets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40429,
                    "src": "7707:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 40418,
                  "id": 40464,
                  "nodeType": "Return",
                  "src": "7700:18:121"
                }
              ]
            },
            "documentation": {
              "id": 40414,
              "nodeType": "StructuredDocumentation",
              "src": "6699:656:121",
              "text": " @dev This function is used to calculate the total USD balance of all the Vaults in the system.\n @return totalAssets The total USD balance of all the Vaults in the system.\n The function retrieves the addresses of all the Vaults in the system and calculates the total USD balance of all the Vaults. This is done by iterating over all the Vault addresses and calling the \"balanceOf\" function of the asset token associated with each Vault to retrieve the USD balance. The retrieved balances are then summed up to give the \"totalAssets\" of all the Vaults in the system. This value is returned as the output of the function."
            },
            "functionSelector": "c1201054",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUSDBalance",
            "nameLocation": "7369:13:121",
            "parameters": {
              "id": 40415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7382:2:121"
            },
            "returnParameters": {
              "id": 40418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40417,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40466,
                  "src": "7406:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7406:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7405:9:121"
            },
            "scope": 40604,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40513,
            "nodeType": "FunctionDefinition",
            "src": "7897:279:121",
            "nodes": [],
            "body": {
              "id": 40512,
              "nodeType": "Block",
              "src": "7950:226:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40476,
                      "mutability": "mutable",
                      "name": "_markets",
                      "nameLocation": "7977:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40512,
                      "src": "7960:25:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7960:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40475,
                        "nodeType": "ArrayTypeName",
                        "src": "7960:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40480,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40477,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39992,
                        "src": "7988:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$113536_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 40478,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7996:6:121",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113689,
                      "src": "7988:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$113536_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$113536_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 40479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7988:16:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7960:44:121"
                },
                {
                  "assignments": [
                    40482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40482,
                      "mutability": "mutable",
                      "name": "pnl",
                      "nameLocation": "8021:3:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40512,
                      "src": "8014:10:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 40481,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8014:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40484,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 40483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8027:1:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8014:14:121"
                },
                {
                  "body": {
                    "id": 40508,
                    "nodeType": "Block",
                    "src": "8084:66:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 40506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40496,
                            "name": "pnl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40482,
                            "src": "8098:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 40505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 40497,
                              "name": "pnl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40482,
                              "src": "8104:3:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 40499,
                                        "name": "_markets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40476,
                                        "src": "8118:8:121",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 40501,
                                      "indexExpression": {
                                        "id": 40500,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40486,
                                        "src": "8127:1:121",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8118:11:121",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 40498,
                                    "name": "IMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13438,
                                    "src": "8110:7:121",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IMarket_$13438_$",
                                      "typeString": "type(contract IMarket)"
                                    }
                                  },
                                  "id": 40502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8110:20:121",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMarket_$13438",
                                    "typeString": "contract IMarket"
                                  }
                                },
                                "id": 40503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8131:6:121",
                                "memberName": "getPNL",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13403,
                                "src": "8110:27:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                  "typeString": "function () view external returns (int256)"
                                }
                              },
                              "id": 40504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8110:29:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "8104:35:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "8098:41:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 40507,
                        "nodeType": "ExpressionStatement",
                        "src": "8098:41:121"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40489,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40486,
                      "src": "8058:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 40490,
                        "name": "_markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40476,
                        "src": "8062:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 40491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8071:6:121",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8062:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8058:19:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40509,
                  "initializationExpression": {
                    "assignments": [
                      40486
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40486,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8051:1:121",
                        "nodeType": "VariableDeclaration",
                        "scope": 40509,
                        "src": "8043:9:121",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8043:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40488,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8055:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8043:13:121"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8079:3:121",
                      "subExpression": {
                        "id": 40493,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40486,
                        "src": "8079:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40495,
                    "nodeType": "ExpressionStatement",
                    "src": "8079:3:121"
                  },
                  "nodeType": "ForStatement",
                  "src": "8038:112:121"
                },
                {
                  "expression": {
                    "id": 40510,
                    "name": "pnl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40482,
                    "src": "8166:3:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 40471,
                  "id": 40511,
                  "nodeType": "Return",
                  "src": "8159:10:121"
                }
              ]
            },
            "documentation": {
              "id": 40467,
              "nodeType": "StructuredDocumentation",
              "src": "7731:161:121",
              "text": " @dev This function calculates the global profit and loss (PNL) across all markets.\n @return pnl The total global PNL as an int256 value."
            },
            "functionSelector": "6f2a14c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGlobalPnl",
            "nameLocation": "7906:12:121",
            "parameters": {
              "id": 40468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7918:2:121"
            },
            "returnParameters": {
              "id": 40471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40513,
                  "src": "7942:6:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 40469,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7941:8:121"
            },
            "scope": 40604,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40560,
            "nodeType": "FunctionDefinition",
            "src": "8373:360:121",
            "nodes": [],
            "body": {
              "id": 40559,
              "nodeType": "Block",
              "src": "8421:312:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40520,
                      "mutability": "mutable",
                      "name": "unbalancedPnl",
                      "nameLocation": "8438:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40559,
                      "src": "8431:20:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 40519,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8431:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40523,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40521,
                      "name": "getGlobalPnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40513,
                      "src": "8454:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 40522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8454:14:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8431:37:121"
                },
                {
                  "assignments": [
                    40525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40525,
                      "mutability": "mutable",
                      "name": "usdBalance",
                      "nameLocation": "8486:10:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40559,
                      "src": "8478:18:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40524,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8478:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40528,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40526,
                      "name": "getUSDBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40466,
                      "src": "8499:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 40527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8499:15:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8478:36:121"
                },
                {
                  "assignments": [
                    40530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40530,
                      "mutability": "mutable",
                      "name": "aum",
                      "nameLocation": "8532:3:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 40559,
                      "src": "8524:11:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40529,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8524:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40531,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8524:11:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 40534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40532,
                      "name": "unbalancedPnl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40520,
                      "src": "8549:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 40533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8565:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8549:17:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 40555,
                    "nodeType": "Block",
                    "src": "8640:67:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 40553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40545,
                            "name": "aum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40530,
                            "src": "8654:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 40552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 40546,
                              "name": "usdBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40525,
                              "src": "8660:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 40550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "8681:14:121",
                                  "subExpression": {
                                    "id": 40549,
                                    "name": "unbalancedPnl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40520,
                                    "src": "8682:13:121",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 40548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8673:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 40547,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8673:7:121",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 40551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8673:23:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8660:36:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8654:42:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40554,
                        "nodeType": "ExpressionStatement",
                        "src": "8654:42:121"
                      }
                    ]
                  },
                  "id": 40556,
                  "nodeType": "IfStatement",
                  "src": "8545:162:121",
                  "trueBody": {
                    "id": 40544,
                    "nodeType": "Block",
                    "src": "8568:66:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 40542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40535,
                            "name": "aum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40530,
                            "src": "8582:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 40541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 40536,
                              "name": "usdBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40525,
                              "src": "8588:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 40539,
                                  "name": "unbalancedPnl",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40520,
                                  "src": "8609:13:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 40538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8601:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 40537,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8601:7:121",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 40540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8601:22:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8588:35:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8582:41:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40543,
                        "nodeType": "ExpressionStatement",
                        "src": "8582:41:121"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 40557,
                    "name": "aum",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40530,
                    "src": "8723:3:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 40518,
                  "id": 40558,
                  "nodeType": "Return",
                  "src": "8716:10:121"
                }
              ]
            },
            "documentation": {
              "id": 40514,
              "nodeType": "StructuredDocumentation",
              "src": "8182:186:121",
              "text": " @dev Called by `CoreVault` and `VaultReward`.This function calculates the assets under management (AUM) of the contract.\n @return aum The AUM value as a uint256."
            },
            "functionSelector": "6dc7b0a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAUM",
            "nameLocation": "8382:6:121",
            "parameters": {
              "id": 40515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8388:2:121"
            },
            "returnParameters": {
              "id": 40518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40517,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40560,
                  "src": "8412:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8412:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8411:9:121"
            },
            "scope": 40604,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40569,
            "nodeType": "FunctionDefinition",
            "src": "8952:80:121",
            "nodes": [],
            "body": {
              "id": 40568,
              "nodeType": "Block",
              "src": "9007:25:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "38",
                    "id": 40566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9024:1:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "functionReturnParameters": 40565,
                  "id": 40567,
                  "nodeType": "Return",
                  "src": "9017:8:121"
                }
              ]
            },
            "documentation": {
              "id": 40561,
              "nodeType": "StructuredDocumentation",
              "src": "8739:208:121",
              "text": " @dev Returns the number of decimal places for the price of the underlying asset in the CoreVault contract.\n @return The number of decimal places for the price of the underlying asset."
            },
            "functionSelector": "05300b28",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "priceDecimals",
            "nameLocation": "8961:13:121",
            "parameters": {
              "id": 40562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8974:2:121"
            },
            "returnParameters": {
              "id": 40565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40569,
                  "src": "8998:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8998:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8997:9:121"
            },
            "scope": 40604,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40584,
            "nodeType": "FunctionDefinition",
            "src": "9316:114:121",
            "nodes": [],
            "body": {
              "id": 40583,
              "nodeType": "Block",
              "src": "9385:45:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 40580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9417:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 40578,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40573,
                        "src": "9402:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 40579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9408:8:121",
                      "memberName": "getLPFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40660,
                      "src": "9402:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bool) view external returns (uint256)"
                      }
                    },
                    "id": 40581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9402:21:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 40577,
                  "id": 40582,
                  "nodeType": "Return",
                  "src": "9395:28:121"
                }
              ]
            },
            "documentation": {
              "id": 40570,
              "nodeType": "StructuredDocumentation",
              "src": "9038:273:121",
              "text": " @dev This function returns the LP fee charged by the specified vault when selling LP tokens.\n @param vault The address of the vault for which to retrieve the LP fee.\n @return lpFee The LP fee charged by the specified vault as a uint256 value."
            },
            "functionSelector": "eb4fe818",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellLpFee",
            "nameLocation": "9325:9:121",
            "parameters": {
              "id": 40574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40573,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "9346:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40584,
                  "src": "9335:16:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICoreVault_$40666",
                    "typeString": "contract ICoreVault"
                  },
                  "typeName": {
                    "id": 40572,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40571,
                      "name": "ICoreVault",
                      "nameLocations": [
                        "9335:10:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40666,
                      "src": "9335:10:121"
                    },
                    "referencedDeclaration": 40666,
                    "src": "9335:10:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9334:18:121"
            },
            "returnParameters": {
              "id": 40577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40576,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40584,
                  "src": "9376:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9376:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9375:9:121"
            },
            "scope": 40604,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40599,
            "nodeType": "FunctionDefinition",
            "src": "9948:112:121",
            "nodes": [],
            "body": {
              "id": 40598,
              "nodeType": "Block",
              "src": "10016:44:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 40595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10048:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 40593,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40588,
                        "src": "10033:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoreVault_$40666",
                          "typeString": "contract ICoreVault"
                        }
                      },
                      "id": 40594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10039:8:121",
                      "memberName": "getLPFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40660,
                      "src": "10033:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (bool) view external returns (uint256)"
                      }
                    },
                    "id": 40596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10033:20:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 40592,
                  "id": 40597,
                  "nodeType": "Return",
                  "src": "10026:27:121"
                }
              ]
            },
            "documentation": {
              "id": 40585,
              "nodeType": "StructuredDocumentation",
              "src": "9436:507:121",
              "text": " @dev This function is used to get the buy Liquidity Provider (LP) fee percentage of a specified Vault.\n @param vault The address of the Vault for which the buy LP fee is to be retrieved.\n @return The buy LP fee percentage of the specified Vault.\n The function calls the \"getLPFee\" function of the specified Vault with the boolean argument \"true\" to retrieve the buy LP fee percentage. The retrieved buy LP fee percentage is returned as the output of the function."
            },
            "functionSelector": "d53b26ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyLpFee",
            "nameLocation": "9957:8:121",
            "parameters": {
              "id": 40589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40588,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "9977:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 40599,
                  "src": "9966:16:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICoreVault_$40666",
                    "typeString": "contract ICoreVault"
                  },
                  "typeName": {
                    "id": 40587,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40586,
                      "name": "ICoreVault",
                      "nameLocations": [
                        "9966:10:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40666,
                      "src": "9966:10:121"
                    },
                    "referencedDeclaration": 40666,
                    "src": "9966:10:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICoreVault_$40666",
                      "typeString": "contract ICoreVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9965:18:121"
            },
            "returnParameters": {
              "id": 40592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40599,
                  "src": "10007:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10007:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10006:9:121"
            },
            "scope": 40604,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40603,
            "nodeType": "VariableDeclaration",
            "src": "10066:29:121",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "10086:9:121",
            "scope": 40604,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 40600,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "10066:7:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 40602,
              "length": {
                "hexValue": "3439",
                "id": 40601,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "10074:2:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "10066:11:121",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39972,
              "name": "AcUpgradable",
              "nameLocations": [
                "774:12:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 273,
              "src": "774:12:121"
            },
            "id": 39973,
            "nodeType": "InheritanceSpecifier",
            "src": "774:12:121"
          },
          {
            "baseName": {
              "id": 39974,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "788:15:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106626,
              "src": "788:15:121"
            },
            "id": 39975,
            "nodeType": "InheritanceSpecifier",
            "src": "788:15:121"
          }
        ],
        "canonicalName": "VaultRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          40604,
          106626,
          273,
          103283,
          105472,
          105286,
          110310,
          110322,
          105359,
          109087
        ],
        "name": "VaultRouter",
        "nameLocation": "759:11:121",
        "scope": 40605,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 121
}